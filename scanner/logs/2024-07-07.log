2024-07-07 00:02:38 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 43400 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:02:38 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:02:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:02:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:02:39 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 00:02:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:02:39 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:02:39 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:02:40 [INFO] - Finished Spring Data repository scanning in 249 ms. Found 6 JPA repository interfaces.
2024-07-07 00:02:40 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:02:40 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:02:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:02:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:02:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:02:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:02:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:02:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:02:40 [INFO] - Finished Spring Data repository scanning in 43 ms. Found 1 Redis repository interface.
2024-07-07 00:02:40 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:02:40 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:02:40 [INFO] - Starting service [Tomcat]
2024-07-07 00:02:40 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:02:40 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:02:40 [INFO] - Root WebApplicationContext: initialization completed in 2220 ms
2024-07-07 00:02:41 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:02:41 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:02:41 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:02:41 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:02:41 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:02:41 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25589735
2024-07-07 00:02:41 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:02:42 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:02:43 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:02:44 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5697f801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15382815, org.springframework.security.web.context.SecurityContextHolderFilter@5118c7fb, org.springframework.security.web.header.HeaderWriterFilter@417f7d7f, org.springframework.security.web.authentication.logout.LogoutFilter@78b20c7f, com.exchange.scanner.security.service.utils.JwtTokenFilter@54c697c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3adf3670, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be84bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5e0621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39b265c9, org.springframework.security.web.session.SessionManagementFilter@5d0ea2af, org.springframework.security.web.access.ExceptionTranslationFilter@2c62f56f, org.springframework.security.web.access.intercept.AuthorizationFilter@3110bb19]
2024-07-07 00:02:44 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:02:44 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:02:44 [INFO] - Started ScannerApplication in 6.634 seconds (process running for 7.354)
2024-07-07 00:02:44 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:03:04 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:03:04 [INFO] - Accept=application/json
2024-07-07 00:03:04 [INFO] - Content-Type=application/json
2024-07-07 00:03:04 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:03:04 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:03:04 [INFO] - validate-recvwindow=5000
2024-07-07 00:03:04 [INFO] - validate-timestamp=1720299784837
2024-07-07 00:03:06 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:04:10 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 44220 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:04:10 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:04:10 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:04:10 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:04:10 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 00:04:11 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:04:11 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:04:11 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:04:11 [INFO] - Finished Spring Data repository scanning in 209 ms. Found 6 JPA repository interfaces.
2024-07-07 00:04:11 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:04:11 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:04:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:04:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:04:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:04:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:04:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:04:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:04:11 [INFO] - Finished Spring Data repository scanning in 42 ms. Found 1 Redis repository interface.
2024-07-07 00:04:12 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:04:12 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:04:12 [INFO] - Starting service [Tomcat]
2024-07-07 00:04:12 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:04:12 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:04:12 [INFO] - Root WebApplicationContext: initialization completed in 2147 ms
2024-07-07 00:04:12 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:04:12 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:04:12 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:04:12 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:04:12 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:04:12 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bb172dd
2024-07-07 00:04:12 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:04:14 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:04:14 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:04:15 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3bc00359, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30b91493, org.springframework.security.web.context.SecurityContextHolderFilter@57e6f449, org.springframework.security.web.header.HeaderWriterFilter@530e500c, org.springframework.security.web.authentication.logout.LogoutFilter@4f1cb802, com.exchange.scanner.security.service.utils.JwtTokenFilter@45775a15, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c64e2d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@419ac0f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@628fa8ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2771e501, org.springframework.security.web.session.SessionManagementFilter@1d5e0621, org.springframework.security.web.access.ExceptionTranslationFilter@7afffc81, org.springframework.security.web.access.intercept.AuthorizationFilter@48ebcce5]
2024-07-07 00:04:16 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:04:16 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:04:16 [INFO] - Started ScannerApplication in 6.571 seconds (process running for 7.334)
2024-07-07 00:04:16 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:04:36 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:04:36 [INFO] - Accept=application/json
2024-07-07 00:04:36 [INFO] - Content-Type=application/json
2024-07-07 00:04:36 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:04:36 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:04:36 [INFO] - validate-recvwindow=5000
2024-07-07 00:04:36 [INFO] - validate-timestamp=1720299876410
2024-07-07 00:04:37 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:05:55 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 43224 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:05:55 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:05:56 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:05:56 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:05:56 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 00:05:56 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:05:56 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:05:56 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:05:56 [INFO] - Finished Spring Data repository scanning in 220 ms. Found 6 JPA repository interfaces.
2024-07-07 00:05:56 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:05:56 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:05:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:05:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:05:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:05:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:05:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:05:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:05:56 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 00:05:57 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:05:57 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:05:57 [INFO] - Starting service [Tomcat]
2024-07-07 00:05:57 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:05:57 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:05:57 [INFO] - Root WebApplicationContext: initialization completed in 2126 ms
2024-07-07 00:05:57 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:05:58 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:05:58 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:05:58 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:05:58 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:05:58 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b8cf049
2024-07-07 00:05:58 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:05:59 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:05:59 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:06:01 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@685280dd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56957f08, org.springframework.security.web.context.SecurityContextHolderFilter@ba77dc6, org.springframework.security.web.header.HeaderWriterFilter@5d0ea2af, org.springframework.security.web.authentication.logout.LogoutFilter@84180e2, com.exchange.scanner.security.service.utils.JwtTokenFilter@304cad3a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3a7abd4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ce1ab4c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c62bae5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b0fc8c2, org.springframework.security.web.session.SessionManagementFilter@628fa8ea, org.springframework.security.web.access.ExceptionTranslationFilter@2f053ff3, org.springframework.security.web.access.intercept.AuthorizationFilter@7f1e946f]
2024-07-07 00:06:01 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:06:01 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:06:01 [INFO] - Started ScannerApplication in 6.607 seconds (process running for 7.33)
2024-07-07 00:06:01 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:06:21 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:06:21 [INFO] - Accept=application/json
2024-07-07 00:06:21 [INFO] - Content-Type=application/json
2024-07-07 00:06:21 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:06:21 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:06:21 [INFO] - validate-recvwindow=5000
2024-07-07 00:06:21 [INFO] - validate-timestamp=1720299981829
2024-07-07 00:06:22 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:07:46 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 44336 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:07:46 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:07:47 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:07:47 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:07:47 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 00:07:47 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:07:47 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:07:47 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:07:47 [INFO] - Finished Spring Data repository scanning in 192 ms. Found 6 JPA repository interfaces.
2024-07-07 00:07:47 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:07:47 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:07:47 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:07:47 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:07:47 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:07:47 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:07:47 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:07:47 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:07:47 [INFO] - Finished Spring Data repository scanning in 53 ms. Found 1 Redis repository interface.
2024-07-07 00:07:48 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:07:48 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:07:48 [INFO] - Starting service [Tomcat]
2024-07-07 00:07:48 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:07:48 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:07:48 [INFO] - Root WebApplicationContext: initialization completed in 2126 ms
2024-07-07 00:07:48 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:07:48 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:07:49 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:07:49 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:07:49 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:07:49 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71316cd7
2024-07-07 00:07:49 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:07:50 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:07:50 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:07:52 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3bc00359, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30b91493, org.springframework.security.web.context.SecurityContextHolderFilter@57e6f449, org.springframework.security.web.header.HeaderWriterFilter@530e500c, org.springframework.security.web.authentication.logout.LogoutFilter@4f1cb802, com.exchange.scanner.security.service.utils.JwtTokenFilter@2396dc4e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c64e2d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@419ac0f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@628fa8ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2771e501, org.springframework.security.web.session.SessionManagementFilter@1d5e0621, org.springframework.security.web.access.ExceptionTranslationFilter@7afffc81, org.springframework.security.web.access.intercept.AuthorizationFilter@48ebcce5]
2024-07-07 00:07:52 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:07:52 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:07:52 [INFO] - Started ScannerApplication in 6.635 seconds (process running for 7.389)
2024-07-07 00:07:52 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:08:13 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:08:13 [INFO] - Accept=application/json
2024-07-07 00:08:13 [INFO] - Content-Type=application/json
2024-07-07 00:08:13 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:08:13 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:08:13 [INFO] - validate-recvwindow=5000
2024-07-07 00:08:13 [INFO] - validate-timestamp=1720300093167
2024-07-07 00:08:14 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:09:10 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 13172 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:09:10 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:09:13 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:09:13 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:09:13 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 00:09:13 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:09:13 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:09:13 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:09:13 [INFO] - Finished Spring Data repository scanning in 214 ms. Found 6 JPA repository interfaces.
2024-07-07 00:09:13 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:09:13 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:09:13 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:09:13 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:09:13 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:09:13 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:09:13 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:09:13 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:09:13 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 00:09:14 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:09:14 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:09:14 [INFO] - Starting service [Tomcat]
2024-07-07 00:09:14 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:09:14 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:09:14 [INFO] - Root WebApplicationContext: initialization completed in 3861 ms
2024-07-07 00:09:14 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:09:14 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:09:14 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:09:15 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:09:15 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:09:15 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@13b29b34
2024-07-07 00:09:15 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:09:16 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:09:16 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:09:18 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4844cbe4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c752425, org.springframework.security.web.context.SecurityContextHolderFilter@1925b113, org.springframework.security.web.header.HeaderWriterFilter@2ee91bdf, org.springframework.security.web.authentication.logout.LogoutFilter@3606c525, com.exchange.scanner.security.service.utils.JwtTokenFilter@78de0f6f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4c29138a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f053ff3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69173bb7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f1e946f, org.springframework.security.web.session.SessionManagementFilter@730c9287, org.springframework.security.web.access.ExceptionTranslationFilter@4c2057c6, org.springframework.security.web.access.intercept.AuthorizationFilter@14d5b2ac]
2024-07-07 00:09:18 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:09:18 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:09:18 [INFO] - Started ScannerApplication in 8.251 seconds (process running for 9.419)
2024-07-07 00:09:18 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:09:38 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:09:38 [INFO] - Accept=application/json
2024-07-07 00:09:38 [INFO] - Content-Type=application/json
2024-07-07 00:09:38 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:09:38 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:09:38 [INFO] - validate-recvwindow=5000
2024-07-07 00:09:38 [INFO] - validate-timestamp=1720300178317
2024-07-07 00:09:39 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:10:20 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 45588 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:10:20 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:10:21 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:10:21 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:10:21 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 00:10:22 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:10:22 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:10:22 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:10:22 [INFO] - Finished Spring Data repository scanning in 183 ms. Found 6 JPA repository interfaces.
2024-07-07 00:10:22 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:10:22 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:10:22 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:10:22 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:10:22 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:10:22 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:10:22 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:10:22 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:10:22 [INFO] - Finished Spring Data repository scanning in 58 ms. Found 1 Redis repository interface.
2024-07-07 00:10:22 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:10:23 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:10:23 [INFO] - Starting service [Tomcat]
2024-07-07 00:10:23 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:10:23 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:10:23 [INFO] - Root WebApplicationContext: initialization completed in 2145 ms
2024-07-07 00:10:23 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:10:23 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:10:23 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:10:23 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:10:23 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:10:23 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cdd31a4
2024-07-07 00:10:23 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:10:25 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:10:25 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:10:26 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3846ba32, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40a32c25, org.springframework.security.web.context.SecurityContextHolderFilter@2ab4c4e, org.springframework.security.web.header.HeaderWriterFilter@2f053ff3, org.springframework.security.web.authentication.logout.LogoutFilter@1be6c991, com.exchange.scanner.security.service.utils.JwtTokenFilter@2396dc4e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@30b91493, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ba77dc6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14f05ca0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@685280dd, org.springframework.security.web.session.SessionManagementFilter@3a649f9a, org.springframework.security.web.access.ExceptionTranslationFilter@1925b113, org.springframework.security.web.access.intercept.AuthorizationFilter@4844cbe4]
2024-07-07 00:10:26 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:10:26 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:10:26 [INFO] - Started ScannerApplication in 6.552 seconds (process running for 7.263)
2024-07-07 00:10:26 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:10:46 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:10:46 [INFO] - Accept=application/json
2024-07-07 00:10:46 [INFO] - Content-Type=application/json
2024-07-07 00:10:46 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:10:46 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:10:46 [INFO] - validate-recvwindow=5000
2024-07-07 00:10:46 [INFO] - validate-timestamp=1720300246305
2024-07-07 00:10:47 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:15:30 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46004 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:15:30 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:15:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:15:31 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:15:31 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 00:15:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:15:31 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:15:31 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:15:31 [INFO] - Finished Spring Data repository scanning in 233 ms. Found 6 JPA repository interfaces.
2024-07-07 00:15:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:15:31 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:15:31 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:15:31 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:15:31 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:15:31 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:15:31 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:15:31 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:15:31 [INFO] - Finished Spring Data repository scanning in 44 ms. Found 1 Redis repository interface.
2024-07-07 00:15:32 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:15:32 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:15:32 [INFO] - Starting service [Tomcat]
2024-07-07 00:15:32 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:15:32 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:15:32 [INFO] - Root WebApplicationContext: initialization completed in 2175 ms
2024-07-07 00:15:33 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:15:33 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:15:33 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:15:33 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:15:33 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:15:33 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71316cd7
2024-07-07 00:15:33 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:15:34 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:15:34 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:15:36 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45da40ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11f6a083, org.springframework.security.web.context.SecurityContextHolderFilter@aee3d6e, org.springframework.security.web.header.HeaderWriterFilter@7afffc81, org.springframework.security.web.authentication.logout.LogoutFilter@4f142cbd, com.exchange.scanner.security.service.utils.JwtTokenFilter@2396dc4e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@15382815, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57e6f449, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a649f9a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bc00359, org.springframework.security.web.session.SessionManagementFilter@792b0cad, org.springframework.security.web.access.ExceptionTranslationFilter@3652ce04, org.springframework.security.web.access.intercept.AuthorizationFilter@3c3d2a80]
2024-07-07 00:15:36 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:15:36 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:15:36 [INFO] - Started ScannerApplication in 6.728 seconds (process running for 7.494)
2024-07-07 00:15:36 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:15:57 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:15:57 [INFO] - Accept=application/json
2024-07-07 00:15:57 [INFO] - Content-Type=application/json
2024-07-07 00:15:57 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:15:57 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:15:57 [INFO] - validate-recvwindow=5000
2024-07-07 00:15:57 [INFO] - validate-timestamp=1720300557070
2024-07-07 00:15:58 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:17:26 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 42920 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:17:26 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:17:27 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:17:27 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:17:27 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 00:17:27 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:17:27 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:17:27 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:17:27 [INFO] - Finished Spring Data repository scanning in 206 ms. Found 6 JPA repository interfaces.
2024-07-07 00:17:27 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:17:27 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:17:27 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:17:27 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:17:27 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:17:27 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:17:27 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:17:27 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:17:27 [INFO] - Finished Spring Data repository scanning in 50 ms. Found 1 Redis repository interface.
2024-07-07 00:17:28 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:17:28 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:17:28 [INFO] - Starting service [Tomcat]
2024-07-07 00:17:28 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:17:28 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:17:28 [INFO] - Root WebApplicationContext: initialization completed in 2133 ms
2024-07-07 00:17:28 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:17:28 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:17:28 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:17:29 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:17:29 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:17:29 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cdd31a4
2024-07-07 00:17:29 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:17:30 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:17:30 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:17:32 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3846ba32, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40a32c25, org.springframework.security.web.context.SecurityContextHolderFilter@2ab4c4e, org.springframework.security.web.header.HeaderWriterFilter@2f053ff3, org.springframework.security.web.authentication.logout.LogoutFilter@1be6c991, com.exchange.scanner.security.service.utils.JwtTokenFilter@2396dc4e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@30b91493, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ba77dc6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14f05ca0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@685280dd, org.springframework.security.web.session.SessionManagementFilter@3a649f9a, org.springframework.security.web.access.ExceptionTranslationFilter@1925b113, org.springframework.security.web.access.intercept.AuthorizationFilter@4844cbe4]
2024-07-07 00:17:32 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:17:32 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:17:32 [INFO] - Started ScannerApplication in 6.457 seconds (process running for 7.192)
2024-07-07 00:17:32 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:17:53 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:17:53 [INFO] - Accept=application/json
2024-07-07 00:17:53 [INFO] - Content-Type=application/json
2024-07-07 00:17:53 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:17:53 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:17:53 [INFO] - validate-recvwindow=5000
2024-07-07 00:17:53 [INFO] - validate-timestamp=1720300673190
2024-07-07 00:17:54 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:46:09 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 43604 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:46:09 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:46:10 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:46:10 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:46:10 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 00:46:11 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:46:11 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:46:11 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:46:11 [INFO] - Finished Spring Data repository scanning in 207 ms. Found 6 JPA repository interfaces.
2024-07-07 00:46:11 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:46:11 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:46:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:46:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:46:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:46:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:46:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:46:11 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:46:11 [INFO] - Finished Spring Data repository scanning in 56 ms. Found 1 Redis repository interface.
2024-07-07 00:46:12 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:46:12 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:46:12 [INFO] - Starting service [Tomcat]
2024-07-07 00:46:12 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:46:12 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:46:12 [INFO] - Root WebApplicationContext: initialization completed in 2347 ms
2024-07-07 00:46:12 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:46:12 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:46:12 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:46:12 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:46:12 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:46:13 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7dddfc35
2024-07-07 00:46:13 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:46:14 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:46:14 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:46:16 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b91493, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2771e501, org.springframework.security.web.context.SecurityContextHolderFilter@3a649f9a, org.springframework.security.web.header.HeaderWriterFilter@1c3b4de1, org.springframework.security.web.authentication.logout.LogoutFilter@1077a7, com.exchange.scanner.security.service.utils.JwtTokenFilter@7bb888b7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@45da40ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@628fa8ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ab4c4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a7abd4, org.springframework.security.web.session.SessionManagementFilter@aee3d6e, org.springframework.security.web.access.ExceptionTranslationFilter@730c9287, org.springframework.security.web.access.intercept.AuthorizationFilter@4c29138a]
2024-07-07 00:46:16 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:46:16 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:46:16 [INFO] - Started ScannerApplication in 6.886 seconds (process running for 7.662)
2024-07-07 00:46:16 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 00:46:36 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=enj_usdt&validate-signature=e3cab9c5fc962afac98c3b8c853c0f3775681c4cb5f9a24b5864419f58f7d6d5
2024-07-07 00:46:36 [INFO] - Accept=application/json
2024-07-07 00:46:36 [INFO] - Content-Type=application/json
2024-07-07 00:46:36 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:36 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:36 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:36 [INFO] - validate-timestamp=1720302396467
2024-07-07 00:46:37 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=michi_usdt&validate-signature=cc25828781185ba90e557d75f963e9dbd0ebe30609e6bdf6bb9a37147987484d
2024-07-07 00:46:37 [INFO] - Accept=application/json
2024-07-07 00:46:37 [INFO] - Content-Type=application/json
2024-07-07 00:46:37 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:37 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:37 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:37 [INFO] - validate-timestamp=1720302397345
2024-07-07 00:46:37 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=etc_usdt&validate-signature=5064247ef662f3747e68b828d9c4c11071d88aa2a07c460e0c99bef03587fd61
2024-07-07 00:46:37 [INFO] - Accept=application/json
2024-07-07 00:46:37 [INFO] - Content-Type=application/json
2024-07-07 00:46:37 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:37 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:37 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:37 [INFO] - validate-timestamp=1720302397583
2024-07-07 00:46:37 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=pit_usdt&validate-signature=97d576329bebd87c30f1fe5e5bc7121343f717732d7cc42270a58fe684818ed0
2024-07-07 00:46:37 [INFO] - Accept=application/json
2024-07-07 00:46:37 [INFO] - Content-Type=application/json
2024-07-07 00:46:37 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:37 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:37 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:37 [INFO] - validate-timestamp=1720302397821
2024-07-07 00:46:38 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=neox_usdt&validate-signature=fcb99a1740a0963cd552a79644be4999bcc89fb049fc86f40301ec2fd0851346
2024-07-07 00:46:38 [INFO] - Accept=application/json
2024-07-07 00:46:38 [INFO] - Content-Type=application/json
2024-07-07 00:46:38 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:38 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:38 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:38 [INFO] - validate-timestamp=1720302398061
2024-07-07 00:46:38 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=bendog_usdt&validate-signature=eddb76636b5c5419fd09e9d4a6191fd4f31aee4c3d1b4c9a60d49222741e34dd
2024-07-07 00:46:38 [INFO] - Accept=application/json
2024-07-07 00:46:38 [INFO] - Content-Type=application/json
2024-07-07 00:46:38 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:38 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:38 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:38 [INFO] - validate-timestamp=1720302398315
2024-07-07 00:46:38 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=creta_usdt&validate-signature=58be813ee47f9540e689d958b1b323847e680ca6eea77f8f7c7aa348f9d87175
2024-07-07 00:46:38 [INFO] - Accept=application/json
2024-07-07 00:46:38 [INFO] - Content-Type=application/json
2024-07-07 00:46:38 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:38 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:38 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:38 [INFO] - validate-timestamp=1720302398583
2024-07-07 00:46:39 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=btc_usdt&validate-signature=5c72aacfce4a455f9964f4b7d265d8447efa84c88f18d04d9927c0507bf4f2b7
2024-07-07 00:46:39 [INFO] - Accept=application/json
2024-07-07 00:46:39 [INFO] - Content-Type=application/json
2024-07-07 00:46:39 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:46:39 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:46:39 [INFO] - validate-recvwindow=5000
2024-07-07 00:46:39 [INFO] - validate-timestamp=1720302399011
2024-07-07 00:46:39 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 00:51:37 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 40396 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:51:37 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:51:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:51:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:51:38 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 00:51:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:51:38 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:51:38 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:51:38 [INFO] - Finished Spring Data repository scanning in 207 ms. Found 6 JPA repository interfaces.
2024-07-07 00:51:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:51:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:51:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:51:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:51:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:51:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:51:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:51:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:51:38 [INFO] - Finished Spring Data repository scanning in 52 ms. Found 1 Redis repository interface.
2024-07-07 00:51:39 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:51:39 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:51:39 [INFO] - Starting service [Tomcat]
2024-07-07 00:51:39 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:51:39 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:51:39 [INFO] - Root WebApplicationContext: initialization completed in 2259 ms
2024-07-07 00:51:39 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:51:39 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:51:39 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:51:40 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:51:40 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:51:40 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11d1735e
2024-07-07 00:51:40 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:51:41 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:51:41 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:51:43 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@18482805, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@84180e2, org.springframework.security.web.context.SecurityContextHolderFilter@417f7d7f, org.springframework.security.web.header.HeaderWriterFilter@205efdfc, org.springframework.security.web.authentication.logout.LogoutFilter@3c62bae5, com.exchange.scanner.security.service.utils.JwtTokenFilter@2c989d82, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6e0fd2dc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3652ce04, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40d1e561, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c3d2a80, org.springframework.security.web.session.SessionManagementFilter@2c3c05ff, org.springframework.security.web.access.ExceptionTranslationFilter@57642552, org.springframework.security.web.access.intercept.AuthorizationFilter@4b6abf4e]
2024-07-07 00:51:43 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:51:43 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:51:43 [INFO] - Started ScannerApplication in 6.781 seconds (process running for 7.63)
2024-07-07 00:51:43 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 00:52:04 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=enj_usdt
2024-07-07 00:52:04 [INFO] - Accept=application/json
2024-07-07 00:52:04 [INFO] - Content-Type=application/json
2024-07-07 00:52:04 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:04 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:04 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:04 [INFO] - validate-signature=e3cab9c5fc962afac98c3b8c853c0f3775681c4cb5f9a24b5864419f58f7d6d5
2024-07-07 00:52:04 [INFO] - validate-timestamp=1720302724197
2024-07-07 00:52:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=michi_usdt
2024-07-07 00:52:05 [INFO] - Accept=application/json
2024-07-07 00:52:05 [INFO] - Content-Type=application/json
2024-07-07 00:52:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:05 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:05 [INFO] - validate-signature=cc25828781185ba90e557d75f963e9dbd0ebe30609e6bdf6bb9a37147987484d
2024-07-07 00:52:05 [INFO] - validate-timestamp=1720302725081
2024-07-07 00:52:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=etc_usdt
2024-07-07 00:52:05 [INFO] - Accept=application/json
2024-07-07 00:52:05 [INFO] - Content-Type=application/json
2024-07-07 00:52:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:05 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:05 [INFO] - validate-signature=5064247ef662f3747e68b828d9c4c11071d88aa2a07c460e0c99bef03587fd61
2024-07-07 00:52:05 [INFO] - validate-timestamp=1720302725319
2024-07-07 00:52:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=pit_usdt
2024-07-07 00:52:05 [INFO] - Accept=application/json
2024-07-07 00:52:05 [INFO] - Content-Type=application/json
2024-07-07 00:52:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:05 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:05 [INFO] - validate-signature=97d576329bebd87c30f1fe5e5bc7121343f717732d7cc42270a58fe684818ed0
2024-07-07 00:52:05 [INFO] - validate-timestamp=1720302725542
2024-07-07 00:52:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=neox_usdt
2024-07-07 00:52:05 [INFO] - Accept=application/json
2024-07-07 00:52:05 [INFO] - Content-Type=application/json
2024-07-07 00:52:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:05 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:05 [INFO] - validate-signature=fcb99a1740a0963cd552a79644be4999bcc89fb049fc86f40301ec2fd0851346
2024-07-07 00:52:05 [INFO] - validate-timestamp=1720302725765
2024-07-07 00:52:06 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=bendog_usdt
2024-07-07 00:52:06 [INFO] - Accept=application/json
2024-07-07 00:52:06 [INFO] - Content-Type=application/json
2024-07-07 00:52:06 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:06 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:06 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:06 [INFO] - validate-signature=eddb76636b5c5419fd09e9d4a6191fd4f31aee4c3d1b4c9a60d49222741e34dd
2024-07-07 00:52:06 [INFO] - validate-timestamp=1720302726179
2024-07-07 00:52:06 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=creta_usdt
2024-07-07 00:52:06 [INFO] - Accept=application/json
2024-07-07 00:52:06 [INFO] - Content-Type=application/json
2024-07-07 00:52:06 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:06 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:06 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:06 [INFO] - validate-signature=58be813ee47f9540e689d958b1b323847e680ca6eea77f8f7c7aa348f9d87175
2024-07-07 00:52:06 [INFO] - validate-timestamp=1720302726431
2024-07-07 00:52:06 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=btc_usdt
2024-07-07 00:52:06 [INFO] - Accept=application/json
2024-07-07 00:52:06 [INFO] - Content-Type=application/json
2024-07-07 00:52:06 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:52:06 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:52:06 [INFO] - validate-recvwindow=5000
2024-07-07 00:52:06 [INFO] - validate-signature=5c72aacfce4a455f9964f4b7d265d8447efa84c88f18d04d9927c0507bf4f2b7
2024-07-07 00:52:06 [INFO] - validate-timestamp=1720302726653
2024-07-07 00:52:07 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 00:53:16 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 43240 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:53:16 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:53:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:53:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:53:17 [INFO] - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-07 00:53:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:53:17 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:53:17 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:53:17 [INFO] - Finished Spring Data repository scanning in 217 ms. Found 6 JPA repository interfaces.
2024-07-07 00:53:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:53:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:53:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:17 [INFO] - Finished Spring Data repository scanning in 42 ms. Found 1 Redis repository interface.
2024-07-07 00:53:18 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:53:18 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:53:18 [INFO] - Starting service [Tomcat]
2024-07-07 00:53:18 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:53:18 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:53:18 [INFO] - Root WebApplicationContext: initialization completed in 2592 ms
2024-07-07 00:53:18 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:53:18 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:53:19 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:53:19 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:53:19 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:53:19 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70169464
2024-07-07 00:53:19 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:53:20 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:53:21 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:53:31 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46100 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:53:31 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:53:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:53:32 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:53:32 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 00:53:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:53:32 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:53:33 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:53:33 [INFO] - Finished Spring Data repository scanning in 224 ms. Found 6 JPA repository interfaces.
2024-07-07 00:53:33 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:53:33 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:53:33 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:33 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:33 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:33 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:33 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:33 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:53:33 [INFO] - Finished Spring Data repository scanning in 52 ms. Found 1 Redis repository interface.
2024-07-07 00:53:33 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:53:34 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:53:34 [INFO] - Starting service [Tomcat]
2024-07-07 00:53:34 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:53:34 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:53:34 [INFO] - Root WebApplicationContext: initialization completed in 2221 ms
2024-07-07 00:53:34 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:53:34 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:53:34 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:53:34 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:53:34 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:53:34 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dfcf85a
2024-07-07 00:53:34 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:53:36 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:53:36 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:53:37 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5697f801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15382815, org.springframework.security.web.context.SecurityContextHolderFilter@5118c7fb, org.springframework.security.web.header.HeaderWriterFilter@417f7d7f, org.springframework.security.web.authentication.logout.LogoutFilter@78b20c7f, com.exchange.scanner.security.service.utils.JwtTokenFilter@140fa482, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3adf3670, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be84bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5e0621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39b265c9, org.springframework.security.web.session.SessionManagementFilter@5d0ea2af, org.springframework.security.web.access.ExceptionTranslationFilter@2c62f56f, org.springframework.security.web.access.intercept.AuthorizationFilter@3110bb19]
2024-07-07 00:53:38 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:53:38 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:53:38 [INFO] - Started ScannerApplication in 6.837 seconds (process running for 7.624)
2024-07-07 00:53:38 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:53:58 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:53:58 [INFO] - Accept=application/json
2024-07-07 00:53:58 [INFO] - Content-Type=application/json
2024-07-07 00:53:58 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:53:58 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:53:58 [INFO] - validate-recvwindow=5000
2024-07-07 00:53:58 [INFO] - validate-signature=4c998df72414755f5c07f9bbcb8f175b56746f9432348201c4c50da76fb68cf2
2024-07-07 00:53:58 [INFO] - validate-timestamp=1720302838523
2024-07-07 00:53:59 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 00:55:11 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46780 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 00:55:11 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 00:55:11 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:55:11 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:55:11 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 00:55:12 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:55:12 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 00:55:12 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 00:55:12 [INFO] - Finished Spring Data repository scanning in 198 ms. Found 6 JPA repository interfaces.
2024-07-07 00:55:12 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 00:55:12 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 00:55:12 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:55:12 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:55:12 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:55:12 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:55:12 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:55:12 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 00:55:12 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 00:55:13 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 00:55:13 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 00:55:13 [INFO] - Starting service [Tomcat]
2024-07-07 00:55:13 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 00:55:13 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 00:55:13 [INFO] - Root WebApplicationContext: initialization completed in 2120 ms
2024-07-07 00:55:13 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 00:55:13 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 00:55:13 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 00:55:13 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 00:55:13 [INFO] - HikariPool-1 - Starting...
2024-07-07 00:55:14 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69f69078
2024-07-07 00:55:14 [INFO] - HikariPool-1 - Start completed.
2024-07-07 00:55:15 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 00:55:15 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 00:55:16 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45da40ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11f6a083, org.springframework.security.web.context.SecurityContextHolderFilter@aee3d6e, org.springframework.security.web.header.HeaderWriterFilter@7afffc81, org.springframework.security.web.authentication.logout.LogoutFilter@4f142cbd, com.exchange.scanner.security.service.utils.JwtTokenFilter@588614f9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@15382815, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57e6f449, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a649f9a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bc00359, org.springframework.security.web.session.SessionManagementFilter@792b0cad, org.springframework.security.web.access.ExceptionTranslationFilter@3652ce04, org.springframework.security.web.access.intercept.AuthorizationFilter@3c3d2a80]
2024-07-07 00:55:17 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 00:55:17 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 00:55:17 [INFO] - Started ScannerApplication in 6.537 seconds (process running for 7.279)
2024-07-07 00:55:17 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 00:55:38 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=enj_usdt
2024-07-07 00:55:38 [INFO] - Accept=application/json
2024-07-07 00:55:38 [INFO] - Content-Type=application/json
2024-07-07 00:55:38 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:38 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:38 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:38 [INFO] - validate-signature=e3cab9c5fc962afac98c3b8c853c0f3775681c4cb5f9a24b5864419f58f7d6d5
2024-07-07 00:55:38 [INFO] - validate-timestamp=1720302938355
2024-07-07 00:55:39 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=michi_usdt
2024-07-07 00:55:39 [INFO] - Accept=application/json
2024-07-07 00:55:39 [INFO] - Content-Type=application/json
2024-07-07 00:55:39 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:39 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:39 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:39 [INFO] - validate-signature=cc25828781185ba90e557d75f963e9dbd0ebe30609e6bdf6bb9a37147987484d
2024-07-07 00:55:39 [INFO] - validate-timestamp=1720302939228
2024-07-07 00:55:39 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=etc_usdt
2024-07-07 00:55:39 [INFO] - Accept=application/json
2024-07-07 00:55:39 [INFO] - Content-Type=application/json
2024-07-07 00:55:39 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:39 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:39 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:39 [INFO] - validate-signature=5064247ef662f3747e68b828d9c4c11071d88aa2a07c460e0c99bef03587fd61
2024-07-07 00:55:39 [INFO] - validate-timestamp=1720302939451
2024-07-07 00:55:39 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=pit_usdt
2024-07-07 00:55:39 [INFO] - Accept=application/json
2024-07-07 00:55:39 [INFO] - Content-Type=application/json
2024-07-07 00:55:39 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:39 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:39 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:39 [INFO] - validate-signature=97d576329bebd87c30f1fe5e5bc7121343f717732d7cc42270a58fe684818ed0
2024-07-07 00:55:39 [INFO] - validate-timestamp=1720302939675
2024-07-07 00:55:39 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=neox_usdt
2024-07-07 00:55:39 [INFO] - Accept=application/json
2024-07-07 00:55:39 [INFO] - Content-Type=application/json
2024-07-07 00:55:39 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:39 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:39 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:39 [INFO] - validate-signature=fcb99a1740a0963cd552a79644be4999bcc89fb049fc86f40301ec2fd0851346
2024-07-07 00:55:39 [INFO] - validate-timestamp=1720302939897
2024-07-07 00:55:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=bendog_usdt
2024-07-07 00:55:40 [INFO] - Accept=application/json
2024-07-07 00:55:40 [INFO] - Content-Type=application/json
2024-07-07 00:55:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:40 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:40 [INFO] - validate-signature=eddb76636b5c5419fd09e9d4a6191fd4f31aee4c3d1b4c9a60d49222741e34dd
2024-07-07 00:55:40 [INFO] - validate-timestamp=1720302940135
2024-07-07 00:55:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=creta_usdt
2024-07-07 00:55:40 [INFO] - Accept=application/json
2024-07-07 00:55:40 [INFO] - Content-Type=application/json
2024-07-07 00:55:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:40 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:40 [INFO] - validate-signature=58be813ee47f9540e689d958b1b323847e680ca6eea77f8f7c7aa348f9d87175
2024-07-07 00:55:40 [INFO] - validate-timestamp=1720302940356
2024-07-07 00:55:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=btc_usdt
2024-07-07 00:55:40 [INFO] - Accept=application/json
2024-07-07 00:55:40 [INFO] - Content-Type=application/json
2024-07-07 00:55:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:55:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:55:40 [INFO] - validate-recvwindow=5000
2024-07-07 00:55:40 [INFO] - validate-signature=5c72aacfce4a455f9964f4b7d265d8447efa84c88f18d04d9927c0507bf4f2b7
2024-07-07 00:55:40 [INFO] - validate-timestamp=1720302940592
2024-07-07 00:55:40 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 00:55:41 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 00:56:00 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 00:56:00 [INFO] - Accept=application/json
2024-07-07 00:56:00 [INFO] - Content-Type=application/json
2024-07-07 00:56:00 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 00:56:00 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 00:56:00 [INFO] - validate-recvwindow=5000
2024-07-07 00:56:00 [INFO] - validate-signature=4c998df72414755f5c07f9bbcb8f175b56746f9432348201c4c50da76fb68cf2
2024-07-07 00:56:00 [INFO] - validate-timestamp=1720302960374
2024-07-07 00:56:01 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 01:00:12 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 45904 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:00:12 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:00:13 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:00:13 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:00:13 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 01:00:14 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:00:14 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:00:14 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:00:14 [INFO] - Finished Spring Data repository scanning in 222 ms. Found 6 JPA repository interfaces.
2024-07-07 01:00:14 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:00:14 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:00:14 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:00:14 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:00:14 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:00:14 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:00:14 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:00:14 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:00:14 [INFO] - Finished Spring Data repository scanning in 43 ms. Found 1 Redis repository interface.
2024-07-07 01:00:15 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:00:15 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:00:15 [INFO] - Starting service [Tomcat]
2024-07-07 01:00:15 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:00:15 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:00:15 [INFO] - Root WebApplicationContext: initialization completed in 2169 ms
2024-07-07 01:00:15 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:00:15 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:00:15 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:00:15 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:00:15 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:00:15 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dfcf85a
2024-07-07 01:00:15 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:00:17 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:00:17 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:00:18 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f6e6902, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d8236c, org.springframework.security.web.context.SecurityContextHolderFilter@7fec354, org.springframework.security.web.header.HeaderWriterFilter@2c62f56f, org.springframework.security.web.authentication.logout.LogoutFilter@676c3745, com.exchange.scanner.security.service.utils.JwtTokenFilter@588614f9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7f1e946f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5118c7fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@792b0cad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5697f801, org.springframework.security.web.session.SessionManagementFilter@2f053ff3, org.springframework.security.web.access.ExceptionTranslationFilter@4a6dd88e, org.springframework.security.web.access.intercept.AuthorizationFilter@1077a7]
2024-07-07 01:00:19 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:00:19 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:00:19 [INFO] - Started ScannerApplication in 6.711 seconds (process running for 7.452)
2024-07-07 01:00:19 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:00:39 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=enj_usdt
2024-07-07 01:00:39 [INFO] - Accept=application/json
2024-07-07 01:00:39 [INFO] - Content-Type=application/json
2024-07-07 01:00:39 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:39 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:39 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:39 [INFO] - validate-signature=cf70655fd86bba2cc7826e46ad73abd3e3c176e341e38b42155385d2ce811e47
2024-07-07 01:00:39 [INFO] - validate-timestamp=1720303239253
2024-07-07 01:00:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=michi_usdt
2024-07-07 01:00:40 [INFO] - Accept=application/json
2024-07-07 01:00:40 [INFO] - Content-Type=application/json
2024-07-07 01:00:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:40 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:40 [INFO] - validate-signature=cc0a42fba3f6794ffabf3c718d1561c4bd35e4d43ef835d0ab757546b5ca2631
2024-07-07 01:00:40 [INFO] - validate-timestamp=1720303240122
2024-07-07 01:00:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=etc_usdt
2024-07-07 01:00:40 [INFO] - Accept=application/json
2024-07-07 01:00:40 [INFO] - Content-Type=application/json
2024-07-07 01:00:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:40 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:40 [INFO] - validate-signature=12663e6359c17a6409ce44a7ded1478131493f1652d0733250a9761ad0d25ad4
2024-07-07 01:00:40 [INFO] - validate-timestamp=1720303240361
2024-07-07 01:00:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=pit_usdt
2024-07-07 01:00:40 [INFO] - Accept=application/json
2024-07-07 01:00:40 [INFO] - Content-Type=application/json
2024-07-07 01:00:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:40 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:40 [INFO] - validate-signature=59bd82ae30df3d218829c8c1780e885180b850d41256c344650414fa024c1b8b
2024-07-07 01:00:40 [INFO] - validate-timestamp=1720303240600
2024-07-07 01:00:40 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=neox_usdt
2024-07-07 01:00:40 [INFO] - Accept=application/json
2024-07-07 01:00:40 [INFO] - Content-Type=application/json
2024-07-07 01:00:40 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:40 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:40 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:40 [INFO] - validate-signature=4418406e02a24f8a623a8f172c0e8d229043aa8a6a601c570320982b3505647a
2024-07-07 01:00:40 [INFO] - validate-timestamp=1720303240824
2024-07-07 01:00:41 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=bendog_usdt
2024-07-07 01:00:41 [INFO] - Accept=application/json
2024-07-07 01:00:41 [INFO] - Content-Type=application/json
2024-07-07 01:00:41 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:41 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:41 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:41 [INFO] - validate-signature=92263038d07b21f65bd7031a8201f9e18c87d4e6d776fccd352565ef5c43660d
2024-07-07 01:00:41 [INFO] - validate-timestamp=1720303241048
2024-07-07 01:00:41 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=creta_usdt
2024-07-07 01:00:41 [INFO] - Accept=application/json
2024-07-07 01:00:41 [INFO] - Content-Type=application/json
2024-07-07 01:00:41 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:41 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:41 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:41 [INFO] - validate-signature=40d042498b386edbd514d657519d2fe145ce9f8d7666ab898d014b0ed4ba59d5
2024-07-07 01:00:41 [INFO] - validate-timestamp=1720303241460
2024-07-07 01:00:41 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=btc_usdt
2024-07-07 01:00:41 [INFO] - Accept=application/json
2024-07-07 01:00:41 [INFO] - Content-Type=application/json
2024-07-07 01:00:41 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:00:41 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:00:41 [INFO] - validate-recvwindow=5000
2024-07-07 01:00:41 [INFO] - validate-signature=b96743f9f8ec5547ac0cec847495201d0e374a99f1c1f45caf675fd4badc5cdb
2024-07-07 01:00:41 [INFO] - validate-timestamp=1720303241870
2024-07-07 01:00:42 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:00:42 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 01:01:00 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 01:01:00 [INFO] - Accept=application/json
2024-07-07 01:01:00 [INFO] - Content-Type=application/json
2024-07-07 01:01:00 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:01:00 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:01:00 [INFO] - validate-recvwindow=5000
2024-07-07 01:01:00 [INFO] - validate-signature=03d6d4e333cdb4379d0400d882c1dea91ada2c395557a450a1fb9d601e3539cd
2024-07-07 01:01:00 [INFO] - validate-timestamp=1720303260891
2024-07-07 01:01:01 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 01:02:47 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 44068 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:02:47 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:02:48 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:02:48 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:02:48 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 01:02:48 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:02:48 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:02:49 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:02:49 [INFO] - Finished Spring Data repository scanning in 222 ms. Found 6 JPA repository interfaces.
2024-07-07 01:02:49 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:02:49 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:02:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:02:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:02:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:02:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:02:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:02:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:02:49 [INFO] - Finished Spring Data repository scanning in 49 ms. Found 1 Redis repository interface.
2024-07-07 01:02:50 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:02:50 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:02:50 [INFO] - Starting service [Tomcat]
2024-07-07 01:02:50 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:02:50 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:02:50 [INFO] - Root WebApplicationContext: initialization completed in 2157 ms
2024-07-07 01:02:50 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:02:50 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:02:50 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:02:50 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:02:50 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:02:50 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b8cf049
2024-07-07 01:02:50 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:03:05 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 39080 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:03:05 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:03:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:03:06 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:03:06 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 01:03:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:03:06 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:03:07 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:03:07 [INFO] - Finished Spring Data repository scanning in 208 ms. Found 6 JPA repository interfaces.
2024-07-07 01:03:07 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:03:07 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:03:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:03:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:03:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:03:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:03:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:03:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:03:07 [INFO] - Finished Spring Data repository scanning in 52 ms. Found 1 Redis repository interface.
2024-07-07 01:03:07 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:03:07 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:03:07 [INFO] - Starting service [Tomcat]
2024-07-07 01:03:07 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:03:08 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:03:08 [INFO] - Root WebApplicationContext: initialization completed in 2158 ms
2024-07-07 01:03:08 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:03:08 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:03:08 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:03:08 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:03:08 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:03:08 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71316cd7
2024-07-07 01:03:08 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:03:09 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:03:10 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:03:11 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a7abd4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3846ba32, org.springframework.security.web.context.SecurityContextHolderFilter@628fa8ea, org.springframework.security.web.header.HeaderWriterFilter@eaa901a, org.springframework.security.web.authentication.logout.LogoutFilter@3110bb19, com.exchange.scanner.security.service.utils.JwtTokenFilter@2396dc4e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3bc00359, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cad8bce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba77dc6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40a32c25, org.springframework.security.web.session.SessionManagementFilter@57e6f449, org.springframework.security.web.access.ExceptionTranslationFilter@1c3b4de1, org.springframework.security.web.access.intercept.AuthorizationFilter@5edeb83e]
2024-07-07 01:03:11 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:03:11 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:03:11 [INFO] - Started ScannerApplication in 6.624 seconds (process running for 7.36)
2024-07-07 01:03:11 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:03:32 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=enj_usdt
2024-07-07 01:03:32 [INFO] - Accept=application/json
2024-07-07 01:03:32 [INFO] - Content-Type=application/json
2024-07-07 01:03:32 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:32 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:32 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:32 [INFO] - validate-signature=2fd80016edb42bb027a779323bcc5299b31987acb9a7db0381dab457543ba827
2024-07-07 01:03:32 [INFO] - validate-timestamp=1720303412251
2024-07-07 01:03:33 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=michi_usdt
2024-07-07 01:03:33 [INFO] - Accept=application/json
2024-07-07 01:03:33 [INFO] - Content-Type=application/json
2024-07-07 01:03:33 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:33 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:33 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:33 [INFO] - validate-signature=925fa7a3b9a36576f90721bbc4e63898d1649e6263ec464146275e49f9e7b05d
2024-07-07 01:03:33 [INFO] - validate-timestamp=1720303413115
2024-07-07 01:03:33 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=etc_usdt
2024-07-07 01:03:33 [INFO] - Accept=application/json
2024-07-07 01:03:33 [INFO] - Content-Type=application/json
2024-07-07 01:03:33 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:33 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:33 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:33 [INFO] - validate-signature=ae7778bcb469adb0a6bf7ac510d5f331800091eb4265856d5f9188d46de66c43
2024-07-07 01:03:33 [INFO] - validate-timestamp=1720303413339
2024-07-07 01:03:33 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=pit_usdt
2024-07-07 01:03:33 [INFO] - Accept=application/json
2024-07-07 01:03:33 [INFO] - Content-Type=application/json
2024-07-07 01:03:33 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:33 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:33 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:33 [INFO] - validate-signature=c17209f3b1e53cd5150e184cd27aba1ec024a5d2f448da31163a58f2a140fbac
2024-07-07 01:03:33 [INFO] - validate-timestamp=1720303413749
2024-07-07 01:03:33 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=neox_usdt
2024-07-07 01:03:33 [INFO] - Accept=application/json
2024-07-07 01:03:33 [INFO] - Content-Type=application/json
2024-07-07 01:03:33 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:33 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:33 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:33 [INFO] - validate-signature=e803d401ff7e387d8f0b96bcf5656ced33d1bb3beaba6ff7ecabf09f6403b6aa
2024-07-07 01:03:33 [INFO] - validate-timestamp=1720303413976
2024-07-07 01:03:34 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=bendog_usdt
2024-07-07 01:03:34 [INFO] - Accept=application/json
2024-07-07 01:03:34 [INFO] - Content-Type=application/json
2024-07-07 01:03:34 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:34 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:34 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:34 [INFO] - validate-signature=0c66e8b8a52236cd142b23a5df1e65703e7e06e077e675b6b6607c5aa9649b27
2024-07-07 01:03:34 [INFO] - validate-timestamp=1720303414240
2024-07-07 01:03:34 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=creta_usdt
2024-07-07 01:03:34 [INFO] - Accept=application/json
2024-07-07 01:03:34 [INFO] - Content-Type=application/json
2024-07-07 01:03:34 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:34 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:34 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:34 [INFO] - validate-signature=6fcf504eea3974186cc0d705d9856212fc6c52dd949600c93a2d6f84c8c2c310
2024-07-07 01:03:34 [INFO] - validate-timestamp=1720303414478
2024-07-07 01:03:34 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=btc_usdt
2024-07-07 01:03:34 [INFO] - Accept=application/json
2024-07-07 01:03:34 [INFO] - Content-Type=application/json
2024-07-07 01:03:34 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:03:34 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:03:34 [INFO] - validate-recvwindow=5000
2024-07-07 01:03:34 [INFO] - validate-signature=76947feb1470652d3810874affe100da8e62f7d4be79e06620ff8cba8aa97624
2024-07-07 01:03:34 [INFO] - validate-timestamp=1720303414889
2024-07-07 01:03:35 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:04:37 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 43784 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:04:37 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:04:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:04:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:04:38 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 01:04:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:04:38 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:04:38 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:04:38 [INFO] - Finished Spring Data repository scanning in 196 ms. Found 6 JPA repository interfaces.
2024-07-07 01:04:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:04:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:04:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:04:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:04:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:04:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:04:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:04:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:04:39 [INFO] - Finished Spring Data repository scanning in 51 ms. Found 1 Redis repository interface.
2024-07-07 01:04:39 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:04:39 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:04:39 [INFO] - Starting service [Tomcat]
2024-07-07 01:04:39 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:04:39 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:04:39 [INFO] - Root WebApplicationContext: initialization completed in 2126 ms
2024-07-07 01:04:40 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:04:40 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:04:40 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:04:40 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:04:40 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:04:40 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70169464
2024-07-07 01:04:40 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:04:41 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:04:41 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:04:43 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4c752425, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f1e946f, org.springframework.security.web.context.SecurityContextHolderFilter@eaa901a, org.springframework.security.web.header.HeaderWriterFilter@1a034bbc, org.springframework.security.web.authentication.logout.LogoutFilter@4b6abf4e, com.exchange.scanner.security.service.utils.JwtTokenFilter@5fdff4f1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@199549a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69173bb7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d0ea2af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@542adcfa, org.springframework.security.web.session.SessionManagementFilter@530e500c, org.springframework.security.web.access.ExceptionTranslationFilter@7abc838a, org.springframework.security.web.access.intercept.AuthorizationFilter@272d0dd3]
2024-07-07 01:04:43 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:04:43 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:04:43 [INFO] - Started ScannerApplication in 6.505 seconds (process running for 7.233)
2024-07-07 01:04:43 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:05:04 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=enj_usdt
2024-07-07 01:05:04 [INFO] - Accept=application/json
2024-07-07 01:05:04 [INFO] - Content-Type=application/json
2024-07-07 01:05:04 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:04 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:04 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:04 [INFO] - validate-signature=0343af767451252efcade742ce0a45fe99764a09d3950704a755d1d12165014b
2024-07-07 01:05:04 [INFO] - validate-timestamp=1720303504154
2024-07-07 01:05:04 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=michi_usdt
2024-07-07 01:05:04 [INFO] - Accept=application/json
2024-07-07 01:05:04 [INFO] - Content-Type=application/json
2024-07-07 01:05:04 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:04 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:04 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:04 [INFO] - validate-signature=c6396d2c418d853906fbc776dfd159d64ab246626798c5edcb39ccc3f56f5237
2024-07-07 01:05:04 [INFO] - validate-timestamp=1720303504997
2024-07-07 01:05:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=etc_usdt
2024-07-07 01:05:05 [INFO] - Accept=application/json
2024-07-07 01:05:05 [INFO] - Content-Type=application/json
2024-07-07 01:05:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:05 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:05 [INFO] - validate-signature=152f8525e0ed9d5d2ec63bcd81df70abf079b225b1e02943d8e1e7d8e4e9d1ff
2024-07-07 01:05:05 [INFO] - validate-timestamp=1720303505221
2024-07-07 01:05:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=pit_usdt
2024-07-07 01:05:05 [INFO] - Accept=application/json
2024-07-07 01:05:05 [INFO] - Content-Type=application/json
2024-07-07 01:05:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:05 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:05 [INFO] - validate-signature=fdb0a4bd5fef5dd2bf19c5775d24853cb095dc3dbe296181f9f360bf6e75ef76
2024-07-07 01:05:05 [INFO] - validate-timestamp=1720303505443
2024-07-07 01:05:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=neox_usdt
2024-07-07 01:05:05 [INFO] - Accept=application/json
2024-07-07 01:05:05 [INFO] - Content-Type=application/json
2024-07-07 01:05:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:05 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:05 [INFO] - validate-signature=a2641204f15df2a0fbdfb39d2ba9d75132633b11ce39e54344d65867dd7f0514
2024-07-07 01:05:05 [INFO] - validate-timestamp=1720303505664
2024-07-07 01:05:05 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=bendog_usdt
2024-07-07 01:05:05 [INFO] - Accept=application/json
2024-07-07 01:05:05 [INFO] - Content-Type=application/json
2024-07-07 01:05:05 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:05 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:05 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:05 [INFO] - validate-signature=0c4cb1aabafb0d555ba4d36589fe79addf33839d7feda2bde5cf88e27f4f1bfc
2024-07-07 01:05:05 [INFO] - validate-timestamp=1720303505887
2024-07-07 01:05:06 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=creta_usdt
2024-07-07 01:05:06 [INFO] - Accept=application/json
2024-07-07 01:05:06 [INFO] - Content-Type=application/json
2024-07-07 01:05:06 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:06 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:06 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:06 [INFO] - validate-signature=fbd038e2514aa944756b4e40d0f0fa23ad265b0873de21b6ff872461f16a80e1
2024-07-07 01:05:06 [INFO] - validate-timestamp=1720303506111
2024-07-07 01:05:06 [INFO] - Request: GET https://sapi.xt.com/v4/trade?symbol=btc_usdt
2024-07-07 01:05:06 [INFO] - Accept=application/json
2024-07-07 01:05:06 [INFO] - Content-Type=application/json
2024-07-07 01:05:06 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 01:05:06 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 01:05:06 [INFO] - validate-recvwindow=5000
2024-07-07 01:05:06 [INFO] - validate-signature=398599a3161b8868e08b41750930f528d3c6c1724e605d52b6b7c57b4f94852a
2024-07-07 01:05:06 [INFO] - validate-timestamp=1720303506347
2024-07-07 01:05:06 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:06:37 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46892 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:06:37 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:06:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:06:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:06:38 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 01:06:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:06:38 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:06:39 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:06:39 [INFO] - Finished Spring Data repository scanning in 233 ms. Found 6 JPA repository interfaces.
2024-07-07 01:06:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:06:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:06:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:06:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:06:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:06:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:06:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:06:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:06:39 [INFO] - Finished Spring Data repository scanning in 47 ms. Found 1 Redis repository interface.
2024-07-07 01:06:39 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:06:40 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:06:40 [INFO] - Starting service [Tomcat]
2024-07-07 01:06:40 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:06:40 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:06:40 [INFO] - Root WebApplicationContext: initialization completed in 2174 ms
2024-07-07 01:06:40 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:06:40 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:06:40 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:06:40 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:06:40 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:06:41 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25589735
2024-07-07 01:06:41 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:06:42 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:06:42 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:06:43 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5697f801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15382815, org.springframework.security.web.context.SecurityContextHolderFilter@5118c7fb, org.springframework.security.web.header.HeaderWriterFilter@417f7d7f, org.springframework.security.web.authentication.logout.LogoutFilter@78b20c7f, com.exchange.scanner.security.service.utils.JwtTokenFilter@1fd73dcb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3adf3670, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be84bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5e0621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39b265c9, org.springframework.security.web.session.SessionManagementFilter@5d0ea2af, org.springframework.security.web.access.ExceptionTranslationFilter@2c62f56f, org.springframework.security.web.access.intercept.AuthorizationFilter@3110bb19]
2024-07-07 01:06:44 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:06:44 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:06:44 [INFO] - Started ScannerApplication in 6.89 seconds (process running for 7.628)
2024-07-07 01:06:44 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:07:04 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:07:07 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:07:07 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 01:07:07 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 01:08:47 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46164 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:08:47 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:08:48 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:08:48 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:08:48 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 01:08:48 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:08:48 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:08:49 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:08:49 [INFO] - Finished Spring Data repository scanning in 215 ms. Found 6 JPA repository interfaces.
2024-07-07 01:08:49 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:08:49 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:08:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:08:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:08:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:08:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:08:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:08:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:08:49 [INFO] - Finished Spring Data repository scanning in 44 ms. Found 1 Redis repository interface.
2024-07-07 01:08:49 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:08:49 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:08:49 [INFO] - Starting service [Tomcat]
2024-07-07 01:08:49 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:08:50 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:08:50 [INFO] - Root WebApplicationContext: initialization completed in 2327 ms
2024-07-07 01:08:50 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:08:50 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:08:50 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:08:50 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:08:50 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:08:50 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25589735
2024-07-07 01:08:50 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:08:52 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:08:52 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:08:53 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@39b265c9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c64e2d0, org.springframework.security.web.context.SecurityContextHolderFilter@8be84bf, org.springframework.security.web.header.HeaderWriterFilter@3652ce04, org.springframework.security.web.authentication.logout.LogoutFilter@14d5b2ac, com.exchange.scanner.security.service.utils.JwtTokenFilter@45775a15, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@54d8236c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@aee3d6e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b8106fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45da40ad, org.springframework.security.web.session.SessionManagementFilter@1828eff, org.springframework.security.web.access.ExceptionTranslationFilter@417f7d7f, org.springframework.security.web.access.intercept.AuthorizationFilter@18482805]
2024-07-07 01:08:54 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:08:54 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:08:54 [INFO] - Started ScannerApplication in 6.847 seconds (process running for 7.571)
2024-07-07 01:08:54 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:09:10 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:09:12 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:09:12 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 01:09:12 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 01:10:34 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46816 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:10:34 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:10:35 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:10:35 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:10:35 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 01:10:36 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:10:36 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:10:36 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:10:36 [INFO] - Finished Spring Data repository scanning in 228 ms. Found 6 JPA repository interfaces.
2024-07-07 01:10:36 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:10:36 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:10:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:10:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:10:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:10:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:10:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:10:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:10:36 [INFO] - Finished Spring Data repository scanning in 62 ms. Found 1 Redis repository interface.
2024-07-07 01:10:37 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:10:37 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:10:37 [INFO] - Starting service [Tomcat]
2024-07-07 01:10:37 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:10:37 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:10:37 [INFO] - Root WebApplicationContext: initialization completed in 2402 ms
2024-07-07 01:10:37 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:10:37 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:10:37 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:10:38 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:10:38 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:10:38 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1cdd31a4
2024-07-07 01:10:38 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:10:39 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:10:39 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:10:41 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@56957f08, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b0fc8c2, org.springframework.security.web.context.SecurityContextHolderFilter@14f05ca0, org.springframework.security.web.header.HeaderWriterFilter@7fec354, org.springframework.security.web.authentication.logout.LogoutFilter@3c3d2a80, com.exchange.scanner.security.service.utils.JwtTokenFilter@277dddcf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3846ba32, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c62bae5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c9ba9e2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2140582, org.springframework.security.web.session.SessionManagementFilter@2ab4c4e, org.springframework.security.web.access.ExceptionTranslationFilter@69173bb7, org.springframework.security.web.access.intercept.AuthorizationFilter@542adcfa]
2024-07-07 01:10:41 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:10:41 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:10:41 [INFO] - Started ScannerApplication in 7.018 seconds (process running for 7.762)
2024-07-07 01:10:41 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:10:57 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:10:59 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:10:59 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 01:10:59 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 01:11:32 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46700 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:11:32 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:11:33 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:11:33 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:11:33 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 01:11:33 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:11:33 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:11:34 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:11:34 [INFO] - Finished Spring Data repository scanning in 213 ms. Found 6 JPA repository interfaces.
2024-07-07 01:11:34 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:11:34 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:11:34 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:11:34 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:11:34 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:11:34 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:11:34 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:11:34 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:11:34 [INFO] - Finished Spring Data repository scanning in 49 ms. Found 1 Redis repository interface.
2024-07-07 01:11:34 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:11:34 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:11:34 [INFO] - Starting service [Tomcat]
2024-07-07 01:11:34 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:11:35 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:11:35 [INFO] - Root WebApplicationContext: initialization completed in 2202 ms
2024-07-07 01:11:35 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:11:35 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:11:35 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:11:35 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:11:35 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:11:35 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7dddfc35
2024-07-07 01:11:35 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:11:36 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:11:37 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:11:38 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45da40ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11f6a083, org.springframework.security.web.context.SecurityContextHolderFilter@aee3d6e, org.springframework.security.web.header.HeaderWriterFilter@7afffc81, org.springframework.security.web.authentication.logout.LogoutFilter@4f142cbd, com.exchange.scanner.security.service.utils.JwtTokenFilter@63e81ac6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@15382815, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57e6f449, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a649f9a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bc00359, org.springframework.security.web.session.SessionManagementFilter@792b0cad, org.springframework.security.web.access.ExceptionTranslationFilter@3652ce04, org.springframework.security.web.access.intercept.AuthorizationFilter@3c3d2a80]
2024-07-07 01:11:38 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:11:38 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:11:38 [INFO] - Started ScannerApplication in 6.587 seconds (process running for 7.306)
2024-07-07 01:11:38 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 01:11:39 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 01:11:42 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:11:42 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 01:11:42 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 01:15:16 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 46448 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:15:16 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:15:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:15:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:15:17 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 01:15:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:15:17 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:15:17 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:15:17 [INFO] - Finished Spring Data repository scanning in 208 ms. Found 6 JPA repository interfaces.
2024-07-07 01:15:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:15:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:15:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:15:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:15:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:15:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:15:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:15:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:15:17 [INFO] - Finished Spring Data repository scanning in 53 ms. Found 1 Redis repository interface.
2024-07-07 01:15:18 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:15:18 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:15:18 [INFO] - Starting service [Tomcat]
2024-07-07 01:15:18 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:15:18 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:15:18 [INFO] - Root WebApplicationContext: initialization completed in 2230 ms
2024-07-07 01:15:18 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:15:18 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:15:18 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:15:19 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:15:19 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:15:19 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dfcf85a
2024-07-07 01:15:19 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:15:20 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:15:20 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:15:22 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f6e6902, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d8236c, org.springframework.security.web.context.SecurityContextHolderFilter@7fec354, org.springframework.security.web.header.HeaderWriterFilter@2c62f56f, org.springframework.security.web.authentication.logout.LogoutFilter@676c3745, com.exchange.scanner.security.service.utils.JwtTokenFilter@16718e1b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7f1e946f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5118c7fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@792b0cad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5697f801, org.springframework.security.web.session.SessionManagementFilter@2f053ff3, org.springframework.security.web.access.ExceptionTranslationFilter@4a6dd88e, org.springframework.security.web.access.intercept.AuthorizationFilter@1077a7]
2024-07-07 01:15:22 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:15:22 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:15:22 [INFO] - Started ScannerApplication in 6.995 seconds (process running for 7.73)
2024-07-07 01:15:22 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 01:15:22 [INFO] - Request: GET https://api.poloniex.com/markets
2024-07-07 01:15:22 [INFO] - Request: GET https://www.okx.com/api/v5/public/instruments?instType=SPOT
2024-07-07 01:15:22 [INFO] - Request: GET https://api.coinex.com/v2/spot/market
2024-07-07 01:15:22 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols
2024-07-07 01:15:22 [INFO] - Request: GET https://sapi.xt.com/v4/public/symbol
2024-07-07 01:15:22 [INFO] - Request: GET https://api.mexc.com/api/v3/exchangeInfo
2024-07-07 01:15:22 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 01:15:22 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/symbols/details
2024-07-07 01:15:22 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnSymbol
2024-07-07 01:15:22 [INFO] - Request: GET https://api.kucoin.com/api/v2/symbols
2024-07-07 01:15:22 [INFO] - Request: GET https://www.lbkex.net/v2/accuracy.do
2024-07-07 01:15:22 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/symbols
2024-07-07 01:15:22 [INFO] - Request: GET https://api.huobi.pro/v2/settings/common/symbols
2024-07-07 01:15:22 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/currency_pairs
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Accept=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:22 [INFO] - Content-Type=application/json
2024-07-07 01:15:53 [INFO] - Обновление списка валют успешно завершено. Время выполения: 30s
2024-07-07 01:16:13 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:16:13 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 01:16:13 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 01:16:18 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 41828 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:16:18 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:16:19 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:16:19 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:16:19 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 01:16:19 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:16:19 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:16:19 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:16:19 [INFO] - Finished Spring Data repository scanning in 206 ms. Found 6 JPA repository interfaces.
2024-07-07 01:16:20 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:16:20 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:16:20 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:16:20 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:16:20 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:16:20 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:16:20 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:16:20 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:16:20 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 01:16:20 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:16:20 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:16:20 [INFO] - Starting service [Tomcat]
2024-07-07 01:16:20 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:16:21 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:16:21 [INFO] - Root WebApplicationContext: initialization completed in 2435 ms
2024-07-07 01:16:21 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:16:21 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:16:21 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:16:21 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:16:21 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:16:21 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11d1735e
2024-07-07 01:16:21 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:16:23 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:16:23 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:16:25 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@11bac6d7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48ebcce5, org.springframework.security.web.context.SecurityContextHolderFilter@40d1e561, org.springframework.security.web.header.HeaderWriterFilter@2ad39f2f, org.springframework.security.web.authentication.logout.LogoutFilter@5b628249, com.exchange.scanner.security.service.utils.JwtTokenFilter@3e5febe9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@18482805, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@730c9287, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@530e500c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c29138a, org.springframework.security.web.session.SessionManagementFilter@417f7d7f, org.springframework.security.web.access.ExceptionTranslationFilter@4306709f, org.springframework.security.web.access.intercept.AuthorizationFilter@796267e8]
2024-07-07 01:16:25 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:16:25 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:16:25 [INFO] - Started ScannerApplication in 7.26 seconds (process running for 8.002)
2024-07-07 01:16:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 01:16:26 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BTC-USDT
2024-07-07 01:16:26 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BTCUSDT&limit=15
2024-07-07 01:16:26 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=20
2024-07-07 01:16:26 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=btc_usdt&limit=15
2024-07-07 01:16:26 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=BTC_USDT&size=15
2024-07-07 01:16:26 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ENJ-USDT&sz=20
2024-07-07 01:16:26 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BTCUSDT&limit=15
2024-07-07 01:16:26 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=enjusdt&type=step0
2024-07-07 01:16:26 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=btc_usdt&size=20
2024-07-07 01:16:26 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BTC_USDT&limit=15
2024-07-07 01:16:26 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ENJUSDT&limit=20&interval=0
2024-07-07 01:16:26 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ENJ-USDT
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Accept=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:26 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ENJ-USDT
2024-07-07 01:16:27 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ENJUSDT&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BTCUSDT&limit=20&interval=0
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=enj_usdt&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BTC-USDT&sz=20
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ENJUSDT&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=btcusdt&type=step0
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ENJ_USDT&size=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=BTC-USDT
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=ETC_USDT&limit=20
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=bendog_usdt&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=WLTH-USDT
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BENDOGUSDT&limit=20&interval=0
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=doga_usdt&size=20
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=etcusdt&type=step0
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ETC-USDT&sz=20
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ETC_USDT&size=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=neox_usdt&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ENJ_USDT&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=WLTHUSDT&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ETC-USDT
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=NEOXUSDT&limit=20&interval=0
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ETC-USDT
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=etc_usdt&size=20
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=etc_usdt&limit=15
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:27 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BLOCK_USDT&limit=20
2024-07-07 01:16:27 [INFO] - Accept=application/json
2024-07-07 01:16:27 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BLOCK-USDT&sz=20
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=WLTH_USDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=NEOXUSDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BLOCK-USDT
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ETCUSDT&limit=20&interval=0
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=creta_usdt&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BENDOG_USDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=DOGA-USDT
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ETCUSDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ETCUSDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=PIT-USDT
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=MICHIUSDT&limit=20&interval=0
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=DOGA_USDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=michi_usdt&size=20
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=michi_usdt&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=MICHI_USDT&size=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BLOCKUSDT&limit=20&interval=0
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ETC_USDT&limit=15
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:28 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=block_usdt&size=20
2024-07-07 01:16:28 [INFO] - Accept=application/json
2024-07-07 01:16:28 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=DOGAUSDT&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=pit_usdt&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=PIT_USDT&size=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=PITUSDT&limit=20&interval=0
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BLOCK_USDT&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=pit_usdt&size=20
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=MICHIUSDT&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=PIT_USDT&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BLOCKUSDT&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:29 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=KZEN_USDT&limit=15
2024-07-07 01:16:29 [INFO] - Accept=application/json
2024-07-07 01:16:29 [INFO] - Content-Type=application/json
2024-07-07 01:16:30 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=PITUSDT&limit=15
2024-07-07 01:16:30 [INFO] - Accept=application/json
2024-07-07 01:16:30 [INFO] - Content-Type=application/json
2024-07-07 01:16:30 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=KZENUSDT&limit=15
2024-07-07 01:16:30 [INFO] - Accept=application/json
2024-07-07 01:16:30 [INFO] - Content-Type=application/json
2024-07-07 01:16:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 01:16:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 01:16:45 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ENJ_USDT&limit=15
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=20
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ENJ-USDT&sz=20
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=btcusdt&type=step0
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=btc_usdt&size=20
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BTCUSDT&limit=15
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=enj_usdt&limit=15
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=BTC-USDT
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BTC-USDT
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ENJ_USDT&size=15
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BTCUSDT&limit=15
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ENJUSDT&limit=20&interval=0
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:45 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=btc_usdt&limit=15
2024-07-07 01:16:45 [INFO] - Accept=application/json
2024-07-07 01:16:45 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BTC_USDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ENJUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ENJ-USDT
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=enjusdt&type=step0
2024-07-07 01:16:46 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BTC-USDT&sz=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ENJUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=BTC_USDT&size=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BTCUSDT&limit=20&interval=0
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=bendog_usdt&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ENJ-USDT
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=ETC_USDT&limit=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=WLTH_USDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=WLTHUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=WLTH-USDT
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=neox_usdt&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ETC-USDT&sz=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=etcusdt&type=step0
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=doga_usdt&size=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ETC_USDT&size=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BENDOGUSDT&limit=20&interval=0
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=creta_usdt&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BENDOG_USDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ETC-USDT
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=etc_usdt&size=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BLOCK_USDT&limit=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ETC-USDT
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BLOCK-USDT&sz=20
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=etc_usdt&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=DOGA_USDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:46 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=NEOXUSDT&limit=15
2024-07-07 01:16:46 [INFO] - Accept=application/json
2024-07-07 01:16:46 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=MICHI_USDT&size=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BLOCK-USDT
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=NEOXUSDT&limit=20&interval=0
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=michi_usdt&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=michi_usdt&size=20
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ETC_USDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ETCUSDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ETCUSDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=PIT-USDT
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ETCUSDT&limit=20&interval=0
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=DOGA-USDT
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=PIT_USDT&size=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=block_usdt&size=20
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=pit_usdt&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BLOCK_USDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=MICHIUSDT&limit=20&interval=0
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=pit_usdt&size=20
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=PIT_USDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:47 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=DOGAUSDT&limit=15
2024-07-07 01:16:47 [INFO] - Accept=application/json
2024-07-07 01:16:47 [INFO] - Content-Type=application/json
2024-07-07 01:16:48 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BLOCKUSDT&limit=20&interval=0
2024-07-07 01:16:48 [INFO] - Accept=application/json
2024-07-07 01:16:48 [INFO] - Content-Type=application/json
2024-07-07 01:16:48 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=KZEN_USDT&limit=15
2024-07-07 01:16:48 [INFO] - Accept=application/json
2024-07-07 01:16:48 [INFO] - Content-Type=application/json
2024-07-07 01:16:48 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=MICHIUSDT&limit=15
2024-07-07 01:16:48 [INFO] - Accept=application/json
2024-07-07 01:16:48 [INFO] - Content-Type=application/json
2024-07-07 01:16:48 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BLOCKUSDT&limit=15
2024-07-07 01:16:48 [INFO] - Accept=application/json
2024-07-07 01:16:48 [INFO] - Content-Type=application/json
2024-07-07 01:16:48 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=PITUSDT&limit=20&interval=0
2024-07-07 01:16:48 [INFO] - Accept=application/json
2024-07-07 01:16:48 [INFO] - Content-Type=application/json
2024-07-07 01:16:48 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=PITUSDT&limit=15
2024-07-07 01:16:48 [INFO] - Accept=application/json
2024-07-07 01:16:48 [INFO] - Content-Type=application/json
2024-07-07 01:16:49 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=KZENUSDT&limit=15
2024-07-07 01:16:49 [INFO] - Accept=application/json
2024-07-07 01:16:49 [INFO] - Content-Type=application/json
2024-07-07 01:16:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 01:18:02 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 44448 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 01:18:02 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 01:18:03 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:18:03 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:18:03 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 01:18:03 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:18:03 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 01:18:03 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 01:18:03 [INFO] - Finished Spring Data repository scanning in 222 ms. Found 6 JPA repository interfaces.
2024-07-07 01:18:03 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 01:18:03 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 01:18:03 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:18:03 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:18:03 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:18:03 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:18:03 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:18:03 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 01:18:03 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 01:18:04 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 01:18:04 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 01:18:04 [INFO] - Starting service [Tomcat]
2024-07-07 01:18:04 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 01:18:04 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 01:18:04 [INFO] - Root WebApplicationContext: initialization completed in 2191 ms
2024-07-07 01:18:04 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 01:18:04 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 01:18:04 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 01:18:05 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 01:18:05 [INFO] - HikariPool-1 - Starting...
2024-07-07 01:18:05 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71316cd7
2024-07-07 01:18:05 [INFO] - HikariPool-1 - Start completed.
2024-07-07 01:18:06 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 01:18:06 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 01:18:08 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3bc00359, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30b91493, org.springframework.security.web.context.SecurityContextHolderFilter@57e6f449, org.springframework.security.web.header.HeaderWriterFilter@530e500c, org.springframework.security.web.authentication.logout.LogoutFilter@4f1cb802, com.exchange.scanner.security.service.utils.JwtTokenFilter@45775a15, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c64e2d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@419ac0f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@628fa8ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2771e501, org.springframework.security.web.session.SessionManagementFilter@1d5e0621, org.springframework.security.web.access.ExceptionTranslationFilter@7afffc81, org.springframework.security.web.access.intercept.AuthorizationFilter@48ebcce5]
2024-07-07 01:18:08 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 01:18:08 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 01:18:08 [INFO] - Started ScannerApplication in 6.738 seconds (process running for 7.461)
2024-07-07 01:18:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 01:18:09 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ENJUSDT&limit=15
2024-07-07 01:18:09 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=btc_usdt&size=20
2024-07-07 01:18:09 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ENJUSDT&limit=15
2024-07-07 01:18:09 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=20
2024-07-07 01:18:09 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ENJ-USDT
2024-07-07 01:18:09 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=BTC_USDT&size=15
2024-07-07 01:18:09 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ENJ_USDT&limit=15
2024-07-07 01:18:09 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=enjusdt&type=step0
2024-07-07 01:18:09 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=BTCUSDT&limit=15
2024-07-07 01:18:09 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BTC-USDT&sz=20
2024-07-07 01:18:09 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ENJUSDT&limit=20&interval=0
2024-07-07 01:18:09 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=btc_usdt&limit=15
2024-07-07 01:18:09 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BTC-USDT
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:09 [INFO] - Accept=application/json
2024-07-07 01:18:09 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=enj_usdt&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BTCUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=btcusdt&type=step0
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BTCUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ENJ-USDT&sz=20
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ENJ_USDT&size=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=doga_usdt&size=20
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BTCUSDT&limit=20&interval=0
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=ENJUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ENJ-USDT
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=bendog_usdt&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=BTC-USDT
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=ETC_USDT&limit=20
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=etc_usdt&size=20
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=neox_usdt&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=etcusdt&type=step0
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BENDOGUSDT&limit=20&interval=0
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=WLTH-USDT
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ETC-USDT&sz=20
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ETC_USDT&size=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=ETCUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=WLTHUSDT&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:10 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=etc_usdt&limit=15
2024-07-07 01:18:10 [INFO] - Accept=application/json
2024-07-07 01:18:10 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=NEOXUSDT&limit=20&interval=0
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BTC_USDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BLOCK_USDT&limit=20
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BLOCK-USDT&sz=20
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=DOGA-USDT
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=MICHI_USDT&size=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=creta_usdt&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ETC-USDT
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=NEOXUSDT&limit=15
2024-07-07 01:18:11 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=michi_usdt&size=20
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=BLOCKUSDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ETCUSDT&limit=20&interval=0
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BENDOG_USDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ETCUSDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ETCUSDT&limit=15
2024-07-07 01:18:11 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BLOCK-USDT
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=michi_usdt&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ETC-USDT
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=WLTH_USDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=MICHIUSDT&limit=20&interval=0
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=PIT-USDT
2024-07-07 01:18:11 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Accept=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:11 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=pit_usdt&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ETC_USDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BLOCKUSDT&limit=20&interval=0
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=DOGAUSDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=PIT_USDT&size=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=DOGA_USDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=MICHIUSDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=PITUSDT&limit=20&interval=0
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BLOCK_USDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=block_usdt&size=20
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BLOCKUSDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=PIT_USDT&limit=15
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:12 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=pit_usdt&size=20
2024-07-07 01:18:12 [INFO] - Accept=application/json
2024-07-07 01:18:12 [INFO] - Content-Type=application/json
2024-07-07 01:18:13 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=PITUSDT&limit=15
2024-07-07 01:18:13 [INFO] - Accept=application/json
2024-07-07 01:18:13 [INFO] - Content-Type=application/json
2024-07-07 01:18:13 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=KZEN_USDT&limit=15
2024-07-07 01:18:13 [INFO] - Accept=application/json
2024-07-07 01:18:13 [INFO] - Content-Type=application/json
2024-07-07 01:18:13 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=KZENUSDT&limit=15
2024-07-07 01:18:13 [INFO] - Accept=application/json
2024-07-07 01:18:13 [INFO] - Content-Type=application/json
2024-07-07 01:18:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 01:18:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 01:18:28 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=BTC-USDT
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=btc_usdt&limit=15
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BTCUSDT&limit=15
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ENJUSDT&limit=20&interval=0
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=20
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=enjusdt&type=step0
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=btc_usdt&size=20
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=ENJUSDT&limit=15
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ENJ_USDT&limit=15
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ENJ_USDT&size=15
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BTC-USDT
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BTCUSDT&limit=15
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:28 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ENJ-USDT&sz=20
2024-07-07 01:18:28 [INFO] - Accept=application/json
2024-07-07 01:18:28 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=enj_usdt&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BTC_USDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ENJUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ENJ-USDT
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=doga_usdt&size=20
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BTC-USDT&sz=20
2024-07-07 01:18:29 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=btcusdt&type=step0
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ENJUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BTCUSDT&limit=20&interval=0
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=BTCUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=BTC_USDT&size=15
2024-07-07 01:18:29 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=bendog_usdt&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ENJ-USDT
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=ETC_USDT&limit=20
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=WLTH_USDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=WLTHUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=etc_usdt&size=20
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=neox_usdt&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=ETC-USDT&sz=20
2024-07-07 01:18:29 [INFO] - Request: GET https://api.huobi.pro/market/depth?symbol=etcusdt&type=step0
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BENDOGUSDT&limit=20&interval=0
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=ETCUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BENDOG_USDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=etc_usdt&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BENDOGUSDT&limit=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=ETC_USDT&size=15
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:29 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=ETC-USDT
2024-07-07 01:18:29 [INFO] - Accept=application/json
2024-07-07 01:18:29 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://www.okx.com/api/v5/market/books?instId=BLOCK-USDT&sz=20
2024-07-07 01:18:30 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BLOCK_USDT&limit=20
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=creta_usdt&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=ETCUSDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=ETC_USDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=NEOXUSDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/depth?symbol=BLOCKUSDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=NEOXUSDT&limit=20&interval=0
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=MICHI_USDT&size=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=michi_usdt&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=WLTH-USDT
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=DOGA_USDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=DOGAUSDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/order_book?market_id=DOGA-USDT
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/merge-depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=ETCUSDT&limit=20&interval=0
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=michi_usdt&size=20
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnOrderBook&symbol=PIT_USDT&size=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://sapi.xt.com/v4/public/depth?symbol=pit_usdt&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=BLOCK_USDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=ETCUSDT&limit=15
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:30 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=ETC-USDT
2024-07-07 01:18:30 [INFO] - Accept=application/json
2024-07-07 01:18:30 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=MICHIUSDT&limit=20&interval=0
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=block_usdt&size=20
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=PIT_USDT&limit=15
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=CRETAUSDT&limit=15
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=BLOCK-USDT
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://www.lbkex.net/v2/depth.do?symbol=pit_usdt&size=20
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=BLOCKUSDT&limit=20&interval=0
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/order_book?currency_pair=KZEN_USDT&limit=15
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=MICHIUSDT&limit=15
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/orderbook/level2_20?symbol=PIT-USDT
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=BLOCKUSDT&limit=15
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:31 [INFO] - Request: GET https://api.coinex.com/v2/spot/depth?market=PITUSDT&limit=20&interval=0
2024-07-07 01:18:31 [INFO] - Accept=application/json
2024-07-07 01:18:31 [INFO] - Content-Type=application/json
2024-07-07 01:18:32 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=PITUSDT&limit=15
2024-07-07 01:18:32 [INFO] - Accept=application/json
2024-07-07 01:18:32 [INFO] - Content-Type=application/json
2024-07-07 01:18:32 [INFO] - Request: GET https://api.mexc.com/api/v3/depth?symbol=KZENUSDT&limit=15
2024-07-07 01:18:32 [INFO] - Accept=application/json
2024-07-07 01:18:32 [INFO] - Content-Type=application/json
2024-07-07 01:18:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 12:04:25 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 19764 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 12:04:25 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 12:04:26 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:04:26 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:04:26 [INFO] - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2024-07-07 12:04:26 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:04:26 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 12:04:26 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 12:04:26 [INFO] - Finished Spring Data repository scanning in 268 ms. Found 6 JPA repository interfaces.
2024-07-07 12:04:26 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:04:26 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:04:26 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:04:26 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:04:26 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:04:26 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:04:26 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:04:26 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:04:26 [INFO] - Finished Spring Data repository scanning in 34 ms. Found 1 Redis repository interface.
2024-07-07 12:04:27 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 12:04:27 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 12:04:27 [INFO] - Starting service [Tomcat]
2024-07-07 12:04:27 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 12:04:27 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 12:04:27 [INFO] - Root WebApplicationContext: initialization completed in 2397 ms
2024-07-07 12:04:27 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 12:04:28 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 12:04:28 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 12:04:28 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 12:04:28 [INFO] - HikariPool-1 - Starting...
2024-07-07 12:04:28 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bb172dd
2024-07-07 12:04:28 [INFO] - HikariPool-1 - Start completed.
2024-07-07 12:04:29 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 12:04:30 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 12:04:31 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2771e501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a7abd4, org.springframework.security.web.context.SecurityContextHolderFilter@419ac0f5, org.springframework.security.web.header.HeaderWriterFilter@1925b113, org.springframework.security.web.authentication.logout.LogoutFilter@6e0fd2dc, com.exchange.scanner.security.service.utils.JwtTokenFilter@1fd73dcb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f6a083, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ab4c4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8bce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3846ba32, org.springframework.security.web.session.SessionManagementFilter@2b8106fa, org.springframework.security.web.access.ExceptionTranslationFilter@530e500c, org.springframework.security.web.access.intercept.AuthorizationFilter@199549a5]
2024-07-07 12:04:31 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 12:04:31 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 12:04:31 [INFO] - Started ScannerApplication in 7.139 seconds (process running for 8.0)
2024-07-07 12:04:31 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 12:04:32 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/symbols
2024-07-07 12:04:32 [INFO] - Request: GET https://api.kucoin.com/api/v2/symbols
2024-07-07 12:04:32 [INFO] - Request: GET https://www.lbkex.net/v2/accuracy.do
2024-07-07 12:04:32 [INFO] - Request: GET https://api.huobi.pro/v2/settings/common/symbols
2024-07-07 12:04:32 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/currency_pairs
2024-07-07 12:04:32 [INFO] - Request: GET https://api.poloniex.com/markets
2024-07-07 12:04:32 [INFO] - Request: GET https://api.mexc.com/api/v3/exchangeInfo
2024-07-07 12:04:32 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols
2024-07-07 12:04:32 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/symbols/details
2024-07-07 12:04:32 [INFO] - Request: GET https://sapi.xt.com/v4/public/symbol
2024-07-07 12:04:32 [INFO] - Request: GET https://api.coinex.com/v2/spot/market
2024-07-07 12:04:32 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnSymbol
2024-07-07 12:04:32 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
2024-07-07 12:04:32 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 12:04:32 [INFO] - Request: GET https://www.okx.com/api/v5/public/instruments?instType=SPOT
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:32 [INFO] - Accept=application/json
2024-07-07 12:04:32 [INFO] - Content-Type=application/json
2024-07-07 12:04:35 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:323)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onError(FluxOnErrorReturn.java:199)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onError(FluxDefaultIfEmpty.java:156)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:135)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:191)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:147)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:208)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onComplete(FluxTakeWhile.java:122)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onNext(FluxTakeWhile.java:96)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:379)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:426)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:815)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBingX.getAllCoins(ApiBingX.java:65)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.refreshExchangeCoins(ApiExchangeAdapterImpl.java:55)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getExchangeMap$0(AppServiceUtils.java:36)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		... 1 common frames omitted
Caused by: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=utf-8' not supported for bodyType=com.exchange.scanner.dto.response.exchangedata.bingx.coins.BingXCurrencyResponse
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET https://open-api.bingx.com/openApi/spot/v1/common/symbols [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:573)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:137)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:435)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:466)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:726)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 12:16:05 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 32628 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 12:16:05 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 12:16:08 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:16:08 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:16:08 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 12:16:08 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:16:08 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 12:16:08 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 12:16:08 [INFO] - Finished Spring Data repository scanning in 198 ms. Found 6 JPA repository interfaces.
2024-07-07 12:16:08 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:16:08 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:16:08 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:16:08 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:16:08 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:16:08 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:16:08 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:16:08 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:16:08 [INFO] - Finished Spring Data repository scanning in 39 ms. Found 1 Redis repository interface.
2024-07-07 12:16:09 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 12:16:09 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 12:16:09 [INFO] - Starting service [Tomcat]
2024-07-07 12:16:09 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 12:16:09 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 12:16:09 [INFO] - Root WebApplicationContext: initialization completed in 3747 ms
2024-07-07 12:16:09 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 12:16:09 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 12:16:09 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 12:16:09 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 12:16:09 [INFO] - HikariPool-1 - Starting...
2024-07-07 12:16:10 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25589735
2024-07-07 12:16:10 [INFO] - HikariPool-1 - Start completed.
2024-07-07 12:16:11 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 12:16:11 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 12:16:12 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15382815, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39b265c9, org.springframework.security.web.context.SecurityContextHolderFilter@792b0cad, org.springframework.security.web.header.HeaderWriterFilter@da09b52, org.springframework.security.web.authentication.logout.LogoutFilter@128579a6, com.exchange.scanner.security.service.utils.JwtTokenFilter@54c697c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f6e6902, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d5e0621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aee3d6e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c64e2d0, org.springframework.security.web.session.SessionManagementFilter@7fec354, org.springframework.security.web.access.ExceptionTranslationFilter@65f270e7, org.springframework.security.web.access.intercept.AuthorizationFilter@1be6c991]
2024-07-07 12:16:13 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 12:16:13 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 12:16:13 [INFO] - Started ScannerApplication in 7.906 seconds (process running for 8.974)
2024-07-07 12:16:13 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 12:16:13 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/symbols
2024-07-07 12:16:13 [INFO] - Request: GET https://www.lbkex.net/v2/accuracy.do
2024-07-07 12:16:13 [INFO] - Request: GET https://api.huobi.pro/v2/settings/common/symbols
2024-07-07 12:16:13 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnSymbol
2024-07-07 12:16:13 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/currency_pairs
2024-07-07 12:16:13 [INFO] - Request: GET https://api.poloniex.com/markets
2024-07-07 12:16:13 [INFO] - Request: GET https://api.coinex.com/v2/spot/market
2024-07-07 12:16:13 [INFO] - Request: GET https://www.okx.com/api/v5/public/instruments?instType=SPOT
2024-07-07 12:16:13 [INFO] - Request: GET https://api.mexc.com/api/v3/exchangeInfo
2024-07-07 12:16:13 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols
2024-07-07 12:16:13 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
2024-07-07 12:16:13 [INFO] - Request: GET https://sapi.xt.com/v4/public/symbol
2024-07-07 12:16:13 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/symbols/details
2024-07-07 12:16:13 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 12:16:13 [INFO] - Request: GET https://api.kucoin.com/api/v2/symbols
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Accept=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:13 [INFO] - Content-Type=application/json
2024-07-07 12:16:39 [INFO] - Обновление списка валют успешно завершено. Время выполения: 26s
2024-07-07 12:19:00 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 28688 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 12:19:00 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 12:19:01 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:19:01 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:19:01 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 12:19:01 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:19:01 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 12:19:02 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 12:19:02 [INFO] - Finished Spring Data repository scanning in 220 ms. Found 6 JPA repository interfaces.
2024-07-07 12:19:02 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:19:02 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:19:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:19:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:19:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:19:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:19:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:19:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:19:02 [INFO] - Finished Spring Data repository scanning in 49 ms. Found 1 Redis repository interface.
2024-07-07 12:19:02 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 12:19:02 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 12:19:02 [INFO] - Starting service [Tomcat]
2024-07-07 12:19:02 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 12:19:02 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 12:19:02 [INFO] - Root WebApplicationContext: initialization completed in 2078 ms
2024-07-07 12:19:03 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 12:19:03 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 12:19:03 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 12:19:03 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 12:19:03 [INFO] - HikariPool-1 - Starting...
2024-07-07 12:19:03 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46994f26
2024-07-07 12:19:03 [INFO] - HikariPool-1 - Start completed.
2024-07-07 12:19:04 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 12:19:05 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 12:19:06 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f6e6902, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d8236c, org.springframework.security.web.context.SecurityContextHolderFilter@7fec354, org.springframework.security.web.header.HeaderWriterFilter@2c62f56f, org.springframework.security.web.authentication.logout.LogoutFilter@676c3745, com.exchange.scanner.security.service.utils.JwtTokenFilter@771ede0d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7f1e946f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5118c7fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@792b0cad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5697f801, org.springframework.security.web.session.SessionManagementFilter@2f053ff3, org.springframework.security.web.access.ExceptionTranslationFilter@4a6dd88e, org.springframework.security.web.access.intercept.AuthorizationFilter@1077a7]
2024-07-07 12:19:07 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 12:19:07 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 12:19:07 [INFO] - Started ScannerApplication in 6.818 seconds (process running for 7.558)
2024-07-07 12:19:07 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 12:19:07 [INFO] - Request: GET https://www.lbkex.net/v2/accuracy.do
2024-07-07 12:19:07 [INFO] - Request: GET https://api.mexc.com/api/v3/exchangeInfo
2024-07-07 12:19:07 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
2024-07-07 12:19:07 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/currency_pairs
2024-07-07 12:19:07 [INFO] - Request: GET https://api.poloniex.com/markets
2024-07-07 12:19:07 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols
2024-07-07 12:19:07 [INFO] - Request: GET https://api.huobi.pro/v2/settings/common/symbols
2024-07-07 12:19:07 [INFO] - Request: GET https://api.kucoin.com/api/v2/symbols
2024-07-07 12:19:07 [INFO] - Request: GET https://www.okx.com/api/v5/public/instruments?instType=SPOT
2024-07-07 12:19:07 [INFO] - Request: GET https://api.coinex.com/v2/spot/market
2024-07-07 12:19:07 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnSymbol
2024-07-07 12:19:07 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 12:19:07 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/symbols
2024-07-07 12:19:07 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/symbols/details
2024-07-07 12:19:07 [INFO] - Request: GET https://sapi.xt.com/v4/public/symbol
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Accept=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:07 [INFO] - Content-Type=application/json
2024-07-07 12:19:33 [INFO] - Обновление списка валют успешно завершено. Время выполения: 26s
2024-07-07 12:21:44 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 21832 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 12:21:44 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 12:21:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:21:45 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:21:45 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 12:21:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:21:45 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 12:21:45 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 12:21:45 [INFO] - Finished Spring Data repository scanning in 185 ms. Found 6 JPA repository interfaces.
2024-07-07 12:21:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:21:45 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:21:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:21:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:21:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:21:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:21:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:21:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:21:45 [INFO] - Finished Spring Data repository scanning in 42 ms. Found 1 Redis repository interface.
2024-07-07 12:21:46 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 12:21:46 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 12:21:46 [INFO] - Starting service [Tomcat]
2024-07-07 12:21:46 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 12:21:46 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 12:21:46 [INFO] - Root WebApplicationContext: initialization completed in 2122 ms
2024-07-07 12:21:46 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 12:21:46 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 12:21:46 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 12:21:47 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 12:21:47 [INFO] - HikariPool-1 - Starting...
2024-07-07 12:21:47 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7dddfc35
2024-07-07 12:21:47 [INFO] - HikariPool-1 - Start completed.
2024-07-07 12:21:48 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 12:21:48 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 12:21:49 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c64e2d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45da40ad, org.springframework.security.web.context.SecurityContextHolderFilter@1d5e0621, org.springframework.security.web.header.HeaderWriterFilter@40d1e561, org.springframework.security.web.authentication.logout.LogoutFilter@272d0dd3, com.exchange.scanner.security.service.utils.JwtTokenFilter@63e81ac6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5697f801, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b8106fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57e6f449, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11f6a083, org.springframework.security.web.session.SessionManagementFilter@5118c7fb, org.springframework.security.web.access.ExceptionTranslationFilter@da09b52, org.springframework.security.web.access.intercept.AuthorizationFilter@84180e2]
2024-07-07 12:21:50 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 12:21:50 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 12:21:50 [INFO] - Started ScannerApplication in 6.338 seconds (process running for 7.016)
2024-07-07 12:21:50 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 12:21:50 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
2024-07-07 12:21:50 [INFO] - Accept=application/json
2024-07-07 12:21:50 [INFO] - Content-Type=application/json
2024-07-07 12:22:05 [INFO] - Обновление списка валют успешно завершено. Время выполения: 15s
2024-07-07 12:38:29 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 9928 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 12:38:29 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 12:38:30 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:38:30 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:38:30 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 12:38:30 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:38:30 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 12:38:30 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 12:38:30 [INFO] - Finished Spring Data repository scanning in 189 ms. Found 6 JPA repository interfaces.
2024-07-07 12:38:30 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 12:38:30 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 12:38:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:38:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:38:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:38:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:38:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:38:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 12:38:30 [INFO] - Finished Spring Data repository scanning in 41 ms. Found 1 Redis repository interface.
2024-07-07 12:38:31 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 12:38:31 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 12:38:31 [INFO] - Starting service [Tomcat]
2024-07-07 12:38:31 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 12:38:31 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 12:38:31 [INFO] - Root WebApplicationContext: initialization completed in 2018 ms
2024-07-07 12:38:31 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 12:38:31 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 12:38:31 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 12:38:31 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 12:38:31 [INFO] - HikariPool-1 - Starting...
2024-07-07 12:38:32 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46994f26
2024-07-07 12:38:32 [INFO] - HikariPool-1 - Start completed.
2024-07-07 12:38:33 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 12:38:33 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 12:38:34 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15382815, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39b265c9, org.springframework.security.web.context.SecurityContextHolderFilter@792b0cad, org.springframework.security.web.header.HeaderWriterFilter@da09b52, org.springframework.security.web.authentication.logout.LogoutFilter@128579a6, com.exchange.scanner.security.service.utils.JwtTokenFilter@771ede0d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f6e6902, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d5e0621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aee3d6e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c64e2d0, org.springframework.security.web.session.SessionManagementFilter@7fec354, org.springframework.security.web.access.ExceptionTranslationFilter@65f270e7, org.springframework.security.web.access.intercept.AuthorizationFilter@1be6c991]
2024-07-07 12:38:35 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 12:38:35 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 12:38:35 [INFO] - Started ScannerApplication in 6.288 seconds (process running for 6.991)
2024-07-07 12:38:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 12:38:35 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v2/market/depth?symbol=BTC_USDT&depth=20&type=step0
2024-07-07 12:38:35 [INFO] - Accept=application/json
2024-07-07 12:38:35 [INFO] - Content-Type=application/json
2024-07-07 12:38:36 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v2/market/depth?symbol=ENJ_USDT&depth=20&type=step0
2024-07-07 12:38:36 [INFO] - Accept=application/json
2024-07-07 12:38:36 [INFO] - Content-Type=application/json
2024-07-07 12:38:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v2/market/depth?symbol=BENDOG_USDT&depth=20&type=step0
2024-07-07 12:38:37 [INFO] - Accept=application/json
2024-07-07 12:38:37 [INFO] - Content-Type=application/json
2024-07-07 12:38:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v2/market/depth?symbol=ETC_USDT&depth=20&type=step0
2024-07-07 12:38:37 [INFO] - Accept=application/json
2024-07-07 12:38:37 [INFO] - Content-Type=application/json
2024-07-07 12:38:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v2/market/depth?symbol=MICHI_USDT&depth=20&type=step0
2024-07-07 12:38:37 [INFO] - Accept=application/json
2024-07-07 12:38:37 [INFO] - Content-Type=application/json
2024-07-07 12:38:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 14:02:26 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 40456 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:02:26 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:02:29 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:02:29 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:02:29 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 14:02:29 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:02:29 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:02:29 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:02:29 [INFO] - Finished Spring Data repository scanning in 199 ms. Found 6 JPA repository interfaces.
2024-07-07 14:02:29 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:02:29 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:02:29 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:02:29 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:02:29 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:02:29 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:02:29 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:02:29 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:02:29 [INFO] - Finished Spring Data repository scanning in 51 ms. Found 1 Redis repository interface.
2024-07-07 14:02:30 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:02:30 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:02:30 [INFO] - Starting service [Tomcat]
2024-07-07 14:02:30 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:02:30 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:02:30 [INFO] - Root WebApplicationContext: initialization completed in 3581 ms
2024-07-07 14:02:30 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:02:30 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:02:30 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:02:31 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:02:31 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:02:31 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6550ce46
2024-07-07 14:02:31 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:02:32 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:02:32 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:02:34 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2771e501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a7abd4, org.springframework.security.web.context.SecurityContextHolderFilter@419ac0f5, org.springframework.security.web.header.HeaderWriterFilter@1925b113, org.springframework.security.web.authentication.logout.LogoutFilter@6e0fd2dc, com.exchange.scanner.security.service.utils.JwtTokenFilter@588614f9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f6a083, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ab4c4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8bce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3846ba32, org.springframework.security.web.session.SessionManagementFilter@2b8106fa, org.springframework.security.web.access.ExceptionTranslationFilter@530e500c, org.springframework.security.web.access.intercept.AuthorizationFilter@199549a5]
2024-07-07 14:02:34 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:02:34 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:02:34 [INFO] - Started ScannerApplication in 8.036 seconds (process running for 9.241)
2024-07-07 14:02:34 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:02:34 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC-USDT&signature=759d99b436de3e530fc7a4ff2127ae32dce2db2e76d5784c3f446f9dc814e155&timestamp=1720350154932
2024-07-07 14:02:34 [INFO] - Accept=application/json
2024-07-07 14:02:34 [INFO] - Content-Type=application/json
2024-07-07 14:02:34 [INFO] - X-BX-APIKEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 14:02:34 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:02:36 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC-USDT&signature=d83b5a389dead3c18aaea9afe921b7430e85f530eef52662d4b5ac901367e54e&timestamp=1720350156133
2024-07-07 14:02:36 [INFO] - Accept=application/json
2024-07-07 14:02:36 [INFO] - Content-Type=application/json
2024-07-07 14:02:36 [INFO] - X-BX-APIKEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 14:02:36 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:02:36 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ-USDT&signature=3c04fa4e0915cc2001a42a9427745911e18baa8a7dc27166c6cb8ac951731bc5&timestamp=1720350156675
2024-07-07 14:02:36 [INFO] - Accept=application/json
2024-07-07 14:02:36 [INFO] - Content-Type=application/json
2024-07-07 14:02:36 [INFO] - X-BX-APIKEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 14:02:36 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:02:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG-USDT&signature=15e0e735642f0a31d3d10dca26824b009b053ed172d52463bb52657af429a546&timestamp=1720350157182
2024-07-07 14:02:37 [INFO] - Accept=application/json
2024-07-07 14:02:37 [INFO] - Content-Type=application/json
2024-07-07 14:02:37 [INFO] - X-BX-APIKEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 14:02:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:02:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI-USDT&signature=fb6f6c195422c2af8883df4cce8879252966a3961075cc431c2af5618410ddfa&timestamp=1720350157691
2024-07-07 14:02:37 [INFO] - Accept=application/json
2024-07-07 14:02:37 [INFO] - Content-Type=application/json
2024-07-07 14:02:37 [INFO] - X-BX-APIKEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 14:02:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:02:38 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 14:12:38 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 32344 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:12:38 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:12:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:12:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:12:39 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 14:12:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:12:39 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:12:39 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:12:39 [INFO] - Finished Spring Data repository scanning in 191 ms. Found 6 JPA repository interfaces.
2024-07-07 14:12:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:12:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:12:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:12:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:12:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:12:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:12:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:12:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:12:39 [INFO] - Finished Spring Data repository scanning in 46 ms. Found 1 Redis repository interface.
2024-07-07 14:12:40 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:12:40 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:12:40 [INFO] - Starting service [Tomcat]
2024-07-07 14:12:40 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:12:40 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:12:40 [INFO] - Root WebApplicationContext: initialization completed in 2102 ms
2024-07-07 14:12:40 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:12:40 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:12:41 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:12:41 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:12:41 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:12:41 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bb172dd
2024-07-07 14:12:41 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:12:42 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:12:42 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:12:44 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2771e501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a7abd4, org.springframework.security.web.context.SecurityContextHolderFilter@419ac0f5, org.springframework.security.web.header.HeaderWriterFilter@1925b113, org.springframework.security.web.authentication.logout.LogoutFilter@6e0fd2dc, com.exchange.scanner.security.service.utils.JwtTokenFilter@63e81ac6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f6a083, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ab4c4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8bce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3846ba32, org.springframework.security.web.session.SessionManagementFilter@2b8106fa, org.springframework.security.web.access.ExceptionTranslationFilter@530e500c, org.springframework.security.web.access.intercept.AuthorizationFilter@199549a5]
2024-07-07 14:12:44 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:12:44 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:12:44 [INFO] - Started ScannerApplication in 6.529 seconds (process running for 7.287)
2024-07-07 14:12:44 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:12:44 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI-USDT&signature=3095de88c9b97f9a8e0d2f02347b662e833ef9cea391319ca1896018ea7435a4&timestamp=1720350764976
2024-07-07 14:12:44 [INFO] - Accept=application/json
2024-07-07 14:12:44 [INFO] - Content-Type=application/json
2024-07-07 14:12:44 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:12:44 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:12:46 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC-USDT&signature=49b993d4781313953b7fda86adf32f0fe058065adc3c348c943a5bb9277b3d93&timestamp=1720350766167
2024-07-07 14:12:46 [INFO] - Accept=application/json
2024-07-07 14:12:46 [INFO] - Content-Type=application/json
2024-07-07 14:12:46 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:12:46 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:12:46 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC-USDT&signature=9c1a3f6bbeaeb9c9a22bdbf140032189be1acfc9b9c17edd3761c23784e98ac3&timestamp=1720350766627
2024-07-07 14:12:46 [INFO] - Accept=application/json
2024-07-07 14:12:46 [INFO] - Content-Type=application/json
2024-07-07 14:12:46 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:12:46 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:12:47 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ-USDT&signature=c613015e7f2da416c321c4e367fbd30b90d136b1ec1627ad0605051bed28f326&timestamp=1720350767053
2024-07-07 14:12:47 [INFO] - Accept=application/json
2024-07-07 14:12:47 [INFO] - Content-Type=application/json
2024-07-07 14:12:47 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:12:47 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:12:47 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG-USDT&signature=c262dacbbe8662a771afc6a436fff0c31517521eaa1d316a3e496994f58f6e7b&timestamp=1720350767576
2024-07-07 14:12:47 [INFO] - Accept=application/json
2024-07-07 14:12:47 [INFO] - Content-Type=application/json
2024-07-07 14:12:47 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:12:47 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:12:48 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 14:18:31 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 24176 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:18:31 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:18:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:18:31 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:18:32 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 14:18:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:18:32 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:18:32 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:18:32 [INFO] - Finished Spring Data repository scanning in 222 ms. Found 6 JPA repository interfaces.
2024-07-07 14:18:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:18:32 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:18:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:18:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:18:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:18:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:18:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:18:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:18:32 [INFO] - Finished Spring Data repository scanning in 47 ms. Found 1 Redis repository interface.
2024-07-07 14:18:33 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:18:33 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:18:33 [INFO] - Starting service [Tomcat]
2024-07-07 14:18:33 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:18:33 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:18:33 [INFO] - Root WebApplicationContext: initialization completed in 2101 ms
2024-07-07 14:18:33 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:18:33 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:18:33 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:18:33 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:18:33 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:18:34 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c206b14
2024-07-07 14:18:34 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:18:35 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:18:35 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:18:36 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a7abd4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3846ba32, org.springframework.security.web.context.SecurityContextHolderFilter@628fa8ea, org.springframework.security.web.header.HeaderWriterFilter@eaa901a, org.springframework.security.web.authentication.logout.LogoutFilter@3110bb19, com.exchange.scanner.security.service.utils.JwtTokenFilter@7bb888b7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3bc00359, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cad8bce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba77dc6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40a32c25, org.springframework.security.web.session.SessionManagementFilter@57e6f449, org.springframework.security.web.access.ExceptionTranslationFilter@1c3b4de1, org.springframework.security.web.access.intercept.AuthorizationFilter@5edeb83e]
2024-07-07 14:18:37 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:18:37 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:18:37 [INFO] - Started ScannerApplication in 6.497 seconds (process running for 7.218)
2024-07-07 14:18:37 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:18:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI-USDT&signature=48b7c4588e9523090d36e9cd3b1cf9c65296e97ebec266149da4a1a80cf9f90d&timestamp=1720351117552
2024-07-07 14:18:37 [INFO] - Accept=application/json
2024-07-07 14:18:37 [INFO] - Content-Type=application/json
2024-07-07 14:18:37 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:18:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:18:38 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ-USDT&signature=11e1d07c2803f1e46fd4482fcd71ca7dd37ff717d4591792c170d0445f67aece&timestamp=1720351118939
2024-07-07 14:18:38 [INFO] - Accept=application/json
2024-07-07 14:18:38 [INFO] - Content-Type=application/json
2024-07-07 14:18:38 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:18:38 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:18:39 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC-USDT&signature=988cb7127e0054424a174878d05daf0715b743eac9a67f24bb7d4e175e8a3866&timestamp=1720351119795
2024-07-07 14:18:39 [INFO] - Accept=application/json
2024-07-07 14:18:39 [INFO] - Content-Type=application/json
2024-07-07 14:18:39 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:18:39 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:18:40 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG-USDT&signature=cb3820616f819c8f76b00e85056f743ce528894f390aecbb7a4f760591a1d125&timestamp=1720351120569
2024-07-07 14:18:40 [INFO] - Accept=application/json
2024-07-07 14:18:40 [INFO] - Content-Type=application/json
2024-07-07 14:18:40 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:18:40 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:18:41 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC-USDT&signature=60651d939b969097d6623a2fceb3f6ab2dae074bb7f785e2da526f31a612b6e1&timestamp=1720351121357
2024-07-07 14:18:41 [INFO] - Accept=application/json
2024-07-07 14:18:41 [INFO] - Content-Type=application/json
2024-07-07 14:18:41 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:18:41 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:18:42 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 14:27:16 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 11204 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:27:16 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:27:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:27:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:27:17 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 14:27:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:27:17 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:27:17 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:27:17 [INFO] - Finished Spring Data repository scanning in 213 ms. Found 6 JPA repository interfaces.
2024-07-07 14:27:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:27:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:27:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:27:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:27:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:27:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:27:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:27:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:27:17 [INFO] - Finished Spring Data repository scanning in 43 ms. Found 1 Redis repository interface.
2024-07-07 14:27:18 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:27:18 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:27:18 [INFO] - Starting service [Tomcat]
2024-07-07 14:27:18 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:27:18 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:27:18 [INFO] - Root WebApplicationContext: initialization completed in 2032 ms
2024-07-07 14:27:18 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:27:18 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:27:18 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:27:18 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:27:18 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:27:19 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6282f1eb
2024-07-07 14:27:19 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:27:20 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:27:20 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:27:21 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54d8236c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5697f801, org.springframework.security.web.context.SecurityContextHolderFilter@1828eff, org.springframework.security.web.header.HeaderWriterFilter@65f270e7, org.springframework.security.web.authentication.logout.LogoutFilter@6cbbfe03, com.exchange.scanner.security.service.utils.JwtTokenFilter@1e9e4468, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@542adcfa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@792b0cad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8be84bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15382815, org.springframework.security.web.session.SessionManagementFilter@69173bb7, org.springframework.security.web.access.ExceptionTranslationFilter@2c3c05ff, org.springframework.security.web.access.intercept.AuthorizationFilter@6e0fd2dc]
2024-07-07 14:27:22 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:27:22 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:27:22 [INFO] - Started ScannerApplication in 6.321 seconds (process running for 7.055)
2024-07-07 14:27:22 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:27:22 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ-USDT&signature=325f51131eee0db64e39da780cb0c4a8860c39c1130572f08876edf517000d48&timestamp=1720351642543
2024-07-07 14:27:22 [INFO] - Accept=application/json
2024-07-07 14:27:22 [INFO] - Content-Type=application/json
2024-07-07 14:27:22 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:27:22 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:27:23 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.util.NoSuchElementException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList.getFirst(ArrayList.java:439)
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 14:29:31 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 39632 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:29:31 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:29:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:29:32 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:29:32 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 14:29:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:29:32 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:29:32 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:29:32 [INFO] - Finished Spring Data repository scanning in 213 ms. Found 6 JPA repository interfaces.
2024-07-07 14:29:32 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:29:32 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:29:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:29:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:29:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:29:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:29:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:29:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:29:32 [INFO] - Finished Spring Data repository scanning in 46 ms. Found 1 Redis repository interface.
2024-07-07 14:29:33 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:29:33 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:29:33 [INFO] - Starting service [Tomcat]
2024-07-07 14:29:33 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:29:33 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:29:33 [INFO] - Root WebApplicationContext: initialization completed in 2119 ms
2024-07-07 14:29:33 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:29:33 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:29:33 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:29:33 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:29:34 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:29:34 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@25589735
2024-07-07 14:29:34 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:29:35 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:29:35 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:29:36 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5697f801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15382815, org.springframework.security.web.context.SecurityContextHolderFilter@5118c7fb, org.springframework.security.web.header.HeaderWriterFilter@417f7d7f, org.springframework.security.web.authentication.logout.LogoutFilter@78b20c7f, com.exchange.scanner.security.service.utils.JwtTokenFilter@771ede0d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3adf3670, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be84bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5e0621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39b265c9, org.springframework.security.web.session.SessionManagementFilter@5d0ea2af, org.springframework.security.web.access.ExceptionTranslationFilter@2c62f56f, org.springframework.security.web.access.intercept.AuthorizationFilter@3110bb19]
2024-07-07 14:29:37 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:29:37 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:29:37 [INFO] - Started ScannerApplication in 6.45 seconds (process running for 7.221)
2024-07-07 14:29:37 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:29:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC-USDT&signature=54dedb3de9754a2d6bd5164fea65b316ddf0f9e8d89167b809d03ac50661bece&timestamp=1720351777653
2024-07-07 14:29:37 [INFO] - Accept=application/json
2024-07-07 14:29:37 [INFO] - Content-Type=application/json
2024-07-07 14:29:37 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:29:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:29:38 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 14:51:56 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 45008 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:51:56 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:51:56 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:51:56 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:51:56 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 14:51:57 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:51:57 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:51:57 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:51:57 [INFO] - Finished Spring Data repository scanning in 206 ms. Found 6 JPA repository interfaces.
2024-07-07 14:51:57 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:51:57 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:51:57 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:51:57 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:51:57 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:51:57 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:51:57 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:51:57 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:51:57 [INFO] - Finished Spring Data repository scanning in 43 ms. Found 1 Redis repository interface.
2024-07-07 14:51:58 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:51:58 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:51:58 [INFO] - Starting service [Tomcat]
2024-07-07 14:51:58 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:51:58 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:51:58 [INFO] - Root WebApplicationContext: initialization completed in 2134 ms
2024-07-07 14:51:58 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:51:58 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:51:58 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:51:58 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:51:58 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:51:58 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6106dfb6
2024-07-07 14:51:58 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:52:00 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:52:00 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:52:01 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@40a32c25, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@685280dd, org.springframework.security.web.context.SecurityContextHolderFilter@1cad8bce, org.springframework.security.web.header.HeaderWriterFilter@69173bb7, org.springframework.security.web.authentication.logout.LogoutFilter@18482805, com.exchange.scanner.security.service.utils.JwtTokenFilter@5825932c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2771e501, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14f05ca0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ce1ab4c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56957f08, org.springframework.security.web.session.SessionManagementFilter@419ac0f5, org.springframework.security.web.access.ExceptionTranslationFilter@eaa901a, org.springframework.security.web.access.intercept.AuthorizationFilter@4c752425]
2024-07-07 14:52:01 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:52:01 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:52:02 [INFO] - Started ScannerApplication in 6.434 seconds (process running for 7.138)
2024-07-07 14:52:02 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:52:02 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?signature=31df4f413ca1f5e436537f8d177a3af138e3cbbae7872f39e9fb92f4c9475118&timestamp=1720353122348
2024-07-07 14:52:02 [INFO] - Accept=application/json
2024-07-07 14:52:02 [INFO] - Content-Type=application/json
2024-07-07 14:52:02 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:52:02 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:52:03 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 14:57:38 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 26860 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:57:38 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:57:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:57:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:57:39 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 14:57:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:57:39 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:57:39 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:57:39 [INFO] - Finished Spring Data repository scanning in 245 ms. Found 6 JPA repository interfaces.
2024-07-07 14:57:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:57:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:57:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:57:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:57:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:57:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:57:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:57:39 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:57:39 [INFO] - Finished Spring Data repository scanning in 58 ms. Found 1 Redis repository interface.
2024-07-07 14:57:40 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:57:40 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:57:40 [INFO] - Starting service [Tomcat]
2024-07-07 14:57:40 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:57:40 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:57:40 [INFO] - Root WebApplicationContext: initialization completed in 2397 ms
2024-07-07 14:57:40 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:57:40 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:57:40 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:57:41 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:57:41 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:57:41 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@79d14037
2024-07-07 14:57:41 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:57:42 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:57:42 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:57:44 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7ebc2975, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32c7495, org.springframework.security.web.context.SecurityContextHolderFilter@c9ba9e2, org.springframework.security.web.header.HeaderWriterFilter@792b0cad, org.springframework.security.web.authentication.logout.LogoutFilter@4c29138a, com.exchange.scanner.security.service.utils.JwtTokenFilter@19f9404d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@56957f08, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b628249, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@727eae52, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2640f5ea, org.springframework.security.web.session.SessionManagementFilter@14f05ca0, org.springframework.security.web.access.ExceptionTranslationFilter@1828eff, org.springframework.security.web.access.intercept.AuthorizationFilter@54d8236c]
2024-07-07 14:57:44 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:57:44 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:57:44 [INFO] - Started ScannerApplication in 6.792 seconds (process running for 7.484)
2024-07-07 14:57:44 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:57:44 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?signature=0c8fbe41c8d5b1bd371a65e61b768851b6bf3af195ea84492b3e499ea1462e9d&timestamp=1720353464871
2024-07-07 14:57:44 [INFO] - Accept=application/json
2024-07-07 14:57:44 [INFO] - Content-Type=application/json
2024-07-07 14:57:44 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:57:44 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:57:45 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 14:59:05 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 19568 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 14:59:05 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 14:59:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:59:06 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:59:06 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 14:59:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:59:06 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 14:59:06 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 14:59:06 [INFO] - Finished Spring Data repository scanning in 189 ms. Found 6 JPA repository interfaces.
2024-07-07 14:59:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 14:59:06 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 14:59:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:59:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:59:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:59:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:59:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:59:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 14:59:07 [INFO] - Finished Spring Data repository scanning in 42 ms. Found 1 Redis repository interface.
2024-07-07 14:59:07 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 14:59:07 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 14:59:07 [INFO] - Starting service [Tomcat]
2024-07-07 14:59:07 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 14:59:07 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 14:59:07 [INFO] - Root WebApplicationContext: initialization completed in 2045 ms
2024-07-07 14:59:08 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 14:59:08 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 14:59:08 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 14:59:08 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 14:59:08 [INFO] - HikariPool-1 - Starting...
2024-07-07 14:59:08 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@79d14037
2024-07-07 14:59:08 [INFO] - HikariPool-1 - Start completed.
2024-07-07 14:59:09 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 14:59:09 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 14:59:11 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7b5afde5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a14a8c1, org.springframework.security.web.context.SecurityContextHolderFilter@7e32442d, org.springframework.security.web.header.HeaderWriterFilter@57e6f449, org.springframework.security.web.authentication.logout.LogoutFilter@7f1e946f, com.exchange.scanner.security.service.utils.JwtTokenFilter@19f9404d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2640f5ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3606c525, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b6abf4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@879f852, org.springframework.security.web.session.SessionManagementFilter@5b628249, org.springframework.security.web.access.ExceptionTranslationFilter@aee3d6e, org.springframework.security.web.access.intercept.AuthorizationFilter@45da40ad]
2024-07-07 14:59:11 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 14:59:11 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 14:59:11 [INFO] - Started ScannerApplication in 6.391 seconds (process running for 7.099)
2024-07-07 14:59:11 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 14:59:12 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?timestamp=1720353552017
2024-07-07 14:59:12 [INFO] - Accept=application/json
2024-07-07 14:59:12 [INFO] - Content-Type=application/json
2024-07-07 14:59:12 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 14:59:12 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 14:59:12 [INFO] - signature=5f6f6d3e56dbe5fdf91d711bc89aeb9bca88b11ca5d0faecd179d5414d5c8e29
2024-07-07 14:59:13 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:00:06 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 22972 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:00:06 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:00:07 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:00:07 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:00:07 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 15:00:07 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:00:07 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:00:07 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:00:07 [INFO] - Finished Spring Data repository scanning in 211 ms. Found 6 JPA repository interfaces.
2024-07-07 15:00:07 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:00:07 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:00:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:00:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:00:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:00:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:00:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:00:07 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:00:07 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 15:00:08 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:00:08 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:00:08 [INFO] - Starting service [Tomcat]
2024-07-07 15:00:08 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:00:08 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:00:08 [INFO] - Root WebApplicationContext: initialization completed in 2194 ms
2024-07-07 15:00:08 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:00:08 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:00:08 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:00:09 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:00:09 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:00:09 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c206b14
2024-07-07 15:00:09 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:00:10 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:00:10 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:00:12 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2771e501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a7abd4, org.springframework.security.web.context.SecurityContextHolderFilter@419ac0f5, org.springframework.security.web.header.HeaderWriterFilter@1925b113, org.springframework.security.web.authentication.logout.LogoutFilter@6e0fd2dc, com.exchange.scanner.security.service.utils.JwtTokenFilter@7bb888b7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f6a083, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ab4c4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8bce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3846ba32, org.springframework.security.web.session.SessionManagementFilter@2b8106fa, org.springframework.security.web.access.ExceptionTranslationFilter@530e500c, org.springframework.security.web.access.intercept.AuthorizationFilter@199549a5]
2024-07-07 15:00:12 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:00:12 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:00:12 [INFO] - Started ScannerApplication in 6.631 seconds (process running for 7.347)
2024-07-07 15:00:12 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:00:12 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG&timestamp=1720353612974
2024-07-07 15:00:12 [INFO] - Accept=application/json
2024-07-07 15:00:12 [INFO] - Content-Type=application/json
2024-07-07 15:00:12 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:00:12 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:00:12 [INFO] - signature=d65e813d7b7197d75216906175e35db18b6fbeb39753b9b6e16564a56c45d61b
2024-07-07 15:00:13 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.getFirst()" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:03:45 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 21008 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:03:45 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:03:46 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:03:46 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:03:46 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 15:03:46 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:03:46 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:03:46 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:03:46 [INFO] - Finished Spring Data repository scanning in 221 ms. Found 6 JPA repository interfaces.
2024-07-07 15:03:46 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:03:46 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:03:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:03:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:03:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:03:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:03:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:03:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:03:46 [INFO] - Finished Spring Data repository scanning in 39 ms. Found 1 Redis repository interface.
2024-07-07 15:03:47 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:03:47 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:03:47 [INFO] - Starting service [Tomcat]
2024-07-07 15:03:47 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:03:47 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:03:47 [INFO] - Root WebApplicationContext: initialization completed in 2079 ms
2024-07-07 15:03:47 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:03:48 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:03:48 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:03:48 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:03:48 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:03:48 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6106dfb6
2024-07-07 15:03:48 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:03:49 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:03:50 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:03:51 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@40a32c25, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@685280dd, org.springframework.security.web.context.SecurityContextHolderFilter@1cad8bce, org.springframework.security.web.header.HeaderWriterFilter@69173bb7, org.springframework.security.web.authentication.logout.LogoutFilter@18482805, com.exchange.scanner.security.service.utils.JwtTokenFilter@277dddcf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2771e501, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14f05ca0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ce1ab4c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56957f08, org.springframework.security.web.session.SessionManagementFilter@419ac0f5, org.springframework.security.web.access.ExceptionTranslationFilter@eaa901a, org.springframework.security.web.access.intercept.AuthorizationFilter@4c752425]
2024-07-07 15:03:51 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:03:51 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:03:51 [INFO] - Started ScannerApplication in 6.672 seconds (process running for 7.428)
2024-07-07 15:03:51 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:03:52 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720353832240
2024-07-07 15:03:52 [INFO] - Accept=application/json
2024-07-07 15:03:52 [INFO] - Content-Type=application/json
2024-07-07 15:03:52 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:03:52 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:03:52 [INFO] - signature=d7c1be5836aa1074e5d5942c9aec65140114746559250049c5873269cc69c5ef
2024-07-07 15:03:53 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.lang.NullPointerException: Cannot invoke "java.util.List.forEach(java.util.function.Consumer)" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.List.forEach(java.util.function.Consumer)" because the return value of "com.exchange.scanner.dto.response.exchangedata.bingx.chains.BingXChainResponse.getData()" is null
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$10(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:05:44 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 38624 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:05:44 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:05:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:05:45 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:05:45 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 15:05:46 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:05:46 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:05:46 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:05:46 [INFO] - Finished Spring Data repository scanning in 219 ms. Found 6 JPA repository interfaces.
2024-07-07 15:05:46 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:05:46 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:05:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:05:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:05:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:05:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:05:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:05:46 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:05:46 [INFO] - Finished Spring Data repository scanning in 58 ms. Found 1 Redis repository interface.
2024-07-07 15:05:47 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:05:47 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:05:47 [INFO] - Starting service [Tomcat]
2024-07-07 15:05:47 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:05:47 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:05:47 [INFO] - Root WebApplicationContext: initialization completed in 2406 ms
2024-07-07 15:05:47 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:05:47 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:05:47 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:05:47 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:05:47 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:05:48 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6106dfb6
2024-07-07 15:05:48 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:05:49 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:05:49 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:05:50 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b0fc8c2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2140582, org.springframework.security.web.context.SecurityContextHolderFilter@4ce1ab4c, org.springframework.security.web.header.HeaderWriterFilter@1828eff, org.springframework.security.web.authentication.logout.LogoutFilter@11bac6d7, com.exchange.scanner.security.service.utils.JwtTokenFilter@277dddcf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@40a32c25, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c9ba9e2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a18e18d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ebc2975, org.springframework.security.web.session.SessionManagementFilter@1cad8bce, org.springframework.security.web.access.ExceptionTranslationFilter@5d0ea2af, org.springframework.security.web.access.intercept.AuthorizationFilter@3adf3670]
2024-07-07 15:05:51 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:05:51 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:05:51 [INFO] - Started ScannerApplication in 6.753 seconds (process running for 7.463)
2024-07-07 15:05:51 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:05:51 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720353951586
2024-07-07 15:05:51 [INFO] - Accept=application/json
2024-07-07 15:05:51 [INFO] - Content-Type=application/json
2024-07-07 15:05:51 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:05:51 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:05:51 [INFO] - signature=520a941ecd28bf272ddf15c56c8e84653d693c600f67d1a858dacdcb3d328044
2024-07-07 15:05:53 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720353953083
2024-07-07 15:05:53 [INFO] - Accept=application/json
2024-07-07 15:05:53 [INFO] - Content-Type=application/json
2024-07-07 15:05:53 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:05:53 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:05:53 [INFO] - signature=7759eb60822c14cc1d32a2412ba402c432949a34e8c3837b290189899bed6360
2024-07-07 15:05:53 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.util.NoSuchElementException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList.getFirst(ArrayList.java:439)
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:116)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:110)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:12:41 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 43560 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:12:41 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:12:42 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:12:42 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:12:42 [INFO] - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-07 15:12:42 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:12:42 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:12:42 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:12:42 [INFO] - Finished Spring Data repository scanning in 197 ms. Found 6 JPA repository interfaces.
2024-07-07 15:12:42 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:12:42 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:12:42 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:12:42 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:12:42 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:12:42 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:12:42 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:12:42 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:12:42 [INFO] - Finished Spring Data repository scanning in 43 ms. Found 1 Redis repository interface.
2024-07-07 15:12:43 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:12:43 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:12:43 [INFO] - Starting service [Tomcat]
2024-07-07 15:12:43 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:12:43 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:12:43 [INFO] - Root WebApplicationContext: initialization completed in 2137 ms
2024-07-07 15:12:43 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:12:44 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:12:44 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:12:44 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:12:44 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:12:44 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dfcf85a
2024-07-07 15:12:44 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:12:45 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:12:46 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:12:47 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5697f801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15382815, org.springframework.security.web.context.SecurityContextHolderFilter@5118c7fb, org.springframework.security.web.header.HeaderWriterFilter@417f7d7f, org.springframework.security.web.authentication.logout.LogoutFilter@78b20c7f, com.exchange.scanner.security.service.utils.JwtTokenFilter@78de0f6f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3adf3670, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be84bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5e0621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39b265c9, org.springframework.security.web.session.SessionManagementFilter@5d0ea2af, org.springframework.security.web.access.ExceptionTranslationFilter@2c62f56f, org.springframework.security.web.access.intercept.AuthorizationFilter@3110bb19]
2024-07-07 15:12:47 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:12:47 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:12:47 [INFO] - Started ScannerApplication in 6.843 seconds (process running for 7.538)
2024-07-07 15:12:47 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:12:48 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720354368294
2024-07-07 15:12:48 [INFO] - Accept=application/json
2024-07-07 15:12:48 [INFO] - Content-Type=application/json
2024-07-07 15:12:48 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:12:48 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:12:48 [INFO] - signature=a34b9a9d882bd6d3363097ea91ad107e1601de381e1ffebaefba43d73101eb1d
2024-07-07 15:12:49 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.util.NoSuchElementException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList.getFirst(ArrayList.java:439)
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:117)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:111)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:14:38 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 5272 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:14:38 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:14:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:14:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:14:39 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 15:14:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:14:39 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:14:39 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:14:39 [INFO] - Finished Spring Data repository scanning in 233 ms. Found 6 JPA repository interfaces.
2024-07-07 15:14:39 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:14:39 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:14:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:14:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:14:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:14:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:14:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:14:40 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:14:40 [INFO] - Finished Spring Data repository scanning in 48 ms. Found 1 Redis repository interface.
2024-07-07 15:14:40 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:14:40 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:14:40 [INFO] - Starting service [Tomcat]
2024-07-07 15:14:40 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:14:41 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:14:41 [INFO] - Root WebApplicationContext: initialization completed in 2454 ms
2024-07-07 15:14:41 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:14:41 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:14:41 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:14:41 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:14:41 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:14:41 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6106dfb6
2024-07-07 15:14:41 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:14:42 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:14:43 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:14:44 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@40a32c25, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@685280dd, org.springframework.security.web.context.SecurityContextHolderFilter@1cad8bce, org.springframework.security.web.header.HeaderWriterFilter@69173bb7, org.springframework.security.web.authentication.logout.LogoutFilter@18482805, com.exchange.scanner.security.service.utils.JwtTokenFilter@5825932c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2771e501, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@14f05ca0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ce1ab4c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56957f08, org.springframework.security.web.session.SessionManagementFilter@419ac0f5, org.springframework.security.web.access.ExceptionTranslationFilter@eaa901a, org.springframework.security.web.access.intercept.AuthorizationFilter@4c752425]
2024-07-07 15:14:44 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:14:44 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:14:44 [INFO] - Started ScannerApplication in 6.75 seconds (process running for 7.461)
2024-07-07 15:14:44 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:14:45 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?timestamp=1720354485231
2024-07-07 15:14:45 [INFO] - Accept=application/json
2024-07-07 15:14:45 [INFO] - Content-Type=application/json
2024-07-07 15:14:45 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:14:45 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:14:45 [INFO] - signature=e297b2f5a67129e240510dc79fe38361c824e1f5255599d42417309aae77c0e8
2024-07-07 15:14:46 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?timestamp=1720354486867
2024-07-07 15:14:46 [INFO] - Accept=application/json
2024-07-07 15:14:46 [INFO] - Content-Type=application/json
2024-07-07 15:14:46 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:14:46 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:14:46 [INFO] - signature=8598fa7552f541ce5aacd5f431d8a3f2c7308515c4362c65f9c28051780a1b7f
2024-07-07 15:14:47 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?timestamp=1720354487993
2024-07-07 15:14:47 [INFO] - Accept=application/json
2024-07-07 15:14:47 [INFO] - Content-Type=application/json
2024-07-07 15:14:47 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:14:47 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:14:47 [INFO] - signature=f1cd7fd9ca1808b71dd2579fb6409872410e76fc582ca837d8fb83d7c4185431
2024-07-07 15:15:14 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 17996 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:15:14 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:15:15 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:15:15 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:15:15 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 15:15:15 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:15:15 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:15:16 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:15:16 [INFO] - Finished Spring Data repository scanning in 192 ms. Found 6 JPA repository interfaces.
2024-07-07 15:15:16 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:15:16 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:15:16 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:16 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:16 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:16 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:16 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:16 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:16 [INFO] - Finished Spring Data repository scanning in 59 ms. Found 1 Redis repository interface.
2024-07-07 15:15:16 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:15:16 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:15:16 [INFO] - Starting service [Tomcat]
2024-07-07 15:15:16 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:15:17 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:15:17 [INFO] - Root WebApplicationContext: initialization completed in 2069 ms
2024-07-07 15:15:17 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:15:17 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:15:17 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:15:17 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:15:17 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:15:17 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64ed18ec
2024-07-07 15:15:17 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:15:18 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:15:19 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:15:20 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54d8236c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5697f801, org.springframework.security.web.context.SecurityContextHolderFilter@1828eff, org.springframework.security.web.header.HeaderWriterFilter@65f270e7, org.springframework.security.web.authentication.logout.LogoutFilter@6cbbfe03, com.exchange.scanner.security.service.utils.JwtTokenFilter@117be84a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@542adcfa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@792b0cad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8be84bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15382815, org.springframework.security.web.session.SessionManagementFilter@69173bb7, org.springframework.security.web.access.ExceptionTranslationFilter@2c3c05ff, org.springframework.security.web.access.intercept.AuthorizationFilter@6e0fd2dc]
2024-07-07 15:15:20 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:15:20 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:15:20 [INFO] - Started ScannerApplication in 6.39 seconds (process running for 7.134)
2024-07-07 15:15:20 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:15:21 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720354521250
2024-07-07 15:15:21 [INFO] - Accept=application/json
2024-07-07 15:15:21 [INFO] - Content-Type=application/json
2024-07-07 15:15:21 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:15:21 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:15:21 [INFO] - signature=1083b69046baa7e857f358b58257da5ae63a2b8ce59f253630e2010a52c20184
2024-07-07 15:15:22 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.util.NoSuchElementException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList.getFirst(ArrayList.java:439)
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:117)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:111)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:15:42 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:15:42 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 15:15:42 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 15:15:44 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 38820 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:15:44 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:15:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:15:45 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:15:45 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 15:15:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:15:45 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:15:45 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:15:45 [INFO] - Finished Spring Data repository scanning in 216 ms. Found 6 JPA repository interfaces.
2024-07-07 15:15:45 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:15:45 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:15:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:45 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:15:45 [INFO] - Finished Spring Data repository scanning in 41 ms. Found 1 Redis repository interface.
2024-07-07 15:15:46 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:15:46 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:15:46 [INFO] - Starting service [Tomcat]
2024-07-07 15:15:46 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:15:46 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:15:46 [INFO] - Root WebApplicationContext: initialization completed in 2070 ms
2024-07-07 15:15:46 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:15:47 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:15:47 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:15:47 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:15:47 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:15:47 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bb172dd
2024-07-07 15:15:47 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:15:48 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:15:48 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:15:50 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b91493, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2771e501, org.springframework.security.web.context.SecurityContextHolderFilter@3a649f9a, org.springframework.security.web.header.HeaderWriterFilter@1c3b4de1, org.springframework.security.web.authentication.logout.LogoutFilter@1077a7, com.exchange.scanner.security.service.utils.JwtTokenFilter@63e81ac6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@45da40ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@628fa8ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ab4c4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a7abd4, org.springframework.security.web.session.SessionManagementFilter@aee3d6e, org.springframework.security.web.access.ExceptionTranslationFilter@730c9287, org.springframework.security.web.access.intercept.AuthorizationFilter@4c29138a]
2024-07-07 15:15:50 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:15:50 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:15:50 [INFO] - Started ScannerApplication in 6.46 seconds (process running for 7.46)
2024-07-07 15:15:50 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:15:50 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG&timestamp=1720354550947
2024-07-07 15:15:50 [INFO] - Accept=application/json
2024-07-07 15:15:50 [INFO] - Content-Type=application/json
2024-07-07 15:15:50 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:15:50 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:15:50 [INFO] - signature=041e83d06db533c449736ffc7e11ddba735ea0c0c9d6d5103ac8f50b4732649f
2024-07-07 15:15:52 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720354552417
2024-07-07 15:15:52 [INFO] - Accept=application/json
2024-07-07 15:15:52 [INFO] - Content-Type=application/json
2024-07-07 15:15:52 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:15:52 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:15:52 [INFO] - signature=1a82dcc9b42468e480b1aa633b1ed8fc5d7f95568a217cf0e4bd2cb5e764e9f5
2024-07-07 15:15:53 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC&timestamp=1720354553271
2024-07-07 15:15:53 [INFO] - Accept=application/json
2024-07-07 15:15:53 [INFO] - Content-Type=application/json
2024-07-07 15:15:53 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:15:53 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:15:53 [INFO] - signature=7245c47ce6cfbf5e09ffeb7dd406a7257a6bf96ec00442ffe57fd7b3e0643b20
2024-07-07 15:15:54 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720354554063
2024-07-07 15:15:54 [INFO] - Accept=application/json
2024-07-07 15:15:54 [INFO] - Content-Type=application/json
2024-07-07 15:15:54 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:15:54 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:15:54 [INFO] - signature=a10e1bee9d2d3c292899a707a5232d52799b83cdd34737ee1e3ea7f99da23a4c
2024-07-07 15:15:54 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: java.util.NoSuchElementException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.NoSuchElementException: null
	at java.base/java.util.ArrayList.getFirst(ArrayList.java:439)
	at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getCoinChain$8(ApiBingX.java:117)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.impl.api.ApiBingX.getCoinChain(ApiBingX.java:111)
	at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getCoinChain(ApiExchangeAdapterImpl.java:107)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getCoinsChainInfoAsync$2(AppServiceUtils.java:65)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	... 3 common frames omitted
2024-07-07 15:19:30 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 39880 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:19:30 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:19:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:19:31 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:19:31 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 15:19:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:19:31 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:19:31 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:19:31 [INFO] - Finished Spring Data repository scanning in 185 ms. Found 6 JPA repository interfaces.
2024-07-07 15:19:31 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:19:31 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:19:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:19:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:19:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:19:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:19:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:19:32 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:19:32 [INFO] - Finished Spring Data repository scanning in 54 ms. Found 1 Redis repository interface.
2024-07-07 15:19:32 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:19:32 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:19:32 [INFO] - Starting service [Tomcat]
2024-07-07 15:19:32 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:19:33 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:19:33 [INFO] - Root WebApplicationContext: initialization completed in 2359 ms
2024-07-07 15:19:33 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:19:33 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:19:33 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:19:33 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:19:33 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:19:33 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bb172dd
2024-07-07 15:19:33 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:19:34 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:19:35 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:19:36 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2771e501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a7abd4, org.springframework.security.web.context.SecurityContextHolderFilter@419ac0f5, org.springframework.security.web.header.HeaderWriterFilter@1925b113, org.springframework.security.web.authentication.logout.LogoutFilter@6e0fd2dc, com.exchange.scanner.security.service.utils.JwtTokenFilter@1fd73dcb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f6a083, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ab4c4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8bce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3846ba32, org.springframework.security.web.session.SessionManagementFilter@2b8106fa, org.springframework.security.web.access.ExceptionTranslationFilter@530e500c, org.springframework.security.web.access.intercept.AuthorizationFilter@199549a5]
2024-07-07 15:19:36 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:19:36 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:19:36 [INFO] - Started ScannerApplication in 6.715 seconds (process running for 7.434)
2024-07-07 15:19:36 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:19:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI&timestamp=1720354777253
2024-07-07 15:19:37 [INFO] - Accept=application/json
2024-07-07 15:19:37 [INFO] - Content-Type=application/json
2024-07-07 15:19:37 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:19:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:19:37 [INFO] - signature=9eee10a84ca177bb5bf523ff7dc14363c6a6ec1b326e4a795b03829ce8e9f584
2024-07-07 15:19:38 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720354778730
2024-07-07 15:19:38 [INFO] - Accept=application/json
2024-07-07 15:19:38 [INFO] - Content-Type=application/json
2024-07-07 15:19:38 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:19:38 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:19:38 [INFO] - signature=d3cefb439f0558e9eea2f0d42b9bb6f87801f7de74c8c0ef083ce880173ba497
2024-07-07 15:19:39 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG&timestamp=1720354779496
2024-07-07 15:19:39 [INFO] - Accept=application/json
2024-07-07 15:19:39 [INFO] - Content-Type=application/json
2024-07-07 15:19:39 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:19:39 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:19:39 [INFO] - signature=cc184fadf2b55e606ba3c271c2ac16aa2e7c39db9af41cad01a283a32b0da4b1
2024-07-07 15:19:40 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC&timestamp=1720354780276
2024-07-07 15:19:40 [INFO] - Accept=application/json
2024-07-07 15:19:40 [INFO] - Content-Type=application/json
2024-07-07 15:19:40 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:19:40 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:19:40 [INFO] - signature=6128d337f9a9acd0a9673b3c80f2f528c70757ce03c7a81d325df918e904c482
2024-07-07 15:19:41 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720354781226
2024-07-07 15:19:41 [INFO] - Accept=application/json
2024-07-07 15:19:41 [INFO] - Content-Type=application/json
2024-07-07 15:19:41 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:19:41 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:19:41 [INFO] - signature=4194d55dfac8bed8d8df4f332a0a09d57450f3e424354ef04a83ac8efdf402f1
2024-07-07 15:19:42 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 15:20:55 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 36916 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:20:55 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:20:55 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:20:55 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:20:55 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 15:20:56 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:20:56 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:20:56 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:20:56 [INFO] - Finished Spring Data repository scanning in 201 ms. Found 6 JPA repository interfaces.
2024-07-07 15:20:56 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:20:56 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:20:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:20:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:20:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:20:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:20:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:20:56 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:20:56 [INFO] - Finished Spring Data repository scanning in 42 ms. Found 1 Redis repository interface.
2024-07-07 15:20:57 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:20:57 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:20:57 [INFO] - Starting service [Tomcat]
2024-07-07 15:20:57 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:20:57 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:20:57 [INFO] - Root WebApplicationContext: initialization completed in 2042 ms
2024-07-07 15:20:57 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:20:57 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:20:57 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:20:57 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:20:57 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:20:57 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71316cd7
2024-07-07 15:20:57 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:20:59 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:20:59 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:21:00 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a7abd4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3846ba32, org.springframework.security.web.context.SecurityContextHolderFilter@628fa8ea, org.springframework.security.web.header.HeaderWriterFilter@eaa901a, org.springframework.security.web.authentication.logout.LogoutFilter@3110bb19, com.exchange.scanner.security.service.utils.JwtTokenFilter@45775a15, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3bc00359, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cad8bce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ba77dc6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40a32c25, org.springframework.security.web.session.SessionManagementFilter@57e6f449, org.springframework.security.web.access.ExceptionTranslationFilter@1c3b4de1, org.springframework.security.web.access.intercept.AuthorizationFilter@5edeb83e]
2024-07-07 15:21:00 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:21:00 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:21:00 [INFO] - Started ScannerApplication in 6.355 seconds (process running for 7.089)
2024-07-07 15:21:01 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 15:21:01 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720354861341
2024-07-07 15:21:01 [INFO] - Accept=application/json
2024-07-07 15:21:01 [INFO] - Content-Type=application/json
2024-07-07 15:21:01 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:21:01 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:21:01 [INFO] - signature=e52cd7a8da638b6e375c91b1ab7a92c79b14a1174843235d5dd376a6c2c953cf
2024-07-07 15:21:02 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC&timestamp=1720354862774
2024-07-07 15:21:02 [INFO] - Accept=application/json
2024-07-07 15:21:02 [INFO] - Content-Type=application/json
2024-07-07 15:21:02 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:21:02 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:21:02 [INFO] - signature=2b1c11c054e84cf2f5d6b48d9bf35a38e6731102301cc2d29b4b6bd0ac0490c4
2024-07-07 15:21:03 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720354863568
2024-07-07 15:21:03 [INFO] - Accept=application/json
2024-07-07 15:21:03 [INFO] - Content-Type=application/json
2024-07-07 15:21:03 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:21:03 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:21:03 [INFO] - signature=9ab795ae522f69df9d0bab5f822ffd67b1b54be05d4066733205a7139a7819fd
2024-07-07 15:21:04 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI&timestamp=1720354864352
2024-07-07 15:21:04 [INFO] - Accept=application/json
2024-07-07 15:21:04 [INFO] - Content-Type=application/json
2024-07-07 15:21:04 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:21:04 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:21:04 [INFO] - signature=46d90dbf1bc8d3544759791f18e486ce58d6c44050144051af56f265f5d008c3
2024-07-07 15:21:05 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG&timestamp=1720354865207
2024-07-07 15:21:05 [INFO] - Accept=application/json
2024-07-07 15:21:05 [INFO] - Content-Type=application/json
2024-07-07 15:21:05 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:21:05 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:21:05 [INFO] - signature=a51493e5f33c93c9e8b096ab642d2f315c6a5dbe319441acc4171bad3df8b08d
2024-07-07 15:21:06 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 15:35:01 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 32492 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:35:01 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:35:02 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:35:02 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:35:02 [INFO] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-07 15:35:02 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:35:02 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:35:02 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:35:02 [INFO] - Finished Spring Data repository scanning in 212 ms. Found 6 JPA repository interfaces.
2024-07-07 15:35:02 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:35:02 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:35:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:35:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:35:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:35:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:35:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:35:02 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:35:03 [INFO] - Finished Spring Data repository scanning in 52 ms. Found 1 Redis repository interface.
2024-07-07 15:35:03 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:35:03 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:35:03 [INFO] - Starting service [Tomcat]
2024-07-07 15:35:03 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:35:03 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:35:03 [INFO] - Root WebApplicationContext: initialization completed in 2322 ms
2024-07-07 15:35:04 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:35:04 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:35:04 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:35:04 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:35:04 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:35:04 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1bb172dd
2024-07-07 15:35:04 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:35:05 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:35:06 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:35:07 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2771e501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a7abd4, org.springframework.security.web.context.SecurityContextHolderFilter@419ac0f5, org.springframework.security.web.header.HeaderWriterFilter@1925b113, org.springframework.security.web.authentication.logout.LogoutFilter@6e0fd2dc, com.exchange.scanner.security.service.utils.JwtTokenFilter@1fd73dcb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f6a083, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ab4c4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8bce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3846ba32, org.springframework.security.web.session.SessionManagementFilter@2b8106fa, org.springframework.security.web.access.ExceptionTranslationFilter@530e500c, org.springframework.security.web.access.intercept.AuthorizationFilter@199549a5]
2024-07-07 15:35:07 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:35:07 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:35:07 [INFO] - Started ScannerApplication in 6.859 seconds (process running for 7.608)
2024-07-07 15:35:07 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 15:35:08 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ETC-USDT&timestamp=1720355708226
2024-07-07 15:35:08 [INFO] - Accept=application/json
2024-07-07 15:35:08 [INFO] - Content-Type=application/json
2024-07-07 15:35:08 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:35:08 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:35:08 [INFO] - signature=22ad313917caabeb1dceb6f159dfb6d708a62c782185e55403a4dc4f92ec1a6c
2024-07-07 15:35:09 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException: 200 OK from GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:323)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onError(FluxOnErrorReturn.java:199)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onError(FluxDefaultIfEmpty.java:156)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onError(FluxMapFuseable.java:142)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onError(FluxMapFuseable.java:340)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onError(FluxFilterFuseable.java:382)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onError(MonoCollect.java:135)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:134)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:191)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:147)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:208)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:260)
	at reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onComplete(FluxTakeWhile.java:122)
	at reactor.core.publisher.FluxTakeWhile$TakeWhileSubscriber.onNext(FluxTakeWhile.java:96)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
	at reactor.netty.channel.FluxReceive.onInboundNext(FluxReceive.java:379)
	at reactor.netty.channel.ChannelOperations.onInboundNext(ChannelOperations.java:426)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:776)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getTradingFee$15(ApiBingX.java:174)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBingX.getTradingFee(ApiBingX.java:173)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getTradingFee(ApiExchangeAdapterImpl.java:133)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getTradingFeeAsync$4(AppServiceUtils.java:91)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		... 1 common frames omitted
Caused by: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=utf-8' not supported for bodyType=com.exchange.scanner.dto.response.exchangedata.bingx.tradingfee.BingXTradingFeeResponse
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ETC-USDT&timestamp=1720355708226 [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:573)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:137)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:435)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:466)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:726)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 15:42:35 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 39960 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:42:35 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:42:36 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:42:36 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:42:36 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 15:42:36 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:42:36 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:42:36 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:42:36 [INFO] - Finished Spring Data repository scanning in 186 ms. Found 6 JPA repository interfaces.
2024-07-07 15:42:36 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:42:36 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:42:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:42:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:42:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:42:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:42:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:42:36 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:42:36 [INFO] - Finished Spring Data repository scanning in 43 ms. Found 1 Redis repository interface.
2024-07-07 15:42:37 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:42:37 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:42:37 [INFO] - Starting service [Tomcat]
2024-07-07 15:42:37 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:42:37 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:42:37 [INFO] - Root WebApplicationContext: initialization completed in 2203 ms
2024-07-07 15:42:37 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:42:37 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:42:37 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:42:38 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:42:38 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:42:38 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6106dfb6
2024-07-07 15:42:38 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:42:39 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:42:39 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:42:41 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b0fc8c2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2140582, org.springframework.security.web.context.SecurityContextHolderFilter@4ce1ab4c, org.springframework.security.web.header.HeaderWriterFilter@1828eff, org.springframework.security.web.authentication.logout.LogoutFilter@11bac6d7, com.exchange.scanner.security.service.utils.JwtTokenFilter@277dddcf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@40a32c25, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c9ba9e2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a18e18d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ebc2975, org.springframework.security.web.session.SessionManagementFilter@1cad8bce, org.springframework.security.web.access.ExceptionTranslationFilter@5d0ea2af, org.springframework.security.web.access.intercept.AuthorizationFilter@3adf3670]
2024-07-07 15:42:41 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:42:41 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:42:41 [INFO] - Started ScannerApplication in 6.803 seconds (process running for 7.526)
2024-07-07 15:42:41 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 15:42:41 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ETC-USDT&timestamp=1720356161941
2024-07-07 15:42:41 [INFO] - Accept=application/json
2024-07-07 15:42:41 [INFO] - Content-Type=application/json
2024-07-07 15:42:41 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:42:41 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:42:41 [INFO] - signature=9dc520130f1c2f498882e84a07d1a9758d7780d3929278484ed7aef1b69caeb3
2024-07-07 15:42:43 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=MICHI-USDT&timestamp=1720356163417
2024-07-07 15:42:43 [INFO] - Accept=application/json
2024-07-07 15:42:43 [INFO] - Content-Type=application/json
2024-07-07 15:42:43 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:42:43 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:42:43 [INFO] - signature=33329ab3577f2c4fa99ad6e23b7f0160018438abb7de57ffb56e39370d47d964
2024-07-07 15:42:44 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=BENDOG-USDT&timestamp=1720356164167
2024-07-07 15:42:44 [INFO] - Accept=application/json
2024-07-07 15:42:44 [INFO] - Content-Type=application/json
2024-07-07 15:42:44 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:42:44 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:42:44 [INFO] - signature=1674132437ef814d4ef8668d3911b7afc1d9d3451ab4ec4b6950eaa878c0158e
2024-07-07 15:42:44 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ENJ-USDT&timestamp=1720356164911
2024-07-07 15:42:44 [INFO] - Accept=application/json
2024-07-07 15:42:44 [INFO] - Content-Type=application/json
2024-07-07 15:42:44 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:42:44 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:42:44 [INFO] - signature=99df0bbf6bbdf28eb813c4edbf048fcbef85ef577c904dea5845571243f6bac7
2024-07-07 15:42:45 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=BTC-USDT&timestamp=1720356165659
2024-07-07 15:42:45 [INFO] - Accept=application/json
2024-07-07 15:42:45 [INFO] - Content-Type=application/json
2024-07-07 15:42:45 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:42:45 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:42:45 [INFO] - signature=5757495d23bb3473d512712fff0c2ffdfaa69996d1652725a405dd25fcd6c28f
2024-07-07 15:42:46 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 15:43:04 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 27080 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:43:04 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:43:05 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:43:05 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:43:05 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 15:43:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:43:06 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:43:06 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:43:06 [INFO] - Finished Spring Data repository scanning in 173 ms. Found 6 JPA repository interfaces.
2024-07-07 15:43:06 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:43:06 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:43:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:43:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:43:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:43:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:43:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:43:06 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:43:06 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 15:43:06 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:43:06 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:43:06 [INFO] - Starting service [Tomcat]
2024-07-07 15:43:06 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:43:07 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:43:07 [INFO] - Root WebApplicationContext: initialization completed in 2031 ms
2024-07-07 15:43:07 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:43:07 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:43:07 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:43:07 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:43:07 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:43:07 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70169464
2024-07-07 15:43:07 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:43:09 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:43:09 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:43:10 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15382815, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39b265c9, org.springframework.security.web.context.SecurityContextHolderFilter@792b0cad, org.springframework.security.web.header.HeaderWriterFilter@da09b52, org.springframework.security.web.authentication.logout.LogoutFilter@128579a6, com.exchange.scanner.security.service.utils.JwtTokenFilter@5643052d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f6e6902, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d5e0621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aee3d6e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c64e2d0, org.springframework.security.web.session.SessionManagementFilter@7fec354, org.springframework.security.web.access.ExceptionTranslationFilter@65f270e7, org.springframework.security.web.access.intercept.AuthorizationFilter@1be6c991]
2024-07-07 15:43:11 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:43:11 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:43:11 [INFO] - Started ScannerApplication in 6.506 seconds (process running for 7.21)
2024-07-07 15:43:11 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 15:43:11 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ETC-USDT&timestamp=1720356191432
2024-07-07 15:43:11 [INFO] - Accept=application/json
2024-07-07 15:43:11 [INFO] - Content-Type=application/json
2024-07-07 15:43:11 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:43:11 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:43:11 [INFO] - signature=80ffd318ca8b3d5526f57ab2b38c0952cbbcef66b75130ca3a385229d750f905
2024-07-07 15:43:12 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=BENDOG-USDT&timestamp=1720356192819
2024-07-07 15:43:12 [INFO] - Accept=application/json
2024-07-07 15:43:12 [INFO] - Content-Type=application/json
2024-07-07 15:43:12 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:43:12 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:43:12 [INFO] - signature=d45aa9fbbcf755719869638f030939330c8892e5714eb8d8a187a1f755111b5e
2024-07-07 15:43:13 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=MICHI-USDT&timestamp=1720356193548
2024-07-07 15:43:13 [INFO] - Accept=application/json
2024-07-07 15:43:13 [INFO] - Content-Type=application/json
2024-07-07 15:43:13 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:43:13 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:43:13 [INFO] - signature=3a7831413d6780a4c428f882eddbf470599ef28d726a87d3240814f1e8b0f06e
2024-07-07 15:43:14 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=BTC-USDT&timestamp=1720356194292
2024-07-07 15:43:14 [INFO] - Accept=application/json
2024-07-07 15:43:14 [INFO] - Content-Type=application/json
2024-07-07 15:43:14 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:43:14 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:43:14 [INFO] - signature=13b9b7d3a097614af4f211f1e3887a7917d21ac7e1e44ee9a043bbbf95305b1e
2024-07-07 15:43:15 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ENJ-USDT&timestamp=1720356195040
2024-07-07 15:43:15 [INFO] - Accept=application/json
2024-07-07 15:43:15 [INFO] - Content-Type=application/json
2024-07-07 15:43:15 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 15:43:15 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 15:43:15 [INFO] - signature=a149da9f8c430017f370cb88f79870237854f5e0120ad4428fdeda33de3c733d
2024-07-07 15:43:15 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 15:50:48 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 39488 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 15:50:48 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 15:50:49 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:50:49 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:50:49 [INFO] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-07 15:50:49 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:50:49 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 15:50:49 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 15:50:49 [INFO] - Finished Spring Data repository scanning in 203 ms. Found 6 JPA repository interfaces.
2024-07-07 15:50:49 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 15:50:49 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 15:50:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:50:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:50:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:50:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:50:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:50:49 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 15:50:49 [INFO] - Finished Spring Data repository scanning in 37 ms. Found 1 Redis repository interface.
2024-07-07 15:50:50 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 15:50:50 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 15:50:50 [INFO] - Starting service [Tomcat]
2024-07-07 15:50:50 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 15:50:50 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 15:50:50 [INFO] - Root WebApplicationContext: initialization completed in 2136 ms
2024-07-07 15:50:50 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 15:50:50 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 15:50:50 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 15:50:50 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 15:50:51 [INFO] - HikariPool-1 - Starting...
2024-07-07 15:50:51 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6282f1eb
2024-07-07 15:50:51 [INFO] - HikariPool-1 - Start completed.
2024-07-07 15:50:52 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 15:50:52 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 15:50:54 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@542adcfa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3adf3670, org.springframework.security.web.context.SecurityContextHolderFilter@69173bb7, org.springframework.security.web.header.HeaderWriterFilter@4a6dd88e, org.springframework.security.web.authentication.logout.LogoutFilter@794daa09, com.exchange.scanner.security.service.utils.JwtTokenFilter@5fdff4f1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4844cbe4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fec354, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1828eff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f6e6902, org.springframework.security.web.session.SessionManagementFilter@1925b113, org.springframework.security.web.access.ExceptionTranslationFilter@1a034bbc, org.springframework.security.web.access.intercept.AuthorizationFilter@766534b0]
2024-07-07 15:50:54 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 15:50:54 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 15:50:54 [INFO] - Started ScannerApplication in 6.723 seconds (process running for 7.498)
2024-07-07 15:50:54 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 15:50:54 [INFO] - Request: GET https://api.binance.com/api/v3/exchangeInfo
2024-07-07 15:50:54 [INFO] - Accept=application/json
2024-07-07 15:50:54 [INFO] - Content-Type=application/json
2024-07-07 15:50:57 [INFO] - Обновление списка валют успешно завершено. Время выполения: 3s
2024-07-07 16:05:16 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 14516 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 16:05:16 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 16:05:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 16:05:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 16:05:17 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 16:05:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 16:05:17 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 16:05:17 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 16:05:17 [INFO] - Finished Spring Data repository scanning in 228 ms. Found 6 JPA repository interfaces.
2024-07-07 16:05:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 16:05:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 16:05:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 16:05:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 16:05:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 16:05:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 16:05:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 16:05:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 16:05:17 [INFO] - Finished Spring Data repository scanning in 54 ms. Found 1 Redis repository interface.
2024-07-07 16:05:18 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 16:05:18 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 16:05:18 [INFO] - Starting service [Tomcat]
2024-07-07 16:05:18 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 16:05:18 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 16:05:18 [INFO] - Root WebApplicationContext: initialization completed in 2315 ms
2024-07-07 16:05:18 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 16:05:18 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 16:05:19 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 16:05:19 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 16:05:19 [INFO] - HikariPool-1 - Starting...
2024-07-07 16:05:19 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@71316cd7
2024-07-07 16:05:19 [INFO] - HikariPool-1 - Start completed.
2024-07-07 16:05:20 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 16:05:20 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 16:05:22 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3bc00359, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30b91493, org.springframework.security.web.context.SecurityContextHolderFilter@57e6f449, org.springframework.security.web.header.HeaderWriterFilter@530e500c, org.springframework.security.web.authentication.logout.LogoutFilter@4f1cb802, com.exchange.scanner.security.service.utils.JwtTokenFilter@45775a15, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c64e2d0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@419ac0f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@628fa8ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2771e501, org.springframework.security.web.session.SessionManagementFilter@1d5e0621, org.springframework.security.web.access.ExceptionTranslationFilter@7afffc81, org.springframework.security.web.access.intercept.AuthorizationFilter@48ebcce5]
2024-07-07 16:05:22 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 16:05:22 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 16:05:22 [INFO] - Started ScannerApplication in 6.879 seconds (process running for 7.588)
2024-07-07 16:05:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 16:05:23 [INFO] - Request: GET https://api.binance.com/api/v3/depth?symbol=ENJUSDT&limit=15
2024-07-07 16:05:23 [INFO] - Accept=application/json
2024-07-07 16:05:23 [INFO] - Content-Type=application/json
2024-07-07 16:05:23 [INFO] - Request: GET https://api.binance.com/api/v3/depth?symbol=BTCUSDT&limit=15
2024-07-07 16:05:23 [INFO] - Accept=application/json
2024-07-07 16:05:23 [INFO] - Content-Type=application/json
2024-07-07 16:05:24 [INFO] - Request: GET https://api.binance.com/api/v3/depth?symbol=ETCUSDT&limit=15
2024-07-07 16:05:24 [INFO] - Accept=application/json
2024-07-07 16:05:24 [INFO] - Content-Type=application/json
2024-07-07 16:05:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 1s
2024-07-07 18:31:02 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 11784 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 18:31:02 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 18:31:03 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:31:03 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:31:03 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 18:31:04 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:31:04 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 18:31:04 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 18:31:04 [INFO] - Finished Spring Data repository scanning in 244 ms. Found 6 JPA repository interfaces.
2024-07-07 18:31:04 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:31:04 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:31:04 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:31:04 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:31:04 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:31:04 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:31:04 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:31:04 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:31:04 [INFO] - Finished Spring Data repository scanning in 50 ms. Found 1 Redis repository interface.
2024-07-07 18:31:05 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 18:31:05 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 18:31:05 [INFO] - Starting service [Tomcat]
2024-07-07 18:31:05 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 18:31:05 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 18:31:05 [INFO] - Root WebApplicationContext: initialization completed in 2428 ms
2024-07-07 18:31:05 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 18:31:05 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 18:31:05 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 18:31:05 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 18:31:05 [INFO] - HikariPool-1 - Starting...
2024-07-07 18:31:06 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69f69078
2024-07-07 18:31:06 [INFO] - HikariPool-1 - Start completed.
2024-07-07 18:31:07 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 18:31:07 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:31:08 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b91493, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2771e501, org.springframework.security.web.context.SecurityContextHolderFilter@3a649f9a, org.springframework.security.web.header.HeaderWriterFilter@1c3b4de1, org.springframework.security.web.authentication.logout.LogoutFilter@1077a7, com.exchange.scanner.security.service.utils.JwtTokenFilter@16718e1b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@45da40ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@628fa8ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ab4c4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a7abd4, org.springframework.security.web.session.SessionManagementFilter@aee3d6e, org.springframework.security.web.access.ExceptionTranslationFilter@730c9287, org.springframework.security.web.access.intercept.AuthorizationFilter@4c29138a]
2024-07-07 18:31:09 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 18:31:09 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 18:31:09 [INFO] - Started ScannerApplication in 6.875 seconds (process running for 7.661)
2024-07-07 18:31:09 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 18:31:09 [INFO] - Request: GET https://www.coinw.com/appApi.html?action=currencys
2024-07-07 18:31:09 [INFO] - Accept=application/json
2024-07-07 18:31:09 [INFO] - Content-Type=application/json
2024-07-07 18:31:11 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 18:31:11 [INFO] - Accept=application/json
2024-07-07 18:31:11 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Обновление торговых комиссий успешно завершено
2024-07-07 18:31:12 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 18:31:12 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/symbols
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.kucoin.com/api/v2/symbols
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/currency_pairs
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/symbols/details
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnSymbol
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://www.okx.com/api/v5/public/instruments?instType=SPOT
2024-07-07 18:31:12 [INFO] - Request: GET https://sapi.xt.com/v4/public/symbol
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.mexc.com/api/v3/exchangeInfo
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.poloniex.com/markets
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.huobi.pro/v2/settings/common/symbols
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://www.lbkex.net/v2/accuracy.do
2024-07-07 18:31:12 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://api.coinex.com/v2/spot/market
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:12 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
2024-07-07 18:31:12 [INFO] - Accept=application/json
2024-07-07 18:31:12 [INFO] - Content-Type=application/json
2024-07-07 18:31:20 [INFO] - Обновление списка валют успешно завершено. Время выполения: 8s
2024-07-07 18:31:20 [INFO] - scheduling-1 приступил к выполнению задачи getVolume24h
2024-07-07 18:31:20 [INFO] - Request: GET https://api.coinex.com/v2/spot/ticker?market=ETCUSDT,BENDOGUSDT,BTCUSDT,MICHIUSDT,ENJUSDT,BLOCKUSDT,NEOXUSDT,PITUSDT
2024-07-07 18:31:20 [INFO] - Accept=application/json
2024-07-07 18:31:20 [INFO] - Content-Type=application/json
2024-07-07 18:31:21 [INFO] - Request: GET https://api.huobi.pro/market/detail/merged?symbol=etcusdt
2024-07-07 18:31:21 [INFO] - Accept=application/json
2024-07-07 18:31:21 [INFO] - Content-Type=application/json
2024-07-07 18:31:21 [INFO] - Request: GET https://api.huobi.pro/market/detail/merged?symbol=btcusdt
2024-07-07 18:31:21 [INFO] - Accept=application/json
2024-07-07 18:31:21 [INFO] - Content-Type=application/json
2024-07-07 18:31:22 [INFO] - Request: GET https://api.huobi.pro/market/detail/merged?symbol=enjusdt
2024-07-07 18:31:22 [INFO] - Accept=application/json
2024-07-07 18:31:22 [INFO] - Content-Type=application/json
2024-07-07 18:31:23 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=BLOCK-USDT
2024-07-07 18:31:23 [INFO] - Accept=application/json
2024-07-07 18:31:23 [INFO] - Content-Type=application/json
2024-07-07 18:31:23 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=ETC-USDT
2024-07-07 18:31:23 [INFO] - Accept=application/json
2024-07-07 18:31:23 [INFO] - Content-Type=application/json
2024-07-07 18:31:24 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=WLTH-USDT
2024-07-07 18:31:24 [INFO] - Accept=application/json
2024-07-07 18:31:24 [INFO] - Content-Type=application/json
2024-07-07 18:31:24 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=ENJ-USDT
2024-07-07 18:31:24 [INFO] - Accept=application/json
2024-07-07 18:31:24 [INFO] - Content-Type=application/json
2024-07-07 18:31:25 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=BTC-USDT
2024-07-07 18:31:25 [INFO] - Accept=application/json
2024-07-07 18:31:25 [INFO] - Content-Type=application/json
2024-07-07 18:31:25 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=PIT-USDT
2024-07-07 18:31:25 [INFO] - Accept=application/json
2024-07-07 18:31:25 [INFO] - Content-Type=application/json
2024-07-07 18:31:26 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=michi_usdt
2024-07-07 18:31:26 [INFO] - Accept=application/json
2024-07-07 18:31:26 [INFO] - Content-Type=application/json
2024-07-07 18:31:26 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=pit_usdt
2024-07-07 18:31:26 [INFO] - Accept=application/json
2024-07-07 18:31:26 [INFO] - Content-Type=application/json
2024-07-07 18:31:26 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=etc_usdt
2024-07-07 18:31:26 [INFO] - Accept=application/json
2024-07-07 18:31:26 [INFO] - Content-Type=application/json
2024-07-07 18:31:27 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=block_usdt
2024-07-07 18:31:27 [INFO] - Accept=application/json
2024-07-07 18:31:27 [INFO] - Content-Type=application/json
2024-07-07 18:31:27 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=btc_usdt
2024-07-07 18:31:27 [INFO] - Accept=application/json
2024-07-07 18:31:27 [INFO] - Content-Type=application/json
2024-07-07 18:31:27 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=doga_usdt
2024-07-07 18:31:27 [INFO] - Accept=application/json
2024-07-07 18:31:27 [INFO] - Content-Type=application/json
2024-07-07 18:31:28 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=WLTHUSDT
2024-07-07 18:31:28 [INFO] - Accept=application/json
2024-07-07 18:31:28 [INFO] - Content-Type=application/json
2024-07-07 18:31:28 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=MICHIUSDT
2024-07-07 18:31:28 [INFO] - Accept=application/json
2024-07-07 18:31:28 [INFO] - Content-Type=application/json
2024-07-07 18:31:28 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=ETCUSDT
2024-07-07 18:31:28 [INFO] - Accept=application/json
2024-07-07 18:31:28 [INFO] - Content-Type=application/json
2024-07-07 18:31:28 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=BTCUSDT
2024-07-07 18:31:28 [INFO] - Accept=application/json
2024-07-07 18:31:28 [INFO] - Content-Type=application/json
2024-07-07 18:31:29 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=PITUSDT
2024-07-07 18:31:29 [INFO] - Accept=application/json
2024-07-07 18:31:29 [INFO] - Content-Type=application/json
2024-07-07 18:31:29 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=ENJUSDT
2024-07-07 18:31:29 [INFO] - Accept=application/json
2024-07-07 18:31:29 [INFO] - Content-Type=application/json
2024-07-07 18:31:29 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=CRETAUSDT
2024-07-07 18:31:29 [INFO] - Accept=application/json
2024-07-07 18:31:29 [INFO] - Content-Type=application/json
2024-07-07 18:31:29 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=KZENUSDT
2024-07-07 18:31:29 [INFO] - Accept=application/json
2024-07-07 18:31:29 [INFO] - Content-Type=application/json
2024-07-07 18:31:30 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=DOGAUSDT
2024-07-07 18:31:30 [INFO] - Accept=application/json
2024-07-07 18:31:30 [INFO] - Content-Type=application/json
2024-07-07 18:31:30 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=NEOXUSDT
2024-07-07 18:31:30 [INFO] - Accept=application/json
2024-07-07 18:31:30 [INFO] - Content-Type=application/json
2024-07-07 18:31:30 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=BLOCKUSDT
2024-07-07 18:31:30 [INFO] - Accept=application/json
2024-07-07 18:31:30 [INFO] - Content-Type=application/json
2024-07-07 18:31:31 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=BENDOGUSDT
2024-07-07 18:31:31 [INFO] - Accept=application/json
2024-07-07 18:31:31 [INFO] - Content-Type=application/json
2024-07-07 18:31:31 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=BTCUSDT
2024-07-07 18:31:31 [INFO] - Accept=application/json
2024-07-07 18:31:31 [INFO] - Content-Type=application/json
2024-07-07 18:31:31 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=ENJUSDT
2024-07-07 18:31:31 [INFO] - Accept=application/json
2024-07-07 18:31:31 [INFO] - Content-Type=application/json
2024-07-07 18:31:32 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=ETCUSDT
2024-07-07 18:31:32 [INFO] - Accept=application/json
2024-07-07 18:31:32 [INFO] - Content-Type=application/json
2024-07-07 18:31:32 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=CRETAUSDT
2024-07-07 18:31:32 [INFO] - Accept=application/json
2024-07-07 18:31:32 [INFO] - Content-Type=application/json
2024-07-07 18:31:32 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=BENDOGUSDT
2024-07-07 18:31:32 [INFO] - Accept=application/json
2024-07-07 18:31:32 [INFO] - Content-Type=application/json
2024-07-07 18:31:33 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=BENDOG_USDT
2024-07-07 18:31:33 [INFO] - Accept=application/json
2024-07-07 18:31:33 [INFO] - Content-Type=application/json
2024-07-07 18:31:33 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=PIT_USDT
2024-07-07 18:31:33 [INFO] - Accept=application/json
2024-07-07 18:31:33 [INFO] - Content-Type=application/json
2024-07-07 18:31:34 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=DOGA_USDT
2024-07-07 18:31:34 [INFO] - Accept=application/json
2024-07-07 18:31:34 [INFO] - Content-Type=application/json
2024-07-07 18:31:34 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=KZEN_USDT
2024-07-07 18:31:34 [INFO] - Accept=application/json
2024-07-07 18:31:34 [INFO] - Content-Type=application/json
2024-07-07 18:31:35 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=BLOCK_USDT
2024-07-07 18:31:35 [INFO] - Accept=application/json
2024-07-07 18:31:35 [INFO] - Content-Type=application/json
2024-07-07 18:31:35 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=BTC_USDT
2024-07-07 18:31:35 [INFO] - Accept=application/json
2024-07-07 18:31:35 [INFO] - Content-Type=application/json
2024-07-07 18:31:35 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=ETC_USDT
2024-07-07 18:31:35 [INFO] - Accept=application/json
2024-07-07 18:31:35 [INFO] - Content-Type=application/json
2024-07-07 18:31:36 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=WLTH_USDT
2024-07-07 18:31:36 [INFO] - Accept=application/json
2024-07-07 18:31:36 [INFO] - Content-Type=application/json
2024-07-07 18:31:36 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=ENJ_USDT
2024-07-07 18:31:36 [INFO] - Accept=application/json
2024-07-07 18:31:36 [INFO] - Content-Type=application/json
2024-07-07 18:31:36 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=BTC-USDT
2024-07-07 18:31:36 [INFO] - Accept=application/json
2024-07-07 18:31:36 [INFO] - Content-Type=application/json
2024-07-07 18:31:37 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=ETC-USDT
2024-07-07 18:31:37 [INFO] - Accept=application/json
2024-07-07 18:31:37 [INFO] - Content-Type=application/json
2024-07-07 18:31:37 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=BLOCK-USDT
2024-07-07 18:31:37 [INFO] - Accept=application/json
2024-07-07 18:31:37 [INFO] - Content-Type=application/json
2024-07-07 18:31:38 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=ENJ-USDT
2024-07-07 18:31:38 [INFO] - Accept=application/json
2024-07-07 18:31:38 [INFO] - Content-Type=application/json
2024-07-07 18:31:38 [INFO] - Request: GET https://sapi.xt.com/v4/public/ticker?symbols=enj_usdt,etc_usdt,bendog_usdt,neox_usdt,btc_usdt,michi_usdt,pit_usdt,creta_usdt
2024-07-07 18:31:38 [INFO] - Accept=application/json
2024-07-07 18:31:38 [INFO] - Content-Type=application/json
2024-07-07 18:31:38 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnTicker
2024-07-07 18:31:38 [INFO] - Accept=application/json
2024-07-07 18:31:38 [INFO] - Content-Type=application/json
2024-07-07 18:31:39 [INFO] - Request: GET https://api.poloniex.com/markets/ENJ_USDT/ticker24h
2024-07-07 18:31:39 [INFO] - Accept=application/json
2024-07-07 18:31:39 [INFO] - Content-Type=application/json
2024-07-07 18:31:40 [INFO] - Request: GET https://api.poloniex.com/markets/BENDOG_USDT/ticker24h
2024-07-07 18:31:40 [INFO] - Accept=application/json
2024-07-07 18:31:40 [INFO] - Content-Type=application/json
2024-07-07 18:31:40 [INFO] - Request: GET https://api.poloniex.com/markets/ETC_USDT/ticker24h
2024-07-07 18:31:40 [INFO] - Accept=application/json
2024-07-07 18:31:40 [INFO] - Content-Type=application/json
2024-07-07 18:31:40 [INFO] - Request: GET https://api.poloniex.com/markets/MICHI_USDT/ticker24h
2024-07-07 18:31:40 [INFO] - Accept=application/json
2024-07-07 18:31:40 [INFO] - Content-Type=application/json
2024-07-07 18:31:41 [INFO] - Request: GET https://api.poloniex.com/markets/BTC_USDT/ticker24h
2024-07-07 18:31:41 [INFO] - Accept=application/json
2024-07-07 18:31:41 [INFO] - Content-Type=application/json
2024-07-07 18:31:41 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=BTC_USDT
2024-07-07 18:31:41 [INFO] - Accept=application/json
2024-07-07 18:31:41 [INFO] - Content-Type=application/json
2024-07-07 18:31:42 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=ETC_USDT
2024-07-07 18:31:42 [INFO] - Accept=application/json
2024-07-07 18:31:42 [INFO] - Content-Type=application/json
2024-07-07 18:31:42 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=BLOCK_USDT
2024-07-07 18:31:42 [INFO] - Accept=application/json
2024-07-07 18:31:42 [INFO] - Content-Type=application/json
2024-07-07 18:31:43 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=BLOCKUSDT
2024-07-07 18:31:43 [INFO] - Accept=application/json
2024-07-07 18:31:43 [INFO] - Content-Type=application/json
2024-07-07 18:31:43 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=BTCUSDT
2024-07-07 18:31:43 [INFO] - Accept=application/json
2024-07-07 18:31:43 [INFO] - Content-Type=application/json
2024-07-07 18:31:43 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=ETCUSDT
2024-07-07 18:31:43 [INFO] - Accept=application/json
2024-07-07 18:31:43 [INFO] - Content-Type=application/json
2024-07-07 18:31:44 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=ENJUSDT
2024-07-07 18:31:44 [INFO] - Accept=application/json
2024-07-07 18:31:44 [INFO] - Content-Type=application/json
2024-07-07 18:31:44 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/ticker?market_ids=BTC-USDT,DOGA-USDT,ENJ-USDT,ETC-USDT
2024-07-07 18:31:44 [INFO] - Accept=application/json
2024-07-07 18:31:44 [INFO] - Content-Type=application/json
2024-07-07 18:31:45 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=BTC-USDT&timestamp=1720366305242
2024-07-07 18:31:45 [INFO] - Accept=application/json
2024-07-07 18:31:45 [INFO] - Content-Type=application/json
2024-07-07 18:31:45 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=MICHI-USDT&timestamp=1720366305710
2024-07-07 18:31:45 [INFO] - Accept=application/json
2024-07-07 18:31:45 [INFO] - Content-Type=application/json
2024-07-07 18:31:46 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=BENDOG-USDT&timestamp=1720366306166
2024-07-07 18:31:46 [INFO] - Accept=application/json
2024-07-07 18:31:46 [INFO] - Content-Type=application/json
2024-07-07 18:31:46 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=ENJ-USDT&timestamp=1720366306609
2024-07-07 18:31:46 [INFO] - Accept=application/json
2024-07-07 18:31:46 [INFO] - Content-Type=application/json
2024-07-07 18:31:47 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=ETC-USDT&timestamp=1720366307047
2024-07-07 18:31:47 [INFO] - Accept=application/json
2024-07-07 18:31:47 [INFO] - Content-Type=application/json
2024-07-07 18:31:47 [INFO] - Обновление суточного торгового объёма успешно завершено
2024-07-07 18:31:47 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 18:31:47 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 18:31:47 [INFO] - Accept=application/json
2024-07-07 18:31:47 [INFO] - Content-Type=application/json
2024-07-07 18:31:47 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 18:31:47 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 18:31:47 [INFO] - validate-recvwindow=5000
2024-07-07 18:31:47 [INFO] - validate-signature=028fb6ac6944146c3d56d6e88887a37fe19ec6ab5dfa5263dca5342dd54355b9
2024-07-07 18:31:47 [INFO] - validate-timestamp=1720366307805
2024-07-07 18:31:48 [INFO] - Request: GET https://api-cloud.bitmart.com/account/v1/currencies
2024-07-07 18:31:48 [INFO] - Accept=application/json
2024-07-07 18:31:48 [INFO] - Content-Type=application/json
2024-07-07 18:31:48 [INFO] - X-BM-TIMESTAMP=1720366308200
2024-07-07 18:31:48 [INFO] - X-BM-KEY=19396aef3a650f3995c5caad42935bcc681a0cff
2024-07-07 18:31:48 [INFO] - X-BM-SIGN=74bc62b815971cb99e6896341603cd63775b3de4601e71322bf2090d023a4e94
2024-07-07 18:31:49 [INFO] - Request: GET https://www.okx.com/api/v5/asset/currencies?ccy=ENJ,BLOCK,ETC,BTC
2024-07-07 18:31:49 [INFO] - Accept=application/json
2024-07-07 18:31:49 [INFO] - Content-Type=application/json
2024-07-07 18:31:49 [INFO] - OK-ACCESS-KEY=4f817d5b-5ced-4b00-b5e3-d9c3bf7a0e70
2024-07-07 18:31:49 [INFO] - OK-ACCESS-SIGN=2kclcFMTER4uM++914gDttwRdQZO0AGYd8ecJSoyPeM=
2024-07-07 18:31:49 [INFO] - OK-ACCESS-TIMESTAMP=2024-07-07T15:31:49.327Z
2024-07-07 18:31:49 [INFO] - OK-ACCESS-PASSPHRASE=Passphrase1#
2024-07-07 18:31:49 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=BLOCK
2024-07-07 18:31:49 [INFO] - Accept=application/json
2024-07-07 18:31:49 [INFO] - Content-Type=application/json
2024-07-07 18:31:49 [INFO] - X-BAPI-SIGN=b2d3394c213cf67a30f465d56487f5517c91023df0f72ce6d4607ec835464a1f
2024-07-07 18:31:49 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:31:49 [INFO] - X-BAPI-TIMESTAMP=1720366309694
2024-07-07 18:31:49 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:31:50 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=BTC
2024-07-07 18:31:50 [INFO] - Accept=application/json
2024-07-07 18:31:50 [INFO] - Content-Type=application/json
2024-07-07 18:31:50 [INFO] - X-BAPI-SIGN=efcb7368081a40a9aed6cea375335c81d0e6ee8ee189ef019c497eb79a2a871d
2024-07-07 18:31:50 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:31:50 [INFO] - X-BAPI-TIMESTAMP=1720366310130
2024-07-07 18:31:50 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:31:50 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=ENJ
2024-07-07 18:31:50 [INFO] - Accept=application/json
2024-07-07 18:31:50 [INFO] - Content-Type=application/json
2024-07-07 18:31:50 [INFO] - X-BAPI-SIGN=ff5ba7c5fe2fa22f6f2c2e6fd6d8da910906c91aca7de366b4e86bdfd2a93a36
2024-07-07 18:31:50 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:31:50 [INFO] - X-BAPI-TIMESTAMP=1720366310576
2024-07-07 18:31:50 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:31:51 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=ETC
2024-07-07 18:31:51 [INFO] - Accept=application/json
2024-07-07 18:31:51 [INFO] - Content-Type=application/json
2024-07-07 18:31:51 [INFO] - X-BAPI-SIGN=323ee038e60959fd827ba3e91764a851cef419a7b0971e38da369536d28cf01b
2024-07-07 18:31:51 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:31:51 [INFO] - X-BAPI-TIMESTAMP=1720366311019
2024-07-07 18:31:51 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:31:51 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnCurrencies
2024-07-07 18:31:51 [INFO] - Accept=application/json
2024-07-07 18:31:51 [INFO] - Content-Type=application/json
2024-07-07 18:31:52 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=BTC
2024-07-07 18:31:52 [INFO] - Accept=application/json
2024-07-07 18:31:52 [INFO] - Content-Type=application/json
2024-07-07 18:31:52 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:52 [INFO] - SIGN=c427dddec497b11650e3ac4b6eaddb92d90e91e500ebcb8a412d59fe32f20056da88944944132b6aea28d98c576d08ceb54d1ff0522ce2d81a51947797271129
2024-07-07 18:31:53 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=BLOCK
2024-07-07 18:31:53 [INFO] - Accept=application/json
2024-07-07 18:31:53 [INFO] - Content-Type=application/json
2024-07-07 18:31:53 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:53 [INFO] - SIGN=715479347f3f94acd37163f213a61785b652b5b7e474a225b00c4995d600d704325c22e674b2e7e768fb06115d9eb551472054d4cc0a647ec125f4eef6f2e159
2024-07-07 18:31:53 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=ETC
2024-07-07 18:31:53 [INFO] - Accept=application/json
2024-07-07 18:31:53 [INFO] - Content-Type=application/json
2024-07-07 18:31:53 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:53 [INFO] - SIGN=125b2553f2274fb98db496dc9c52ef4549632bc2c569a01c18011c015955429e9e4c9356d17cf5a3113d3853f677ea52dd87d323353719e04edf3118e25181a9
2024-07-07 18:31:53 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=ENJ
2024-07-07 18:31:53 [INFO] - Accept=application/json
2024-07-07 18:31:53 [INFO] - Content-Type=application/json
2024-07-07 18:31:53 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:53 [INFO] - SIGN=ce7015c3ad7b7e53dc3b85c84e64ead592fce6f55b5c1a70a7176b97d5ed48c67c6c0b4551dd2b4c736a1be7db0c2f8923d37d71b5afb8392bf99c855422ce5b
2024-07-07 18:31:54 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=BENDOG
2024-07-07 18:31:54 [INFO] - Accept=application/json
2024-07-07 18:31:54 [INFO] - Content-Type=application/json
2024-07-07 18:31:54 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:54 [INFO] - SIGN=e4e6d5defa69c5bc8944df86439f007fcdfd16d4c5120f2956cc8d273dd1fa5c36927867705f66f5ae1a91bf231a2439dda8ff82983a73d5f9dd97dc76a3348b
2024-07-07 18:31:54 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=PIT
2024-07-07 18:31:54 [INFO] - Accept=application/json
2024-07-07 18:31:54 [INFO] - Content-Type=application/json
2024-07-07 18:31:54 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:54 [INFO] - SIGN=ce9133d48d64c31ffb50a7ffe72bea39e4df40b1d7db74c3d2a7a38b894f1fbaae1050e607edbfa11ba4473985fe49dbf6010a788f5b7c11f56f7f1d5b6805f2
2024-07-07 18:31:55 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=KZEN
2024-07-07 18:31:55 [INFO] - Accept=application/json
2024-07-07 18:31:55 [INFO] - Content-Type=application/json
2024-07-07 18:31:55 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:55 [INFO] - SIGN=0e0b2a8712d342311556599f06c3dd57817d86b4809ad1f22527e4cfa31bbc825f95d3501f875158f5b2fb2f4e601452fa40375c4a64444456de50e626ab1e7a
2024-07-07 18:31:55 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=DOGA
2024-07-07 18:31:55 [INFO] - Accept=application/json
2024-07-07 18:31:55 [INFO] - Content-Type=application/json
2024-07-07 18:31:55 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:55 [INFO] - SIGN=7aaaf024ae8db0daac5f5292d39079d2aba11ddd9d097240cb9622541e53ee29c371d458f311944e242810a0b458d3c3d08b579a9afa8786ed642df499a2c745
2024-07-07 18:31:56 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=WLTH
2024-07-07 18:31:56 [INFO] - Accept=application/json
2024-07-07 18:31:56 [INFO] - Content-Type=application/json
2024-07-07 18:31:56 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:31:56 [INFO] - SIGN=56c049e2886c336162e46d0636353d5af6c90a48f1b4df10ddba3d45e2e6bb4406ff838f10fd669f214d1a3490c97d1ea4d66561675d082a4dee41076020da31
2024-07-07 18:31:56 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/ENJ
2024-07-07 18:31:56 [INFO] - Accept=application/json
2024-07-07 18:31:56 [INFO] - Content-Type=application/json
2024-07-07 18:31:56 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/BTC
2024-07-07 18:31:56 [INFO] - Accept=application/json
2024-07-07 18:31:56 [INFO] - Content-Type=application/json
2024-07-07 18:31:57 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/ETC
2024-07-07 18:31:57 [INFO] - Accept=application/json
2024-07-07 18:31:57 [INFO] - Content-Type=application/json
2024-07-07 18:31:57 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/WLTH
2024-07-07 18:31:57 [INFO] - Accept=application/json
2024-07-07 18:31:57 [INFO] - Content-Type=application/json
2024-07-07 18:31:57 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/PIT
2024-07-07 18:31:57 [INFO] - Accept=application/json
2024-07-07 18:31:57 [INFO] - Content-Type=application/json
2024-07-07 18:31:57 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/BLOCK
2024-07-07 18:31:57 [INFO] - Accept=application/json
2024-07-07 18:31:57 [INFO] - Content-Type=application/json
2024-07-07 18:31:58 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=block
2024-07-07 18:31:58 [INFO] - Accept=application/json
2024-07-07 18:31:58 [INFO] - Content-Type=application/json
2024-07-07 18:31:59 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=btc
2024-07-07 18:31:59 [INFO] - Accept=application/json
2024-07-07 18:31:59 [INFO] - Content-Type=application/json
2024-07-07 18:31:59 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=pit
2024-07-07 18:31:59 [INFO] - Accept=application/json
2024-07-07 18:31:59 [INFO] - Content-Type=application/json
2024-07-07 18:31:59 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=doga
2024-07-07 18:31:59 [INFO] - Accept=application/json
2024-07-07 18:31:59 [INFO] - Content-Type=application/json
2024-07-07 18:32:00 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=michi
2024-07-07 18:32:00 [INFO] - Accept=application/json
2024-07-07 18:32:00 [INFO] - Content-Type=application/json
2024-07-07 18:32:00 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=etc
2024-07-07 18:32:00 [INFO] - Accept=application/json
2024-07-07 18:32:00 [INFO] - Content-Type=application/json
2024-07-07 18:32:00 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI&timestamp=1720366320735
2024-07-07 18:32:00 [INFO] - Accept=application/json
2024-07-07 18:32:00 [INFO] - Content-Type=application/json
2024-07-07 18:32:00 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:32:00 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:32:00 [INFO] - signature=9e3cc324b4eb9c348901132935af7f3a2dcfca9dbdabaa59cc28f71716e5faa5
2024-07-07 18:32:01 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720366321514
2024-07-07 18:32:01 [INFO] - Accept=application/json
2024-07-07 18:32:01 [INFO] - Content-Type=application/json
2024-07-07 18:32:01 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:32:01 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:32:01 [INFO] - signature=7cc0689b706a7a6d44f2f774feea19fbf32c33e1a5eac9885e7b01cdc6c86193
2024-07-07 18:32:02 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720366322274
2024-07-07 18:32:02 [INFO] - Accept=application/json
2024-07-07 18:32:02 [INFO] - Content-Type=application/json
2024-07-07 18:32:02 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:32:02 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:32:02 [INFO] - signature=abb4bb87188b253457b25b94c41a47e5d29a5df9b099438c4fe150bd62c6a1ae
2024-07-07 18:32:03 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG&timestamp=1720366323021
2024-07-07 18:32:03 [INFO] - Accept=application/json
2024-07-07 18:32:03 [INFO] - Content-Type=application/json
2024-07-07 18:32:03 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:32:03 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:32:03 [INFO] - signature=f845bec801d7bd75a8b5c58a17e4ee1f9773280ec420ac814c556f962f78070d
2024-07-07 18:32:03 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC&timestamp=1720366323795
2024-07-07 18:32:03 [INFO] - Accept=application/json
2024-07-07 18:32:03 [INFO] - Content-Type=application/json
2024-07-07 18:32:03 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:32:03 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:32:03 [INFO] - signature=b6fe2e6a1bf45ed06c58ecef78e72812f45cba6e1a77ecd770deceb948b9f415
2024-07-07 18:32:04 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=ENJ
2024-07-07 18:32:04 [INFO] - Accept=application/json
2024-07-07 18:32:04 [INFO] - Content-Type=application/json
2024-07-07 18:32:05 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=CRETA
2024-07-07 18:32:05 [INFO] - Accept=application/json
2024-07-07 18:32:05 [INFO] - Content-Type=application/json
2024-07-07 18:32:05 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=BENDOG
2024-07-07 18:32:05 [INFO] - Accept=application/json
2024-07-07 18:32:05 [INFO] - Content-Type=application/json
2024-07-07 18:32:05 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=BTC
2024-07-07 18:32:05 [INFO] - Accept=application/json
2024-07-07 18:32:05 [INFO] - Content-Type=application/json
2024-07-07 18:32:06 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=ETC
2024-07-07 18:32:06 [INFO] - Accept=application/json
2024-07-07 18:32:06 [INFO] - Content-Type=application/json
2024-07-07 18:32:06 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/currency
2024-07-07 18:32:06 [INFO] - Accept=application/json
2024-07-07 18:32:06 [INFO] - Content-Type=application/json
2024-07-07 18:32:08 [INFO] - Request: GET https://api.coinex.com/v2/assets/all-deposit-withdraw-config
2024-07-07 18:32:08 [INFO] - Accept=application/json
2024-07-07 18:32:08 [INFO] - Content-Type=application/json
2024-07-07 18:32:08 [INFO] - X-COINEX-KEY=7323B954D3EF4A61A86B1F1B843538D4
2024-07-07 18:32:08 [INFO] - X-COINEX-SIGN=f673adf22017441986810c9b57565d3b040d4579fc0fd48cf554129eb01bccad
2024-07-07 18:32:08 [INFO] - X-COINEX-TIMESTAMP=1720366328990
2024-07-07 18:32:09 [INFO] - Request: GET https://api.poloniex.com/currencies/ENJ
2024-07-07 18:32:09 [INFO] - Accept=application/json
2024-07-07 18:32:09 [INFO] - Content-Type=application/json
2024-07-07 18:32:09 [INFO] - Request: GET https://api.poloniex.com/currencies/BENDOG
2024-07-07 18:32:09 [INFO] - Accept=application/json
2024-07-07 18:32:09 [INFO] - Content-Type=application/json
2024-07-07 18:32:10 [INFO] - Request: GET https://api.poloniex.com/currencies/BTC
2024-07-07 18:32:10 [INFO] - Accept=application/json
2024-07-07 18:32:10 [INFO] - Content-Type=application/json
2024-07-07 18:32:10 [INFO] - Request: GET https://api.poloniex.com/currencies/MICHI
2024-07-07 18:32:10 [INFO] - Accept=application/json
2024-07-07 18:32:10 [INFO] - Content-Type=application/json
2024-07-07 18:32:10 [INFO] - Request: GET https://api.poloniex.com/currencies/ETC
2024-07-07 18:32:10 [INFO] - Accept=application/json
2024-07-07 18:32:10 [INFO] - Content-Type=application/json
2024-07-07 18:32:11 [INFO] - Request: GET https://api.huobi.pro/v2/reference/currencies?currency=enj
2024-07-07 18:32:11 [INFO] - Accept=application/json
2024-07-07 18:32:11 [INFO] - Content-Type=application/json
2024-07-07 18:32:11 [INFO] - Request: GET https://api.huobi.pro/v2/reference/currencies?currency=btc
2024-07-07 18:32:11 [INFO] - Accept=application/json
2024-07-07 18:32:11 [INFO] - Content-Type=application/json
2024-07-07 18:32:11 [INFO] - Request: GET https://api.huobi.pro/v2/reference/currencies?currency=etc
2024-07-07 18:32:11 [INFO] - Accept=application/json
2024-07-07 18:32:11 [INFO] - Content-Type=application/json
2024-07-07 18:32:12 [INFO] - Request: GET https://api.mexc.com/api/v3/capital/config/getall?signature=52de5b7e67db18a96b20c14f458c15d6efd5f2983b5d3414bb97ca87fe93769b&recvWindow=5000&timestamp=1720366332206
2024-07-07 18:32:12 [INFO] - Accept=application/json
2024-07-07 18:32:12 [INFO] - Content-Type=application/json
2024-07-07 18:32:12 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:32:12 [INFO] - Обновление списка сетей успешно завершено
2024-07-07 18:36:37 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 22556 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 18:36:37 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 18:36:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:36:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:36:38 [INFO] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-07 18:36:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:36:38 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 18:36:38 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 18:36:38 [INFO] - Finished Spring Data repository scanning in 189 ms. Found 6 JPA repository interfaces.
2024-07-07 18:36:38 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:36:38 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:36:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:36:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:36:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:36:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:36:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:36:38 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:36:38 [INFO] - Finished Spring Data repository scanning in 50 ms. Found 1 Redis repository interface.
2024-07-07 18:36:39 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 18:36:39 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 18:36:39 [INFO] - Starting service [Tomcat]
2024-07-07 18:36:39 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 18:36:39 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 18:36:39 [INFO] - Root WebApplicationContext: initialization completed in 2104 ms
2024-07-07 18:36:39 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 18:36:39 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 18:36:39 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 18:36:40 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 18:36:40 [INFO] - HikariPool-1 - Starting...
2024-07-07 18:36:40 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1dfcf85a
2024-07-07 18:36:40 [INFO] - HikariPool-1 - Start completed.
2024-07-07 18:36:41 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 18:36:41 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:36:42 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5697f801, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15382815, org.springframework.security.web.context.SecurityContextHolderFilter@5118c7fb, org.springframework.security.web.header.HeaderWriterFilter@417f7d7f, org.springframework.security.web.authentication.logout.LogoutFilter@78b20c7f, com.exchange.scanner.security.service.utils.JwtTokenFilter@78de0f6f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3adf3670, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8be84bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d5e0621, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39b265c9, org.springframework.security.web.session.SessionManagementFilter@5d0ea2af, org.springframework.security.web.access.ExceptionTranslationFilter@2c62f56f, org.springframework.security.web.access.intercept.AuthorizationFilter@3110bb19]
2024-07-07 18:36:43 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 18:36:43 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 18:36:43 [INFO] - Started ScannerApplication in 6.394 seconds (process running for 7.125)
2024-07-07 18:36:43 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 18:37:11 [INFO] - Обновление списка сетей успешно завершено. Время выполнения 27
2024-07-07 18:37:11 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 18:37:43 [INFO] - Обновление списка валют успешно завершено. Время выполения: 31s
2024-07-07 18:37:43 [INFO] - scheduling-1 приступил к выполнению задачи getVolume24h
2024-07-07 18:38:09 [INFO] - Обновление суточного торгового объёма успешно завершено. Время выполнения 25s
2024-07-07 18:38:09 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 18:38:35 [INFO] - Обновление торговых комиссий успешно завершено. Время выполнения 26s
2024-07-07 18:41:52 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 26508 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 18:41:52 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 18:41:52 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:41:52 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:41:52 [INFO] - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-07 18:41:53 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:41:53 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 18:41:53 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 18:41:53 [INFO] - Finished Spring Data repository scanning in 207 ms. Found 6 JPA repository interfaces.
2024-07-07 18:41:53 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:41:53 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:41:53 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:41:53 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:41:53 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:41:53 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:41:53 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:41:53 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:41:53 [INFO] - Finished Spring Data repository scanning in 39 ms. Found 1 Redis repository interface.
2024-07-07 18:41:54 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 18:41:54 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 18:41:54 [INFO] - Starting service [Tomcat]
2024-07-07 18:41:54 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 18:41:54 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 18:41:54 [INFO] - Root WebApplicationContext: initialization completed in 2092 ms
2024-07-07 18:41:54 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 18:41:54 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 18:41:54 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 18:41:54 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 18:41:54 [INFO] - HikariPool-1 - Starting...
2024-07-07 18:41:54 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@64ed18ec
2024-07-07 18:41:54 [INFO] - HikariPool-1 - Start completed.
2024-07-07 18:41:56 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 18:41:56 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:41:57 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15382815, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39b265c9, org.springframework.security.web.context.SecurityContextHolderFilter@792b0cad, org.springframework.security.web.header.HeaderWriterFilter@da09b52, org.springframework.security.web.authentication.logout.LogoutFilter@128579a6, com.exchange.scanner.security.service.utils.JwtTokenFilter@117be84a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f6e6902, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d5e0621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@aee3d6e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c64e2d0, org.springframework.security.web.session.SessionManagementFilter@7fec354, org.springframework.security.web.access.ExceptionTranslationFilter@65f270e7, org.springframework.security.web.access.intercept.AuthorizationFilter@1be6c991]
2024-07-07 18:41:58 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 18:41:58 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 18:41:58 [INFO] - Started ScannerApplication in 6.464 seconds (process running for 7.205)
2024-07-07 18:41:58 [INFO] - scheduling-1 приступил к выполнению задачи getVolume24h
2024-07-07 18:41:58 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=ETCUSDT
2024-07-07 18:41:58 [INFO] - Accept=application/json
2024-07-07 18:41:58 [INFO] - Content-Type=application/json
2024-07-07 18:41:59 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=BTCUSDT
2024-07-07 18:41:59 [INFO] - Accept=application/json
2024-07-07 18:41:59 [INFO] - Content-Type=application/json
2024-07-07 18:41:59 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=ENJUSDT
2024-07-07 18:41:59 [INFO] - Accept=application/json
2024-07-07 18:41:59 [INFO] - Content-Type=application/json
2024-07-07 18:42:00 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/quote/ticker/24hr?symbol=BLOCKUSDT
2024-07-07 18:42:00 [INFO] - Accept=application/json
2024-07-07 18:42:00 [INFO] - Content-Type=application/json
2024-07-07 18:42:00 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=BTCUSDT
2024-07-07 18:42:00 [INFO] - Accept=application/json
2024-07-07 18:42:00 [INFO] - Content-Type=application/json
2024-07-07 18:42:01 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=ETCUSDT
2024-07-07 18:42:01 [INFO] - Accept=application/json
2024-07-07 18:42:01 [INFO] - Content-Type=application/json
2024-07-07 18:42:01 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=ENJUSDT
2024-07-07 18:42:01 [INFO] - Accept=application/json
2024-07-07 18:42:01 [INFO] - Content-Type=application/json
2024-07-07 18:42:01 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=DOGAUSDT
2024-07-07 18:42:01 [INFO] - Accept=application/json
2024-07-07 18:42:01 [INFO] - Content-Type=application/json
2024-07-07 18:42:01 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=CRETAUSDT
2024-07-07 18:42:01 [INFO] - Accept=application/json
2024-07-07 18:42:01 [INFO] - Content-Type=application/json
2024-07-07 18:42:02 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=WLTHUSDT
2024-07-07 18:42:02 [INFO] - Accept=application/json
2024-07-07 18:42:02 [INFO] - Content-Type=application/json
2024-07-07 18:42:02 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=NEOXUSDT
2024-07-07 18:42:02 [INFO] - Accept=application/json
2024-07-07 18:42:02 [INFO] - Content-Type=application/json
2024-07-07 18:42:02 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=PITUSDT
2024-07-07 18:42:02 [INFO] - Accept=application/json
2024-07-07 18:42:02 [INFO] - Content-Type=application/json
2024-07-07 18:42:03 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=MICHIUSDT
2024-07-07 18:42:03 [INFO] - Accept=application/json
2024-07-07 18:42:03 [INFO] - Content-Type=application/json
2024-07-07 18:42:03 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=BLOCKUSDT
2024-07-07 18:42:03 [INFO] - Accept=application/json
2024-07-07 18:42:03 [INFO] - Content-Type=application/json
2024-07-07 18:42:03 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=BENDOGUSDT
2024-07-07 18:42:03 [INFO] - Accept=application/json
2024-07-07 18:42:03 [INFO] - Content-Type=application/json
2024-07-07 18:42:03 [INFO] - Request: GET https://api.mexc.com/api/v3/ticker/24hr?symbol=KZENUSDT
2024-07-07 18:42:03 [INFO] - Accept=application/json
2024-07-07 18:42:03 [INFO] - Content-Type=application/json
2024-07-07 18:42:04 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=KZEN_USDT
2024-07-07 18:42:04 [INFO] - Accept=application/json
2024-07-07 18:42:04 [INFO] - Content-Type=application/json
2024-07-07 18:42:05 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=ETC_USDT
2024-07-07 18:42:05 [INFO] - Accept=application/json
2024-07-07 18:42:05 [INFO] - Content-Type=application/json
2024-07-07 18:42:05 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=PIT_USDT
2024-07-07 18:42:05 [INFO] - Accept=application/json
2024-07-07 18:42:05 [INFO] - Content-Type=application/json
2024-07-07 18:42:06 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=ENJ_USDT
2024-07-07 18:42:06 [INFO] - Accept=application/json
2024-07-07 18:42:06 [INFO] - Content-Type=application/json
2024-07-07 18:42:06 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=BLOCK_USDT
2024-07-07 18:42:06 [INFO] - Accept=application/json
2024-07-07 18:42:06 [INFO] - Content-Type=application/json
2024-07-07 18:42:07 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=BTC_USDT
2024-07-07 18:42:07 [INFO] - Accept=application/json
2024-07-07 18:42:07 [INFO] - Content-Type=application/json
2024-07-07 18:42:07 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=WLTH_USDT
2024-07-07 18:42:07 [INFO] - Accept=application/json
2024-07-07 18:42:07 [INFO] - Content-Type=application/json
2024-07-07 18:42:07 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=BENDOG_USDT
2024-07-07 18:42:07 [INFO] - Accept=application/json
2024-07-07 18:42:07 [INFO] - Content-Type=application/json
2024-07-07 18:42:08 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/tickers?currency_pair=DOGA_USDT
2024-07-07 18:42:08 [INFO] - Accept=application/json
2024-07-07 18:42:08 [INFO] - Content-Type=application/json
2024-07-07 18:42:08 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnTicker
2024-07-07 18:42:08 [INFO] - Accept=application/json
2024-07-07 18:42:08 [INFO] - Content-Type=application/json
2024-07-07 18:42:09 [INFO] - Request: GET https://sapi.xt.com/v4/public/ticker?symbols=michi_usdt,pit_usdt,etc_usdt,neox_usdt,enj_usdt,creta_usdt,btc_usdt,bendog_usdt
2024-07-07 18:42:09 [INFO] - Accept=application/json
2024-07-07 18:42:09 [INFO] - Content-Type=application/json
2024-07-07 18:42:09 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=ETC-USDT&timestamp=1720366929539
2024-07-07 18:42:09 [INFO] - Accept=application/json
2024-07-07 18:42:09 [INFO] - Content-Type=application/json
2024-07-07 18:42:10 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=ENJ-USDT&timestamp=1720366930734
2024-07-07 18:42:10 [INFO] - Accept=application/json
2024-07-07 18:42:10 [INFO] - Content-Type=application/json
2024-07-07 18:42:11 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=BENDOG-USDT&timestamp=1720366931177
2024-07-07 18:42:11 [INFO] - Accept=application/json
2024-07-07 18:42:11 [INFO] - Content-Type=application/json
2024-07-07 18:42:12 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=BTC-USDT&timestamp=1720366932223
2024-07-07 18:42:12 [INFO] - Accept=application/json
2024-07-07 18:42:12 [INFO] - Content-Type=application/json
2024-07-07 18:42:12 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/ticker/24hr?symbol=MICHI-USDT&timestamp=1720366932667
2024-07-07 18:42:12 [INFO] - Accept=application/json
2024-07-07 18:42:12 [INFO] - Content-Type=application/json
2024-07-07 18:42:13 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=etc_usdt
2024-07-07 18:42:13 [INFO] - Accept=application/json
2024-07-07 18:42:13 [INFO] - Content-Type=application/json
2024-07-07 18:42:14 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=block_usdt
2024-07-07 18:42:14 [INFO] - Accept=application/json
2024-07-07 18:42:14 [INFO] - Content-Type=application/json
2024-07-07 18:42:14 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=btc_usdt
2024-07-07 18:42:14 [INFO] - Accept=application/json
2024-07-07 18:42:14 [INFO] - Content-Type=application/json
2024-07-07 18:42:14 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=pit_usdt
2024-07-07 18:42:14 [INFO] - Accept=application/json
2024-07-07 18:42:14 [INFO] - Content-Type=application/json
2024-07-07 18:42:14 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=michi_usdt
2024-07-07 18:42:14 [INFO] - Accept=application/json
2024-07-07 18:42:14 [INFO] - Content-Type=application/json
2024-07-07 18:42:15 [INFO] - Request: GET https://www.lbkex.net/v2/ticker/24hr.do?symbol=doga_usdt
2024-07-07 18:42:15 [INFO] - Accept=application/json
2024-07-07 18:42:15 [INFO] - Content-Type=application/json
2024-07-07 18:42:16 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=BLOCK-USDT
2024-07-07 18:42:16 [INFO] - Accept=application/json
2024-07-07 18:42:16 [INFO] - Content-Type=application/json
2024-07-07 18:42:17 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=ENJ-USDT
2024-07-07 18:42:17 [INFO] - Accept=application/json
2024-07-07 18:42:17 [INFO] - Content-Type=application/json
2024-07-07 18:42:17 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=ETC-USDT
2024-07-07 18:42:17 [INFO] - Accept=application/json
2024-07-07 18:42:17 [INFO] - Content-Type=application/json
2024-07-07 18:42:18 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=WLTH-USDT
2024-07-07 18:42:18 [INFO] - Accept=application/json
2024-07-07 18:42:18 [INFO] - Content-Type=application/json
2024-07-07 18:42:18 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=PIT-USDT
2024-07-07 18:42:18 [INFO] - Accept=application/json
2024-07-07 18:42:18 [INFO] - Content-Type=application/json
2024-07-07 18:42:19 [INFO] - Request: GET https://api.kucoin.com/api/v1/market/stats?symbol=BTC-USDT
2024-07-07 18:42:19 [INFO] - Accept=application/json
2024-07-07 18:42:19 [INFO] - Content-Type=application/json
2024-07-07 18:42:19 [INFO] - Request: GET https://api.huobi.pro/market/detail/merged?symbol=etcusdt
2024-07-07 18:42:19 [INFO] - Accept=application/json
2024-07-07 18:42:19 [INFO] - Content-Type=application/json
2024-07-07 18:42:20 [INFO] - Request: GET https://api.huobi.pro/market/detail/merged?symbol=btcusdt
2024-07-07 18:42:20 [INFO] - Accept=application/json
2024-07-07 18:42:20 [INFO] - Content-Type=application/json
2024-07-07 18:42:20 [INFO] - Request: GET https://api.huobi.pro/market/detail/merged?symbol=enjusdt
2024-07-07 18:42:20 [INFO] - Accept=application/json
2024-07-07 18:42:20 [INFO] - Content-Type=application/json
2024-07-07 18:42:20 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=ENJ-USDT
2024-07-07 18:42:20 [INFO] - Accept=application/json
2024-07-07 18:42:20 [INFO] - Content-Type=application/json
2024-07-07 18:42:21 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=BTC-USDT
2024-07-07 18:42:21 [INFO] - Accept=application/json
2024-07-07 18:42:21 [INFO] - Content-Type=application/json
2024-07-07 18:42:21 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=ETC-USDT
2024-07-07 18:42:21 [INFO] - Accept=application/json
2024-07-07 18:42:21 [INFO] - Content-Type=application/json
2024-07-07 18:42:21 [INFO] - Request: GET https://www.okx.com/api/v5/market/ticker?instId=BLOCK-USDT
2024-07-07 18:42:21 [INFO] - Accept=application/json
2024-07-07 18:42:21 [INFO] - Content-Type=application/json
2024-07-07 18:42:22 [INFO] - Request: GET https://api.coinex.com/v2/spot/ticker?market=MICHIUSDT,BLOCKUSDT,BTCUSDT,NEOXUSDT,BENDOGUSDT,ENJUSDT,ETCUSDT,PITUSDT
2024-07-07 18:42:22 [INFO] - Accept=application/json
2024-07-07 18:42:22 [INFO] - Content-Type=application/json
2024-07-07 18:42:22 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=ENJUSDT
2024-07-07 18:42:22 [INFO] - Accept=application/json
2024-07-07 18:42:22 [INFO] - Content-Type=application/json
2024-07-07 18:42:23 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=ETCUSDT
2024-07-07 18:42:23 [INFO] - Accept=application/json
2024-07-07 18:42:23 [INFO] - Content-Type=application/json
2024-07-07 18:42:23 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=CRETAUSDT
2024-07-07 18:42:23 [INFO] - Accept=application/json
2024-07-07 18:42:23 [INFO] - Content-Type=application/json
2024-07-07 18:42:24 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=BTCUSDT
2024-07-07 18:42:24 [INFO] - Accept=application/json
2024-07-07 18:42:24 [INFO] - Content-Type=application/json
2024-07-07 18:42:24 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/market/tickers?symbol=BENDOGUSDT
2024-07-07 18:42:24 [INFO] - Accept=application/json
2024-07-07 18:42:24 [INFO] - Content-Type=application/json
2024-07-07 18:42:24 [INFO] - Request: GET https://api.poloniex.com/markets/ETC_USDT/ticker24h
2024-07-07 18:42:24 [INFO] - Accept=application/json
2024-07-07 18:42:24 [INFO] - Content-Type=application/json
2024-07-07 18:42:25 [INFO] - Request: GET https://api.poloniex.com/markets/ENJ_USDT/ticker24h
2024-07-07 18:42:25 [INFO] - Accept=application/json
2024-07-07 18:42:25 [INFO] - Content-Type=application/json
2024-07-07 18:42:25 [INFO] - Request: GET https://api.poloniex.com/markets/BENDOG_USDT/ticker24h
2024-07-07 18:42:25 [INFO] - Accept=application/json
2024-07-07 18:42:25 [INFO] - Content-Type=application/json
2024-07-07 18:42:26 [INFO] - Request: GET https://api.poloniex.com/markets/MICHI_USDT/ticker24h
2024-07-07 18:42:26 [INFO] - Accept=application/json
2024-07-07 18:42:26 [INFO] - Content-Type=application/json
2024-07-07 18:42:26 [INFO] - Request: GET https://api.poloniex.com/markets/BTC_USDT/ticker24h
2024-07-07 18:42:26 [INFO] - Accept=application/json
2024-07-07 18:42:26 [INFO] - Content-Type=application/json
2024-07-07 18:42:26 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=ETC_USDT
2024-07-07 18:42:26 [INFO] - Accept=application/json
2024-07-07 18:42:26 [INFO] - Content-Type=application/json
2024-07-07 18:42:27 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=BTC_USDT
2024-07-07 18:42:27 [INFO] - Accept=application/json
2024-07-07 18:42:27 [INFO] - Content-Type=application/json
2024-07-07 18:42:27 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=BLOCK_USDT
2024-07-07 18:42:27 [INFO] - Accept=application/json
2024-07-07 18:42:27 [INFO] - Content-Type=application/json
2024-07-07 18:42:28 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/ticker?market_ids=BTC-USDT,ENJ-USDT,DOGA-USDT,ETC-USDT
2024-07-07 18:42:28 [INFO] - Accept=application/json
2024-07-07 18:42:28 [INFO] - Content-Type=application/json
2024-07-07 18:42:29 [INFO] - Обновление суточного торгового объёма успешно завершено. Время выполнения 31s
2024-07-07 18:42:29 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 18:42:29 [INFO] - Request: GET https://api.mexc.com/api/v3/capital/config/getall?signature=568e734dbacd539fa34f19e31102a2cb736eb3a26437d373c4951ea705e423b5&recvWindow=5000&timestamp=1720366949835
2024-07-07 18:42:29 [INFO] - Accept=application/json
2024-07-07 18:42:29 [INFO] - Content-Type=application/json
2024-07-07 18:42:29 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:42:30 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=ETC
2024-07-07 18:42:30 [INFO] - Accept=application/json
2024-07-07 18:42:30 [INFO] - Content-Type=application/json
2024-07-07 18:42:30 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=BTC
2024-07-07 18:42:30 [INFO] - Accept=application/json
2024-07-07 18:42:30 [INFO] - Content-Type=application/json
2024-07-07 18:42:31 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=CRETA
2024-07-07 18:42:31 [INFO] - Accept=application/json
2024-07-07 18:42:31 [INFO] - Content-Type=application/json
2024-07-07 18:42:31 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=BENDOG
2024-07-07 18:42:31 [INFO] - Accept=application/json
2024-07-07 18:42:31 [INFO] - Content-Type=application/json
2024-07-07 18:42:32 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/coins?coin=ENJ
2024-07-07 18:42:32 [INFO] - Accept=application/json
2024-07-07 18:42:32 [INFO] - Content-Type=application/json
2024-07-07 18:42:32 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/currency
2024-07-07 18:42:32 [INFO] - Accept=application/json
2024-07-07 18:42:32 [INFO] - Content-Type=application/json
2024-07-07 18:42:33 [INFO] - Request: GET https://www.okx.com/api/v5/asset/currencies?ccy=BTC,ENJ,ETC,BLOCK
2024-07-07 18:42:33 [INFO] - Accept=application/json
2024-07-07 18:42:33 [INFO] - Content-Type=application/json
2024-07-07 18:42:33 [INFO] - OK-ACCESS-KEY=4f817d5b-5ced-4b00-b5e3-d9c3bf7a0e70
2024-07-07 18:42:33 [INFO] - OK-ACCESS-SIGN=HVjk7B98T5oxhak8jNknaJjN1tYOqiwp1rI9GIv8a5w=
2024-07-07 18:42:33 [INFO] - OK-ACCESS-TIMESTAMP=2024-07-07T15:42:33.921Z
2024-07-07 18:42:33 [INFO] - OK-ACCESS-PASSPHRASE=Passphrase1#
2024-07-07 18:42:34 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ETC&timestamp=1720366954229
2024-07-07 18:42:34 [INFO] - Accept=application/json
2024-07-07 18:42:34 [INFO] - Content-Type=application/json
2024-07-07 18:42:34 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:42:34 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:42:34 [INFO] - signature=b6c594dfebda00cd1addcd0a7a93f6aee05bb84499cb3163282a51de66dcdfbd
2024-07-07 18:42:35 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=ENJ&timestamp=1720366955013
2024-07-07 18:42:35 [INFO] - Accept=application/json
2024-07-07 18:42:35 [INFO] - Content-Type=application/json
2024-07-07 18:42:35 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:42:35 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:42:35 [INFO] - signature=8ab69f099f5b5b6805b179630587616b3601609bfe7eb23f558ab92eda6ebd73
2024-07-07 18:42:35 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BENDOG&timestamp=1720366955772
2024-07-07 18:42:35 [INFO] - Accept=application/json
2024-07-07 18:42:35 [INFO] - Content-Type=application/json
2024-07-07 18:42:35 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:42:35 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:42:35 [INFO] - signature=b4d87bcbd4d3fa2e18a288bde7a4aa59788236650d0b04d47a8f1310d3a58c25
2024-07-07 18:42:36 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=BTC&timestamp=1720366956547
2024-07-07 18:42:36 [INFO] - Accept=application/json
2024-07-07 18:42:36 [INFO] - Content-Type=application/json
2024-07-07 18:42:36 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:42:36 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:42:36 [INFO] - signature=e170a0e79023735af6c8d521b61548ba0c6d65adebfe88a13052674e45f239f3
2024-07-07 18:42:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/wallets/v1/capital/config/getall?coin=MICHI&timestamp=1720366957325
2024-07-07 18:42:37 [INFO] - Accept=application/json
2024-07-07 18:42:37 [INFO] - Content-Type=application/json
2024-07-07 18:42:37 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:42:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:42:37 [INFO] - signature=8c1533f1818fa1e6f7cff504599b209d0c1a24a47b24d2cd682171dd0f4c577f
2024-07-07 18:42:38 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=doga
2024-07-07 18:42:38 [INFO] - Accept=application/json
2024-07-07 18:42:38 [INFO] - Content-Type=application/json
2024-07-07 18:42:38 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=etc
2024-07-07 18:42:38 [INFO] - Accept=application/json
2024-07-07 18:42:38 [INFO] - Content-Type=application/json
2024-07-07 18:42:39 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=michi
2024-07-07 18:42:39 [INFO] - Accept=application/json
2024-07-07 18:42:39 [INFO] - Content-Type=application/json
2024-07-07 18:42:39 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=pit
2024-07-07 18:42:39 [INFO] - Accept=application/json
2024-07-07 18:42:39 [INFO] - Content-Type=application/json
2024-07-07 18:42:39 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=btc
2024-07-07 18:42:39 [INFO] - Accept=application/json
2024-07-07 18:42:39 [INFO] - Content-Type=application/json
2024-07-07 18:42:40 [INFO] - Request: GET https://www.lbkex.net/v2/withdrawConfigs.do?assetCode=block
2024-07-07 18:42:40 [INFO] - Accept=application/json
2024-07-07 18:42:40 [INFO] - Content-Type=application/json
2024-07-07 18:42:40 [INFO] - Request: GET https://api.coinex.com/v2/assets/all-deposit-withdraw-config
2024-07-07 18:42:40 [INFO] - Accept=application/json
2024-07-07 18:42:40 [INFO] - Content-Type=application/json
2024-07-07 18:42:40 [INFO] - X-COINEX-KEY=7323B954D3EF4A61A86B1F1B843538D4
2024-07-07 18:42:40 [INFO] - X-COINEX-SIGN=69efc9b66295c39fa0add9e28bfa486d8af1ac8bf4202804079cf38d72003552
2024-07-07 18:42:40 [INFO] - X-COINEX-TIMESTAMP=1720366960456
2024-07-07 18:42:41 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=ETC
2024-07-07 18:42:41 [INFO] - Accept=application/json
2024-07-07 18:42:41 [INFO] - Content-Type=application/json
2024-07-07 18:42:41 [INFO] - X-BAPI-SIGN=71cc55c178217604b427decbafc6901238e02b2090c3cbaca4ba18f430fc5254
2024-07-07 18:42:41 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:42:41 [INFO] - X-BAPI-TIMESTAMP=1720366961355
2024-07-07 18:42:41 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:42:42 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=ENJ
2024-07-07 18:42:42 [INFO] - Accept=application/json
2024-07-07 18:42:42 [INFO] - Content-Type=application/json
2024-07-07 18:42:42 [INFO] - X-BAPI-SIGN=ecb455eb1452521e8124841f291306c358034285384cb0cda8ea30d85b295506
2024-07-07 18:42:42 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:42:42 [INFO] - X-BAPI-TIMESTAMP=1720366962162
2024-07-07 18:42:42 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:42:42 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=BTC
2024-07-07 18:42:42 [INFO] - Accept=application/json
2024-07-07 18:42:42 [INFO] - Content-Type=application/json
2024-07-07 18:42:42 [INFO] - X-BAPI-SIGN=44188c0f7010181476eb6c63b6a179e477a96bdb139b88c2bf919a972b3bd76b
2024-07-07 18:42:42 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:42:42 [INFO] - X-BAPI-TIMESTAMP=1720366962951
2024-07-07 18:42:42 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:42:43 [INFO] - Request: GET https://api.bybit.com/v5/asset/coin/query-info?coin=BLOCK
2024-07-07 18:42:43 [INFO] - Accept=application/json
2024-07-07 18:42:43 [INFO] - Content-Type=application/json
2024-07-07 18:42:43 [INFO] - X-BAPI-SIGN=53bd23102c237a807c3964f9b73b8b91ab5957a9e31de8ff7ef9e47bd1630a40
2024-07-07 18:42:43 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:42:43 [INFO] - X-BAPI-TIMESTAMP=1720366963744
2024-07-07 18:42:43 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:42:44 [INFO] - Request: GET https://api-cloud.bitmart.com/account/v1/currencies
2024-07-07 18:42:44 [INFO] - Accept=application/json
2024-07-07 18:42:44 [INFO] - Content-Type=application/json
2024-07-07 18:42:44 [INFO] - X-BM-TIMESTAMP=1720366964187
2024-07-07 18:42:44 [INFO] - X-BM-KEY=19396aef3a650f3995c5caad42935bcc681a0cff
2024-07-07 18:42:44 [INFO] - X-BM-SIGN=cafaaa71fc8585c9593e57671b940928e7d16809af02c2e0231d3eb15a6eaa4c
2024-07-07 18:42:45 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=WLTH
2024-07-07 18:42:45 [INFO] - Accept=application/json
2024-07-07 18:42:45 [INFO] - Content-Type=application/json
2024-07-07 18:42:45 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:45 [INFO] - SIGN=56c049e2886c336162e46d0636353d5af6c90a48f1b4df10ddba3d45e2e6bb4406ff838f10fd669f214d1a3490c97d1ea4d66561675d082a4dee41076020da31
2024-07-07 18:42:45 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=ENJ
2024-07-07 18:42:45 [INFO] - Accept=application/json
2024-07-07 18:42:45 [INFO] - Content-Type=application/json
2024-07-07 18:42:45 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:45 [INFO] - SIGN=ce7015c3ad7b7e53dc3b85c84e64ead592fce6f55b5c1a70a7176b97d5ed48c67c6c0b4551dd2b4c736a1be7db0c2f8923d37d71b5afb8392bf99c855422ce5b
2024-07-07 18:42:45 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=BLOCK
2024-07-07 18:42:45 [INFO] - Accept=application/json
2024-07-07 18:42:45 [INFO] - Content-Type=application/json
2024-07-07 18:42:45 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:45 [INFO] - SIGN=715479347f3f94acd37163f213a61785b652b5b7e474a225b00c4995d600d704325c22e674b2e7e768fb06115d9eb551472054d4cc0a647ec125f4eef6f2e159
2024-07-07 18:42:46 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=PIT
2024-07-07 18:42:46 [INFO] - Accept=application/json
2024-07-07 18:42:46 [INFO] - Content-Type=application/json
2024-07-07 18:42:46 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:46 [INFO] - SIGN=ce9133d48d64c31ffb50a7ffe72bea39e4df40b1d7db74c3d2a7a38b894f1fbaae1050e607edbfa11ba4473985fe49dbf6010a788f5b7c11f56f7f1d5b6805f2
2024-07-07 18:42:46 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=BENDOG
2024-07-07 18:42:46 [INFO] - Accept=application/json
2024-07-07 18:42:46 [INFO] - Content-Type=application/json
2024-07-07 18:42:46 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:46 [INFO] - SIGN=e4e6d5defa69c5bc8944df86439f007fcdfd16d4c5120f2956cc8d273dd1fa5c36927867705f66f5ae1a91bf231a2439dda8ff82983a73d5f9dd97dc76a3348b
2024-07-07 18:42:47 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=DOGA
2024-07-07 18:42:47 [INFO] - Accept=application/json
2024-07-07 18:42:47 [INFO] - Content-Type=application/json
2024-07-07 18:42:47 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:47 [INFO] - SIGN=7aaaf024ae8db0daac5f5292d39079d2aba11ddd9d097240cb9622541e53ee29c371d458f311944e242810a0b458d3c3d08b579a9afa8786ed642df499a2c745
2024-07-07 18:42:47 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=KZEN
2024-07-07 18:42:47 [INFO] - Accept=application/json
2024-07-07 18:42:47 [INFO] - Content-Type=application/json
2024-07-07 18:42:47 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:47 [INFO] - SIGN=0e0b2a8712d342311556599f06c3dd57817d86b4809ad1f22527e4cfa31bbc825f95d3501f875158f5b2fb2f4e601452fa40375c4a64444456de50e626ab1e7a
2024-07-07 18:42:47 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=ETC
2024-07-07 18:42:47 [INFO] - Accept=application/json
2024-07-07 18:42:47 [INFO] - Content-Type=application/json
2024-07-07 18:42:47 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:47 [INFO] - SIGN=125b2553f2274fb98db496dc9c52ef4549632bc2c569a01c18011c015955429e9e4c9356d17cf5a3113d3853f677ea52dd87d323353719e04edf3118e25181a9
2024-07-07 18:42:48 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/currency_chains?currency=BTC
2024-07-07 18:42:48 [INFO] - Accept=application/json
2024-07-07 18:42:48 [INFO] - Content-Type=application/json
2024-07-07 18:42:48 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:42:48 [INFO] - SIGN=c427dddec497b11650e3ac4b6eaddb92d90e91e500ebcb8a412d59fe32f20056da88944944132b6aea28d98c576d08ceb54d1ff0522ce2d81a51947797271129
2024-07-07 18:42:48 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/ENJ
2024-07-07 18:42:48 [INFO] - Accept=application/json
2024-07-07 18:42:48 [INFO] - Content-Type=application/json
2024-07-07 18:42:49 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/ETC
2024-07-07 18:42:49 [INFO] - Accept=application/json
2024-07-07 18:42:49 [INFO] - Content-Type=application/json
2024-07-07 18:42:50 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/BLOCK
2024-07-07 18:42:50 [INFO] - Accept=application/json
2024-07-07 18:42:50 [INFO] - Content-Type=application/json
2024-07-07 18:42:50 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/PIT
2024-07-07 18:42:50 [INFO] - Accept=application/json
2024-07-07 18:42:50 [INFO] - Content-Type=application/json
2024-07-07 18:42:50 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/WLTH
2024-07-07 18:42:50 [INFO] - Accept=application/json
2024-07-07 18:42:50 [INFO] - Content-Type=application/json
2024-07-07 18:42:50 [INFO] - Request: GET https://api.kucoin.com/api/v3/currencies/BTC
2024-07-07 18:42:50 [INFO] - Accept=application/json
2024-07-07 18:42:50 [INFO] - Content-Type=application/json
2024-07-07 18:42:51 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnCurrencies
2024-07-07 18:42:51 [INFO] - Accept=application/json
2024-07-07 18:42:51 [INFO] - Content-Type=application/json
2024-07-07 18:42:53 [INFO] - Request: GET https://sapi.xt.com/v4/public/wallet/support/currency
2024-07-07 18:42:53 [INFO] - Accept=application/json
2024-07-07 18:42:53 [INFO] - Content-Type=application/json
2024-07-07 18:42:53 [INFO] - validate-algorithms=HmacSHA256
2024-07-07 18:42:53 [INFO] - validate-appkey=21f4f1a6-7d48-4a08-b712-6993d4262bc5
2024-07-07 18:42:53 [INFO] - validate-recvwindow=5000
2024-07-07 18:42:53 [INFO] - validate-signature=58a5010b05d717a3f7328af8885c0335ab01c4e895c6816118fd6d138302c490
2024-07-07 18:42:53 [INFO] - validate-timestamp=1720366973428
2024-07-07 18:42:53 [INFO] - Request: GET https://api.huobi.pro/v2/reference/currencies?currency=btc
2024-07-07 18:42:53 [INFO] - Accept=application/json
2024-07-07 18:42:53 [INFO] - Content-Type=application/json
2024-07-07 18:42:54 [INFO] - Request: GET https://api.huobi.pro/v2/reference/currencies?currency=etc
2024-07-07 18:42:54 [INFO] - Accept=application/json
2024-07-07 18:42:54 [INFO] - Content-Type=application/json
2024-07-07 18:42:54 [INFO] - Request: GET https://api.huobi.pro/v2/reference/currencies?currency=enj
2024-07-07 18:42:54 [INFO] - Accept=application/json
2024-07-07 18:42:54 [INFO] - Content-Type=application/json
2024-07-07 18:42:54 [INFO] - Request: GET https://api.poloniex.com/currencies/ETC
2024-07-07 18:42:54 [INFO] - Accept=application/json
2024-07-07 18:42:54 [INFO] - Content-Type=application/json
2024-07-07 18:42:55 [INFO] - Request: GET https://api.poloniex.com/currencies/MICHI
2024-07-07 18:42:55 [INFO] - Accept=application/json
2024-07-07 18:42:55 [INFO] - Content-Type=application/json
2024-07-07 18:42:55 [INFO] - Request: GET https://api.poloniex.com/currencies/ENJ
2024-07-07 18:42:55 [INFO] - Accept=application/json
2024-07-07 18:42:55 [INFO] - Content-Type=application/json
2024-07-07 18:42:55 [INFO] - Request: GET https://api.poloniex.com/currencies/BTC
2024-07-07 18:42:55 [INFO] - Accept=application/json
2024-07-07 18:42:55 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.poloniex.com/currencies/BENDOG
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Обновление списка сетей успешно завершено. Время выполнения 27s
2024-07-07 18:42:56 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 18:42:56 [INFO] - Request: GET https://api.gateio.ws/api/v4/spot/currency_pairs
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.poloniex.com/markets
2024-07-07 18:42:56 [INFO] - Request: GET https://api.mexc.com/api/v3/exchangeInfo
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://www.lbkex.net/v2/accuracy.do
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.kucoin.com/api/v2/symbols
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.bybit.com/spot/v3/public/symbols
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/symbols/details
2024-07-07 18:42:56 [INFO] - Request: GET https://www.okx.com/api/v5/public/instruments?instType=SPOT
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.huobi.pro/v2/settings/common/symbols
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://www.coinw.com/api/v1/public?command=returnSymbol
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.coinex.com/v2/spot/market
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://sapi.xt.com/v4/public/symbol
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:42:56 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/common/symbols
2024-07-07 18:42:56 [INFO] - Accept=application/json
2024-07-07 18:42:56 [INFO] - Content-Type=application/json
2024-07-07 18:43:29 [INFO] - Обновление списка валют успешно завершено. Время выполения: 32s
2024-07-07 18:43:29 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 18:43:32 [INFO] - Request: GET https://www.okx.com/api/v5/account/trade-fee?instType=SPOT&instId=BLOCK-USDT
2024-07-07 18:43:32 [INFO] - Accept=application/json
2024-07-07 18:43:32 [INFO] - Content-Type=application/json
2024-07-07 18:43:32 [INFO] - OK-ACCESS-KEY=4f817d5b-5ced-4b00-b5e3-d9c3bf7a0e70
2024-07-07 18:43:32 [INFO] - OK-ACCESS-SIGN=H5ehSOwmLUQcwjp0SapC66hoipvlM1smHaXo1uYEeIU=
2024-07-07 18:43:32 [INFO] - OK-ACCESS-TIMESTAMP=2024-07-07T15:43:32.160Z
2024-07-07 18:43:32 [INFO] - OK-ACCESS-PASSPHRASE=Passphrase1#
2024-07-07 18:43:32 [INFO] - Request: GET https://www.okx.com/api/v5/account/trade-fee?instType=SPOT&instId=ETC-USDT
2024-07-07 18:43:32 [INFO] - Accept=application/json
2024-07-07 18:43:32 [INFO] - Content-Type=application/json
2024-07-07 18:43:32 [INFO] - OK-ACCESS-KEY=4f817d5b-5ced-4b00-b5e3-d9c3bf7a0e70
2024-07-07 18:43:32 [INFO] - OK-ACCESS-SIGN=AQr6G+ekSrE1YhVJpt0yqvPJbcNAT4IT0Yeq9fOyteo=
2024-07-07 18:43:32 [INFO] - OK-ACCESS-TIMESTAMP=2024-07-07T15:43:32.547Z
2024-07-07 18:43:32 [INFO] - OK-ACCESS-PASSPHRASE=Passphrase1#
2024-07-07 18:43:32 [INFO] - Request: GET https://www.okx.com/api/v5/account/trade-fee?instType=SPOT&instId=BTC-USDT
2024-07-07 18:43:32 [INFO] - Accept=application/json
2024-07-07 18:43:32 [INFO] - Content-Type=application/json
2024-07-07 18:43:32 [INFO] - OK-ACCESS-KEY=4f817d5b-5ced-4b00-b5e3-d9c3bf7a0e70
2024-07-07 18:43:32 [INFO] - OK-ACCESS-SIGN=ES2vb6MAZCA4RD8h1zs5jPBnUwbQkJXVWeLdoOmHby8=
2024-07-07 18:43:32 [INFO] - OK-ACCESS-TIMESTAMP=2024-07-07T15:43:32.927Z
2024-07-07 18:43:32 [INFO] - OK-ACCESS-PASSPHRASE=Passphrase1#
2024-07-07 18:43:33 [INFO] - Request: GET https://www.okx.com/api/v5/account/trade-fee?instType=SPOT&instId=ENJ-USDT
2024-07-07 18:43:33 [INFO] - Accept=application/json
2024-07-07 18:43:33 [INFO] - Content-Type=application/json
2024-07-07 18:43:33 [INFO] - OK-ACCESS-KEY=4f817d5b-5ced-4b00-b5e3-d9c3bf7a0e70
2024-07-07 18:43:33 [INFO] - OK-ACCESS-SIGN=J3Uby3i9GK4+xPZ9XOanahOy26gu5lOgbJFdiym1oAQ=
2024-07-07 18:43:33 [INFO] - OK-ACCESS-TIMESTAMP=2024-07-07T15:43:33.291Z
2024-07-07 18:43:33 [INFO] - OK-ACCESS-PASSPHRASE=Passphrase1#
2024-07-07 18:43:33 [INFO] - Request: GET https://www.coinw.com/appApi.html?action=currencys
2024-07-07 18:43:33 [INFO] - Accept=application/json
2024-07-07 18:43:33 [INFO] - Content-Type=application/json
2024-07-07 18:43:34 [INFO] - Request: GET https://api.bybit.com/v5/account/fee-rate?category=spot&symbol=BLOCKUSDT
2024-07-07 18:43:34 [INFO] - Accept=application/json
2024-07-07 18:43:34 [INFO] - Content-Type=application/json
2024-07-07 18:43:34 [INFO] - X-BAPI-SIGN=7674a870b025bc3d8a97f3423ca3cde45b6c21d7b033cdb2438b6337fa4caec1
2024-07-07 18:43:34 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:43:34 [INFO] - X-BAPI-TIMESTAMP=1720367014159
2024-07-07 18:43:34 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:43:34 [INFO] - Request: GET https://api.bybit.com/v5/account/fee-rate?category=spot&symbol=ETCUSDT
2024-07-07 18:43:34 [INFO] - Accept=application/json
2024-07-07 18:43:34 [INFO] - Content-Type=application/json
2024-07-07 18:43:34 [INFO] - X-BAPI-SIGN=d4129a5722e43ffc87e3e8738e59be6ffce0a9a260d608913ebca78f1a77d88b
2024-07-07 18:43:34 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:43:34 [INFO] - X-BAPI-TIMESTAMP=1720367014935
2024-07-07 18:43:34 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:43:35 [INFO] - Request: GET https://api.bybit.com/v5/account/fee-rate?category=spot&symbol=ENJUSDT
2024-07-07 18:43:35 [INFO] - Accept=application/json
2024-07-07 18:43:35 [INFO] - Content-Type=application/json
2024-07-07 18:43:35 [INFO] - X-BAPI-SIGN=ee5d64a3e1bc6a355ebc4268e3c946d75d94907047a7ff497afe42760e5f8034
2024-07-07 18:43:35 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:43:35 [INFO] - X-BAPI-TIMESTAMP=1720367015706
2024-07-07 18:43:35 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:43:36 [INFO] - Request: GET https://api.bybit.com/v5/account/fee-rate?category=spot&symbol=BTCUSDT
2024-07-07 18:43:36 [INFO] - Accept=application/json
2024-07-07 18:43:36 [INFO] - Content-Type=application/json
2024-07-07 18:43:36 [INFO] - X-BAPI-SIGN=69d8d80fa44008491ffe8af6c87dce5e5cb15578d57dc8a86eb478cc1e9215b9
2024-07-07 18:43:36 [INFO] - X-BAPI-API-KEY=jF9vCKenFLZVvoUnIM
2024-07-07 18:43:36 [INFO] - X-BAPI-TIMESTAMP=1720367016119
2024-07-07 18:43:36 [INFO] - X-BAPI-RECV-WINDOW=5000
2024-07-07 18:43:36 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=MICHI-USDT&timestamp=1720367016525
2024-07-07 18:43:36 [INFO] - Accept=application/json
2024-07-07 18:43:36 [INFO] - Content-Type=application/json
2024-07-07 18:43:36 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:43:36 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:43:36 [INFO] - signature=9af962120c62133b33af6f8b0a7302f1b1865faeb8d8eaee3fda34222ed4e7b9
2024-07-07 18:43:37 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=BTC-USDT&timestamp=1720367017304
2024-07-07 18:43:37 [INFO] - Accept=application/json
2024-07-07 18:43:37 [INFO] - Content-Type=application/json
2024-07-07 18:43:37 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:43:37 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:43:37 [INFO] - signature=5aef3f64db37ef5184c0b3965ee166cebaba8b7d282e25f01d1036b9294d2f52
2024-07-07 18:43:38 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=BENDOG-USDT&timestamp=1720367018062
2024-07-07 18:43:38 [INFO] - Accept=application/json
2024-07-07 18:43:38 [INFO] - Content-Type=application/json
2024-07-07 18:43:38 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:43:38 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:43:38 [INFO] - signature=c6a6b6a86634081f6fb9648d0989f646e6fe40fea222effb02dee7ab7579dcb7
2024-07-07 18:43:38 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ENJ-USDT&timestamp=1720367018801
2024-07-07 18:43:38 [INFO] - Accept=application/json
2024-07-07 18:43:38 [INFO] - Content-Type=application/json
2024-07-07 18:43:38 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:43:38 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:43:38 [INFO] - signature=210aa94058a6e209564e7bffcf3589e98cde5b07d7b5aaef2dd27bb0803aedb5
2024-07-07 18:43:39 [INFO] - Request: GET https://open-api.bingx.com/openApi/spot/v1/user/commissionRate?symbol=ETC-USDT&timestamp=1720367019620
2024-07-07 18:43:39 [INFO] - Accept=application/json
2024-07-07 18:43:39 [INFO] - Content-Type=application/json
2024-07-07 18:43:39 [INFO] - X-BX-APIKEY=oDp2jGhexStzRCZ3pYiFZ2WCjb0UtITZCoVf03TPXWufuMYNWC3PILjJUU5nCq1nIQUykg7Sf0DWUnUhlF7lg
2024-07-07 18:43:39 [INFO] - User-Agent=Mozilla/5.0
2024-07-07 18:43:39 [INFO] - signature=d41dffa090b85e80d1eafcb3a43a4278befb5fdba46ebb3c8419d6e872907ad5
2024-07-07 18:43:40 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=ETCUSDT&signature=fb55b94d04ab5fa74664a36a188b01813bcd59b485711c55b3677142f8508896&recvWindow=5000&timestamp=1720367020362
2024-07-07 18:43:40 [INFO] - Accept=application/json
2024-07-07 18:43:40 [INFO] - Content-Type=application/json
2024-07-07 18:43:40 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:40 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=CRETAUSDT&signature=e9a06ad1d97f5b24ad03483b96a1febea93536c36a842ffa30c64d3a9616b195&recvWindow=5000&timestamp=1720367020647
2024-07-07 18:43:40 [INFO] - Accept=application/json
2024-07-07 18:43:40 [INFO] - Content-Type=application/json
2024-07-07 18:43:40 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:40 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=DOGAUSDT&signature=1a6e8adec4fd454f06f289a6ea0def9b9750fea8b26141157e063837b962d37a&recvWindow=5000&timestamp=1720367020931
2024-07-07 18:43:40 [INFO] - Accept=application/json
2024-07-07 18:43:40 [INFO] - Content-Type=application/json
2024-07-07 18:43:40 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:41 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=BLOCKUSDT&signature=abc965338709f405c003341b10731eb6b2f10a47515f774183b45b85c8bb0969&recvWindow=5000&timestamp=1720367021212
2024-07-07 18:43:41 [INFO] - Accept=application/json
2024-07-07 18:43:41 [INFO] - Content-Type=application/json
2024-07-07 18:43:41 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:41 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=KZENUSDT&signature=2b9bc25b291b0e5e2a4d6f6448121c79137d9f169e6db9beaa03c3e8a63232e9&recvWindow=5000&timestamp=1720367021483
2024-07-07 18:43:41 [INFO] - Accept=application/json
2024-07-07 18:43:41 [INFO] - Content-Type=application/json
2024-07-07 18:43:41 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:41 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=ENJUSDT&signature=493db9c7e09ed8957b8e20034327a827f893339e600c394315a60ff30a78f3e2&recvWindow=5000&timestamp=1720367021755
2024-07-07 18:43:41 [INFO] - Accept=application/json
2024-07-07 18:43:41 [INFO] - Content-Type=application/json
2024-07-07 18:43:41 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:42 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=WLTHUSDT&signature=525aff3f720f83494b7491b1e75a952fc5ac370a088c7736ef95be3525b7da1d&recvWindow=5000&timestamp=1720367022038
2024-07-07 18:43:42 [INFO] - Accept=application/json
2024-07-07 18:43:42 [INFO] - Content-Type=application/json
2024-07-07 18:43:42 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:42 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=BENDOGUSDT&signature=4d71b2be76b6acc949d72252cf112ce585ed9d2f94e1a81a91462b17f3b98b61&recvWindow=5000&timestamp=1720367022308
2024-07-07 18:43:42 [INFO] - Accept=application/json
2024-07-07 18:43:42 [INFO] - Content-Type=application/json
2024-07-07 18:43:42 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:42 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=NEOXUSDT&signature=a17e83355cd1ffed2bb97f1ade886ccd1898ef08a5a606984b29418cbc481062&recvWindow=5000&timestamp=1720367022591
2024-07-07 18:43:42 [INFO] - Accept=application/json
2024-07-07 18:43:42 [INFO] - Content-Type=application/json
2024-07-07 18:43:42 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:42 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=PITUSDT&signature=c62a8c980daed907581965511a7e044c88c58a64b4a0582acf0a163b45c97424&recvWindow=5000&timestamp=1720367022861
2024-07-07 18:43:42 [INFO] - Accept=application/json
2024-07-07 18:43:42 [INFO] - Content-Type=application/json
2024-07-07 18:43:42 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:43 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=MICHIUSDT&signature=775da6efd3473fb749e614f653dcb76e69a28436c7e75e5e9686ebb614e8b9d7&recvWindow=5000&timestamp=1720367023132
2024-07-07 18:43:43 [INFO] - Accept=application/json
2024-07-07 18:43:43 [INFO] - Content-Type=application/json
2024-07-07 18:43:43 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:43 [INFO] - Request: GET https://api.mexc.com/api/v3/tradeFee?symbol=BTCUSDT&signature=483b37852b93624b7716ff1b12240c6588fafddd51b742b835f98fb6746c8757&recvWindow=5000&timestamp=1720367023404
2024-07-07 18:43:43 [INFO] - Accept=application/json
2024-07-07 18:43:43 [INFO] - Content-Type=application/json
2024-07-07 18:43:43 [INFO] - X-MEXC-APIKEY=mx0vglPGU3h0E9HsH9
2024-07-07 18:43:43 [INFO] - Request: GET https://api.probit.com/api/exchange/v1/market
2024-07-07 18:43:43 [INFO] - Accept=application/json
2024-07-07 18:43:43 [INFO] - Content-Type=application/json
2024-07-07 18:43:43 [INFO] - Request: POST https://www.lbkex.net/v2/supplement/customer_trade_fee.do?api_key=0a1b7b74-eb2f-4cce-8900-b6980ea40df7&category=etc_usdt&echostr=muIk9JeEqRaHW5DOlmUPaGRIFV83JNoa&sign=86f4b0b958b42eb8e14756b3b842c16962f033da908428650e3752fe0291931f&signature_method=HmacSHA256&timestamp=1720367023773
2024-07-07 18:43:43 [INFO] - Accept=application/json
2024-07-07 18:43:43 [INFO] - Content-Type=application/x-www-form-urlencoded
2024-07-07 18:43:43 [INFO] - echostr=muIk9JeEqRaHW5DOlmUPaGRIFV83JNoa
2024-07-07 18:43:43 [INFO] - signature_method=HmacSHA256
2024-07-07 18:43:43 [INFO] - timestamp=1720367023773
2024-07-07 18:43:44 [INFO] - Request: POST https://www.lbkex.net/v2/supplement/customer_trade_fee.do?api_key=0a1b7b74-eb2f-4cce-8900-b6980ea40df7&category=block_usdt&echostr=HMS8Hc3zoZSVDBSdx9oq5Wve8CvWiSkN&sign=995c3d00815224a0db5a9a1dbc45a6f1bfd77b93db8290419a8597d4e8af018b&signature_method=HmacSHA256&timestamp=1720367024574
2024-07-07 18:43:44 [INFO] - Accept=application/json
2024-07-07 18:43:44 [INFO] - Content-Type=application/x-www-form-urlencoded
2024-07-07 18:43:44 [INFO] - echostr=HMS8Hc3zoZSVDBSdx9oq5Wve8CvWiSkN
2024-07-07 18:43:44 [INFO] - signature_method=HmacSHA256
2024-07-07 18:43:44 [INFO] - timestamp=1720367024574
2024-07-07 18:43:45 [INFO] - Request: POST https://www.lbkex.net/v2/supplement/customer_trade_fee.do?api_key=0a1b7b74-eb2f-4cce-8900-b6980ea40df7&category=btc_usdt&echostr=FTJlxpTUK86BLUEEoI33BJRZRyI8aez8&sign=bc0af0c9d1d99838c18d39567b6bcea7fdf8348c28bc9a3738b94eb375bf3c9b&signature_method=HmacSHA256&timestamp=1720367025110
2024-07-07 18:43:45 [INFO] - Accept=application/json
2024-07-07 18:43:45 [INFO] - Content-Type=application/x-www-form-urlencoded
2024-07-07 18:43:45 [INFO] - echostr=FTJlxpTUK86BLUEEoI33BJRZRyI8aez8
2024-07-07 18:43:45 [INFO] - signature_method=HmacSHA256
2024-07-07 18:43:45 [INFO] - timestamp=1720367025110
2024-07-07 18:43:45 [INFO] - Request: POST https://www.lbkex.net/v2/supplement/customer_trade_fee.do?api_key=0a1b7b74-eb2f-4cce-8900-b6980ea40df7&category=doga_usdt&echostr=dzHKhpFOQkUv96HU3NKsuPNYRbrvVZl6&sign=eef1f647f092391652e9d7b2c160ea991b928d8e8a287ee1d460ef7d8fd450e6&signature_method=HmacSHA256&timestamp=1720367025427
2024-07-07 18:43:45 [INFO] - Accept=application/json
2024-07-07 18:43:45 [INFO] - Content-Type=application/x-www-form-urlencoded
2024-07-07 18:43:45 [INFO] - echostr=dzHKhpFOQkUv96HU3NKsuPNYRbrvVZl6
2024-07-07 18:43:45 [INFO] - signature_method=HmacSHA256
2024-07-07 18:43:45 [INFO] - timestamp=1720367025427
2024-07-07 18:43:45 [INFO] - Request: POST https://www.lbkex.net/v2/supplement/customer_trade_fee.do?api_key=0a1b7b74-eb2f-4cce-8900-b6980ea40df7&category=pit_usdt&echostr=UTqCYKqU36FLuT8RFdowUJsluR7GCr2E&sign=5e5e82fe9cabac0e5aebfe7b62d4efcb21e25b278e3b1ca9d70c0da7b1d78a0a&signature_method=HmacSHA256&timestamp=1720367025752
2024-07-07 18:43:45 [INFO] - Accept=application/json
2024-07-07 18:43:45 [INFO] - Content-Type=application/x-www-form-urlencoded
2024-07-07 18:43:45 [INFO] - echostr=UTqCYKqU36FLuT8RFdowUJsluR7GCr2E
2024-07-07 18:43:45 [INFO] - signature_method=HmacSHA256
2024-07-07 18:43:45 [INFO] - timestamp=1720367025752
2024-07-07 18:43:46 [INFO] - Request: POST https://www.lbkex.net/v2/supplement/customer_trade_fee.do?api_key=0a1b7b74-eb2f-4cce-8900-b6980ea40df7&category=michi_usdt&echostr=X35ZkshUWaGPC8mEUdc0RW6GvYArVlwf&sign=3c712f67d82f11690a50567f331662731cd81c4f94a136fd3eb68ae63ab4af76&signature_method=HmacSHA256&timestamp=1720367026066
2024-07-07 18:43:46 [INFO] - Accept=application/json
2024-07-07 18:43:46 [INFO] - Content-Type=application/x-www-form-urlencoded
2024-07-07 18:43:46 [INFO] - echostr=X35ZkshUWaGPC8mEUdc0RW6GvYArVlwf
2024-07-07 18:43:46 [INFO] - signature_method=HmacSHA256
2024-07-07 18:43:46 [INFO] - timestamp=1720367026066
2024-07-07 18:43:46 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols?symbol=CRETAUSDT
2024-07-07 18:43:46 [INFO] - Accept=application/json
2024-07-07 18:43:46 [INFO] - Content-Type=application/json
2024-07-07 18:43:46 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols?symbol=BENDOGUSDT
2024-07-07 18:43:46 [INFO] - Accept=application/json
2024-07-07 18:43:46 [INFO] - Content-Type=application/json
2024-07-07 18:43:47 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols?symbol=ETCUSDT
2024-07-07 18:43:47 [INFO] - Accept=application/json
2024-07-07 18:43:47 [INFO] - Content-Type=application/json
2024-07-07 18:43:47 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols?symbol=BTCUSDT
2024-07-07 18:43:47 [INFO] - Accept=application/json
2024-07-07 18:43:47 [INFO] - Content-Type=application/json
2024-07-07 18:43:48 [INFO] - Request: GET https://api.bitget.com/api/v2/spot/public/symbols?symbol=ENJUSDT
2024-07-07 18:43:48 [INFO] - Accept=application/json
2024-07-07 18:43:48 [INFO] - Content-Type=application/json
2024-07-07 18:43:48 [INFO] - Request: GET https://api.kucoin.com/api/v1/trade-fees?symbols=PIT-USDT,ETC-USDT,BTC-USDT,BLOCK-USDT,WLTH-USDT,ENJ-USDT
2024-07-07 18:43:48 [INFO] - Accept=application/json
2024-07-07 18:43:48 [INFO] - Content-Type=application/json
2024-07-07 18:43:48 [INFO] - KC-API-KEY=6682ea71c3ea0f0001512c6c
2024-07-07 18:43:48 [INFO] - KC-API-SIGN=q1k230kbkb9uSYp0YLoXEHWO1VQy+UPzHb8giHf5Dq8=
2024-07-07 18:43:48 [INFO] - KC-API-TIMESTAMP=1720367028599
2024-07-07 18:43:48 [INFO] - KC-API-PASSPHRASE=WGSgUrDxyZv1s7d4TtBSeXQ+mJdA1ryME2W2sSplseg=
2024-07-07 18:43:48 [INFO] - KC-API-KEY-VERSION=3
2024-07-07 18:43:48 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/trade_fee?symbol=BLOCK_USDT
2024-07-07 18:43:48 [INFO] - Accept=application/json
2024-07-07 18:43:48 [INFO] - Content-Type=application/json
2024-07-07 18:43:48 [INFO] - X-BM-TIMESTAMP=1720367028991
2024-07-07 18:43:48 [INFO] - X-BM-KEY=19396aef3a650f3995c5caad42935bcc681a0cff
2024-07-07 18:43:48 [INFO] - X-BM-SIGN=82ac1b698051852723b3eaaa063454feb8d86b472faf50ac34b13e9f2d4555f5
2024-07-07 18:43:49 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/trade_fee?symbol=BTC_USDT
2024-07-07 18:43:49 [INFO] - Accept=application/json
2024-07-07 18:43:49 [INFO] - Content-Type=application/json
2024-07-07 18:43:49 [INFO] - X-BM-TIMESTAMP=1720367029355
2024-07-07 18:43:49 [INFO] - X-BM-KEY=19396aef3a650f3995c5caad42935bcc681a0cff
2024-07-07 18:43:49 [INFO] - X-BM-SIGN=6d12b59efe77cce97a7c38cc5ed8280701dff009e5d2d8848c866dc938e544c7
2024-07-07 18:43:49 [INFO] - Request: GET https://api-cloud.bitmart.com/spot/v1/trade_fee?symbol=ETC_USDT
2024-07-07 18:43:49 [INFO] - Accept=application/json
2024-07-07 18:43:49 [INFO] - Content-Type=application/json
2024-07-07 18:43:49 [INFO] - X-BM-TIMESTAMP=1720367029700
2024-07-07 18:43:49 [INFO] - X-BM-KEY=19396aef3a650f3995c5caad42935bcc681a0cff
2024-07-07 18:43:49 [INFO] - X-BM-SIGN=9c603d4308a4cce963c5d5f13614cae2f77054ec61935d9902a51ef69bf5a82d
2024-07-07 18:43:50 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=NEOXUSDT
2024-07-07 18:43:50 [INFO] - Accept=application/json
2024-07-07 18:43:50 [INFO] - Content-Type=application/json
2024-07-07 18:43:50 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=BENDOGUSDT
2024-07-07 18:43:50 [INFO] - Accept=application/json
2024-07-07 18:43:50 [INFO] - Content-Type=application/json
2024-07-07 18:43:50 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=ETCUSDT
2024-07-07 18:43:50 [INFO] - Accept=application/json
2024-07-07 18:43:50 [INFO] - Content-Type=application/json
2024-07-07 18:43:51 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=BLOCKUSDT
2024-07-07 18:43:51 [INFO] - Accept=application/json
2024-07-07 18:43:51 [INFO] - Content-Type=application/json
2024-07-07 18:43:51 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=MICHIUSDT
2024-07-07 18:43:51 [INFO] - Accept=application/json
2024-07-07 18:43:51 [INFO] - Content-Type=application/json
2024-07-07 18:43:51 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=BTCUSDT
2024-07-07 18:43:51 [INFO] - Accept=application/json
2024-07-07 18:43:51 [INFO] - Content-Type=application/json
2024-07-07 18:43:52 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=ENJUSDT
2024-07-07 18:43:52 [INFO] - Accept=application/json
2024-07-07 18:43:52 [INFO] - Content-Type=application/json
2024-07-07 18:43:52 [INFO] - Request: GET https://api.coinex.com/v2/spot/market?market=PITUSDT
2024-07-07 18:43:52 [INFO] - Accept=application/json
2024-07-07 18:43:52 [INFO] - Content-Type=application/json
2024-07-07 18:43:52 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=ETC_USDT
2024-07-07 18:43:52 [INFO] - Accept=application/json
2024-07-07 18:43:52 [INFO] - Content-Type=application/json
2024-07-07 18:43:52 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:52 [INFO] - Timestamp=1720367032
2024-07-07 18:43:52 [INFO] - SIGN=53cd79420aeb68a81911c95968420a270745fe9ace6917ca8c94bdef878f2039f2fe03ad9f0713e9c61e979530002e4197c01f4d4bb1e82af8fd2dfba821d4c1
2024-07-07 18:43:53 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=BENDOG_USDT
2024-07-07 18:43:53 [INFO] - Accept=application/json
2024-07-07 18:43:53 [INFO] - Content-Type=application/json
2024-07-07 18:43:53 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:53 [INFO] - Timestamp=1720367033
2024-07-07 18:43:53 [INFO] - SIGN=104356e9581ff4221eaf41c9e7cf15e45e2d9b102ed46f6e0a776760a370fbdade549b6ff0a1bdf39809ccbc48304f6d74c23efaa9dd27de6156c219b51e8b07
2024-07-07 18:43:53 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=ENJ_USDT
2024-07-07 18:43:53 [INFO] - Accept=application/json
2024-07-07 18:43:53 [INFO] - Content-Type=application/json
2024-07-07 18:43:53 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:53 [INFO] - Timestamp=1720367033
2024-07-07 18:43:53 [INFO] - SIGN=17b0b955ee3bc4b75f56c5fe97d5c3e4488313904f39007b61cdfccda2d7c5c8f57be6ab9e4701d295f93761fad055b7a77fc835e987a7612f5b84163662bd15
2024-07-07 18:43:53 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=BTC_USDT
2024-07-07 18:43:53 [INFO] - Accept=application/json
2024-07-07 18:43:53 [INFO] - Content-Type=application/json
2024-07-07 18:43:53 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:53 [INFO] - Timestamp=1720367033
2024-07-07 18:43:53 [INFO] - SIGN=3aa8e759b44dac6b3eb5ba456f047389e21106f39803b00ecfca713ef1f5ace969e5c1f4c34a2073cd27dfb25078112a488accad3abb7554f160a3c930748dc9
2024-07-07 18:43:54 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=DOGA_USDT
2024-07-07 18:43:54 [INFO] - Accept=application/json
2024-07-07 18:43:54 [INFO] - Content-Type=application/json
2024-07-07 18:43:54 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:54 [INFO] - Timestamp=1720367034
2024-07-07 18:43:54 [INFO] - SIGN=992d768e88ce916bcca1c7956a9498e4acb21e4e43ccd02f7bd6b55e7eebac4e16620579e5ec854fd3da8a127fea37fdc5a2e90bb7d57f9ac9958fa925e24fb8
2024-07-07 18:43:54 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=PIT_USDT
2024-07-07 18:43:54 [INFO] - Accept=application/json
2024-07-07 18:43:54 [INFO] - Content-Type=application/json
2024-07-07 18:43:54 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:54 [INFO] - Timestamp=1720367034
2024-07-07 18:43:54 [INFO] - SIGN=996b9fd69d1ce7fa28345ddc4b54176b46187e9d104df5c111a0f447a7c211ceddfdeb4beb6643e73c37878f7a60726aacd3cc2ffee1cea9d393292e61803901
2024-07-07 18:43:55 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=KZEN_USDT
2024-07-07 18:43:55 [INFO] - Accept=application/json
2024-07-07 18:43:55 [INFO] - Content-Type=application/json
2024-07-07 18:43:55 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:55 [INFO] - Timestamp=1720367035
2024-07-07 18:43:55 [INFO] - SIGN=1316edb50b6036093b40a49c0df978a597daff50f79af519fd05c999bb6ee70b1e64c1954d73c2bc2e3d50c8769349535caa0c7ddbd08b5bdcdb5997b5628736
2024-07-07 18:43:55 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=BLOCK_USDT
2024-07-07 18:43:55 [INFO] - Accept=application/json
2024-07-07 18:43:55 [INFO] - Content-Type=application/json
2024-07-07 18:43:55 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:55 [INFO] - Timestamp=1720367035
2024-07-07 18:43:55 [INFO] - SIGN=037072ae15458d128662d6272ae1af939b3d2657bc3ea4f72b250ae6a7f88af8e3a4b7d5ad3ac7c2e962028d6e9a1341dc92dfa8fb5c568574b9fa8830b65ef6
2024-07-07 18:43:55 [INFO] - Request: GET https://api.gateio.ws/api/v4/wallet/fee?currency_pair=WLTH_USDT
2024-07-07 18:43:55 [INFO] - Accept=application/json
2024-07-07 18:43:55 [INFO] - Content-Type=application/json
2024-07-07 18:43:55 [INFO] - KEY=772206b7012c7e1032e2bcb6d206716d
2024-07-07 18:43:55 [INFO] - Timestamp=1720367035
2024-07-07 18:43:55 [INFO] - SIGN=28e00e6f83ded8b7a3cc619be6534a14bc267c975548ac981b10ffd7e76df6c9480d6a67042453a663d8ad20b299cbd4cf84a771061e6da300b6a48749bad504
2024-07-07 18:43:56 [INFO] - Обновление торговых комиссий успешно завершено. Время выполнения 26s
2024-07-07 18:45:59 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:45:59 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 18:45:59 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 18:46:04 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 27820 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 18:46:04 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 18:46:04 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:46:04 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:46:04 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 18:46:05 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:46:05 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 18:46:05 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 18:46:05 [INFO] - Finished Spring Data repository scanning in 225 ms. Found 6 JPA repository interfaces.
2024-07-07 18:46:05 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:46:05 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:46:05 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:46:05 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:46:05 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:46:05 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:46:05 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:46:05 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:46:05 [INFO] - Finished Spring Data repository scanning in 48 ms. Found 1 Redis repository interface.
2024-07-07 18:46:06 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 18:46:06 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 18:46:06 [INFO] - Starting service [Tomcat]
2024-07-07 18:46:06 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 18:46:06 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 18:46:06 [INFO] - Root WebApplicationContext: initialization completed in 2097 ms
2024-07-07 18:46:06 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 18:46:06 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 18:46:06 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 18:46:06 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 18:46:06 [INFO] - HikariPool-1 - Starting...
2024-07-07 18:46:06 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68df8c6
2024-07-07 18:46:06 [INFO] - HikariPool-1 - Start completed.
2024-07-07 18:46:08 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 18:46:08 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:46:09 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@32c7495, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2640f5ea, org.springframework.security.web.context.SecurityContextHolderFilter@1a18e18d, org.springframework.security.web.header.HeaderWriterFilter@8be84bf, org.springframework.security.web.authentication.logout.LogoutFilter@199549a5, com.exchange.scanner.security.service.utils.JwtTokenFilter@321c01c2, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5b0fc8c2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@727eae52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@237bdd46, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45accb5, org.springframework.security.web.session.SessionManagementFilter@4ce1ab4c, org.springframework.security.web.access.ExceptionTranslationFilter@5118c7fb, org.springframework.security.web.access.intercept.AuthorizationFilter@5697f801]
2024-07-07 18:46:10 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 18:46:10 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 18:46:10 [INFO] - Started ScannerApplication in 6.528 seconds (process running for 7.225)
2024-07-07 18:46:10 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 18:46:41 [INFO] - Обновление торговых комиссий успешно завершено. Время выполнения 31s
2024-07-07 18:46:41 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 18:47:13 [INFO] - Обновление списка валют успешно завершено. Время выполения: 31s
2024-07-07 18:47:13 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 18:47:39 [INFO] - Обновление списка сетей успешно завершено. Время выполнения 26s
2024-07-07 18:47:39 [INFO] - scheduling-1 приступил к выполнению задачи getVolume24h
2024-07-07 18:48:05 [INFO] - Обновление суточного торгового объёма успешно завершено. Время выполнения 26s
2024-07-07 18:52:53 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:52:53 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 18:52:53 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 18:52:58 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 45940 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 18:52:58 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 18:52:58 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:52:58 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:52:58 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 18:52:59 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:52:59 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 18:52:59 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 18:52:59 [INFO] - Finished Spring Data repository scanning in 205 ms. Found 6 JPA repository interfaces.
2024-07-07 18:52:59 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 18:52:59 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 18:52:59 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:52:59 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:52:59 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:52:59 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:52:59 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:52:59 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 18:52:59 [INFO] - Finished Spring Data repository scanning in 42 ms. Found 1 Redis repository interface.
2024-07-07 18:53:00 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 18:53:00 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 18:53:00 [INFO] - Starting service [Tomcat]
2024-07-07 18:53:00 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 18:53:00 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 18:53:00 [INFO] - Root WebApplicationContext: initialization completed in 2045 ms
2024-07-07 18:53:00 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 18:53:00 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 18:53:00 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 18:53:00 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 18:53:00 [INFO] - HikariPool-1 - Starting...
2024-07-07 18:53:01 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@68df8c6
2024-07-07 18:53:01 [INFO] - HikariPool-1 - Start completed.
2024-07-07 18:53:02 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 18:53:02 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 18:53:03 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45accb5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b32aaca, org.springframework.security.web.context.SecurityContextHolderFilter@727eae52, org.springframework.security.web.header.HeaderWriterFilter@aee3d6e, org.springframework.security.web.authentication.logout.LogoutFilter@4844cbe4, com.exchange.scanner.security.service.utils.JwtTokenFilter@321c01c2, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7ebc2975, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e32442d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@310df168, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b5afde5, org.springframework.security.web.session.SessionManagementFilter@c9ba9e2, org.springframework.security.web.access.ExceptionTranslationFilter@8be84bf, org.springframework.security.web.access.intercept.AuthorizationFilter@39b265c9]
2024-07-07 18:53:04 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 18:53:04 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 18:53:04 [INFO] - Started ScannerApplication in 6.352 seconds (process running for 7.053)
2024-07-07 18:53:04 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 18:53:37 [INFO] - Обновление списка валют успешно завершено. Время выполения: 33s
2024-07-07 18:53:38 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 18:54:02 [INFO] - Обновление списка сетей успешно завершено. Время выполнения 24s
2024-07-07 18:54:02 [INFO] - scheduling-1 приступил к выполнению задачи getVolume24h
2024-07-07 18:54:29 [INFO] - Обновление суточного торгового объёма успешно завершено. Время выполнения 27s
2024-07-07 18:54:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:54:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:54:35 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 18:55:02 [INFO] - Обновление торговых комиссий успешно завершено. Время выполнения 26s
2024-07-07 18:55:02 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:06 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 18:55:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:39 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:44 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:55:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:55:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:55:54 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:55:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:06 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:11 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:16 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:21 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:56:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 18:56:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:32 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:54 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:56:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:56:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:56:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:16 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:21 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:57:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:32 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:57:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:51 [INFO] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-07 18:57:51 [INFO] - Initializing Servlet 'dispatcherServlet'
2024-07-07 18:57:51 [INFO] - Completed initialization in 5 ms
2024-07-07 18:57:51 [ERROR] - Токен просрочен JWT expired at 2024-07-03T05:22:34Z. Current time: 2024-07-07T18:57:51Z, a difference of 394517825 milliseconds.  Allowed clock skew: 0 milliseconds.
2024-07-07 18:57:52 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:57:54 [WARN] - [ff252f2d-107, L:/192.168.31.26:53128 - R:api-cloud.bitmart.com/188.114.99.229:443] The connection observed an error
io.netty.handler.timeout.ReadTimeoutException: null
2024-07-07 18:57:54 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientRequestException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: null
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET https://api-cloud.bitmart.com/spot/quotation/v3/books [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.timeout.ReadTimeoutHandler.readTimedOut(ReadTimeoutHandler.java:98)
		at io.netty.handler.timeout.ReadTimeoutHandler.channelIdle(ReadTimeoutHandler.java:90)
		at io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:525)
		at io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:497)
		at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
		at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBitmart.lambda$getOrderBook$23(ApiBitmart.java:232)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBitmart.getOrderBook(ApiBitmart.java:231)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:75)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2024-07-07 18:57:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:57:57 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:02 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:07 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:12 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:58:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:17 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:58:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:22 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:27 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:58:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:32 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:58:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:37 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:42 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:47 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:58:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:58:52 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:58:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:58:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:07 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:07 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:59:12 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:17 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:18 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:22 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:27 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:32 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:37 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 18:59:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:42 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:47 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:52 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:53 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 18:59:57 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 18:59:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 18:59:58 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:02 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:00:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:08 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:00:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:12 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:00:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:17 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:00:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:00:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:00:36 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:00:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:00:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:00:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:00:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 19:00:58 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:01:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:11 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 7s
2024-07-07 19:01:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:16 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:01:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:21 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:01:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 19:01:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:01:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:01:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:01:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:01:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:01:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:01:53 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:01:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:01:58 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:02:03 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:02:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 11s
2024-07-07 19:02:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:02:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:02:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:02:36 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:02:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:02:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:02:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:02:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:02:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:02:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:07 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:07 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:13 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:03:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:03:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:03:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:03:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:03:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:44 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:54 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:03:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:03:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:03:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:04:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:04:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:04:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:04:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:50 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:04:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:04:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:05:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:05:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:05:39 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:05:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:05:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:06:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:06:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:06:57 [WARN] - [10223d8e-312, L:/192.168.31.26:53298 - R:api-cloud.bitmart.com/188.114.98.229:443] The connection observed an error
io.netty.handler.timeout.ReadTimeoutException: null
2024-07-07 19:06:57 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientRequestException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: null
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET https://api-cloud.bitmart.com/spot/quotation/v3/books [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.timeout.ReadTimeoutHandler.readTimedOut(ReadTimeoutHandler.java:98)
		at io.netty.handler.timeout.ReadTimeoutHandler.channelIdle(ReadTimeoutHandler.java:90)
		at io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:525)
		at io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:497)
		at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
		at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBitmart.lambda$getOrderBook$23(ApiBitmart.java:232)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBitmart.getOrderBook(ApiBitmart.java:231)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:75)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2024-07-07 19:06:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:07:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:04 [ERROR] - Ошибка получения order book от Bitmart. Причина: {"trace":"e44cfaf4f7224c66a2b62e442f4ad049.96.17203684243682023","code":30013,"data":{},"message":"(S)Request too many requests"}
2024-07-07 19:07:05 [ERROR] - Ошибка получения order book от Bitmart. Причина: {"trace":"e44cfaf4f7224c66a2b62e442f4ad049.113.17203684252143779","code":30013,"data":{},"message":"(S)Request too many requests"}
2024-07-07 19:07:06 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:07:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:07:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:07:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:39 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:07:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:07:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:07:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:08:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:08:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:08:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:08:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:39 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:44 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:08:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:08:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:06 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:09:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:09:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:09:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:10:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:13 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:17 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:10:36 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:50 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:10:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:10:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:06 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:11:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:11 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:11:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:11:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:11:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:11:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:02 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:12:02 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:07 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:07 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:12 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:17 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:12:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:12:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:12:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:12:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:12:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:12:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:13:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:32 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:35 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:13:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:13:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:13:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:32 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:14:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:14:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:14:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:16 [WARN] - [8536a98a-87, L:/192.168.31.26:53972 - R:www.lbkex.net/170.33.13.224:443] The connection observed an error
io.netty.handler.timeout.ReadTimeoutException: null
2024-07-07 19:15:16 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientRequestException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: null
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET https://www.lbkex.net/v2/depth.do [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.timeout.ReadTimeoutHandler.readTimedOut(ReadTimeoutHandler.java:98)
		at io.netty.handler.timeout.ReadTimeoutHandler.channelIdle(ReadTimeoutHandler.java:90)
		at io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask.run(IdleStateHandler.java:525)
		at io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask.run(IdleStateHandler.java:497)
		at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)
		at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:153)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiLBank.lambda$getOrderBook$20(ApiLBank.java:236)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiLBank.getOrderBook(ApiLBank.java:235)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:76)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.netty.handler.timeout.ReadTimeoutException: null
2024-07-07 19:15:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:30 [ERROR] - Ошибка получения order book от Bitmart. Причина: {"trace":"e44cfaf4f7224c66a2b62e442f4ad049.119.17203689299729987","code":30013,"data":{},"message":"(S)Request too many requests"}
2024-07-07 19:15:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 7s
2024-07-07 19:15:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:15:36 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:38 [ERROR] - Ошибка получения order book от BingX. Причина: <html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>cloudflare</center>
</body>
</html>

2024-07-07 19:15:40 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientResponseException$BadGateway: 502 Bad Gateway from GET https://open-api.bingx.com/openApi/spot/v2/market/depth
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$BadGateway: 502 Bad Gateway from GET https://open-api.bingx.com/openApi/spot/v2/market/depth
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:320)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:134)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onComplete(FluxMapFuseable.java:350)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2098)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:181)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:147)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:208)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:260)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:155)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:446)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:500)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:793)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBingX.lambda$getOrderBook$28(ApiBingX.java:277)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBingX.getOrderBook(ApiBingX.java:276)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:81)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		... 1 common frames omitted
Caused by: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/html' not supported for bodyType=com.exchange.scanner.dto.response.exchangedata.bingx.depth.BingXCoinDepth
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET https://open-api.bingx.com/openApi/spot/v2/market/depth?symbol=MICHI_USDT&depth=20&type=step0 [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:573)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:137)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:435)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:466)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:726)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 19:15:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:54 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:15:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:15:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:16:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:16:36 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:16:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:16:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:16:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:17:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:17:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:17:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:17:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:17:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:18:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:18:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:18:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:19:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:19:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:19:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:19:36 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:19:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:19:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:50 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:19:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:19:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:03 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:12 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:16 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:20:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:20:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:20:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:20:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:20:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:21:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:21:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:12 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:17 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:21 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:21:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:44 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:21:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:21:53 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:21:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:21:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:22:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:22:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:22:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:22:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:23:03 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:07 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:07 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:11 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:23:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:23:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:23:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:23:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:32 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:23:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:39 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:23:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:23:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:23:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 11s
2024-07-07 19:24:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:24:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:24:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:24:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:24:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:24:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:24:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:25:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:13 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:25:17 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:21 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:33 [WARN] - [6eea5672-937, L:/192.168.31.26:53951 - R:api.bitget.com/104.18.14.166:443] The connection observed an error
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 19:25:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:25:36 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientRequestException: Connection reset
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Connection reset
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET https://api.bitget.com/api/v2/spot/market/merge-depth [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.handleReadException(AbstractNioByteChannel.java:125)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:177)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBitget.lambda$getOrderBook$25(ApiBitget.java:219)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBitget.getOrderBook(ApiBitget.java:218)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:71)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 19:25:36 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:44 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:52 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:25:52 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:25:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:25:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:12 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:16 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:26:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:26:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:26:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:26:53 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:26:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:26:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:27:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:27:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:27:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:27:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:27:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:27:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:28:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:28:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:28:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:28:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:28:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:28:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:28:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:28:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:29:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:29:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:29:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:29:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:29:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:29:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:29:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:29:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:29:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:29:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:29:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:29:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:29:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:29:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:30:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 19:30:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:30:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:30:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:30:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:31:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:31:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:34 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:31:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:31:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:31:54 [WARN] - [42debc6c-406, L:/192.168.31.26:54080 - R:api.bitget.com/104.18.14.166:443] The connection observed an error
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 19:31:57 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientRequestException: Connection reset
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientRequestException: Connection reset
	at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Request to GET https://api.bitget.com/api/v2/spot/market/merge-depth [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:136)
		at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:205)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:229)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:279)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.maybeOnError(FluxConcatMapNoPrefetch.java:327)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.onNext(FluxConcatMapNoPrefetch.java:212)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.SinkManyEmitterProcessor.drain(SinkManyEmitterProcessor.java:476)
		at reactor.core.publisher.SinkManyEmitterProcessor$EmitterInner.drainParent(SinkManyEmitterProcessor.java:620)
		at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber.request(FluxConcatMapNoPrefetch.java:337)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.Operators$DeferredSubscription.request(Operators.java:1743)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:196)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:205)
		at reactor.netty.http.client.HttpClientConnect$HttpObserver.onUncaughtException(HttpClientConnect.java:403)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onUncaughtException(ReactorNetty.java:703)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:223)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:476)
		at reactor.netty.channel.FluxReceive.drainReceiver(FluxReceive.java:247)
		at reactor.netty.channel.FluxReceive.onInboundError(FluxReceive.java:468)
		at reactor.netty.channel.ChannelOperations.onInboundError(ChannelOperations.java:515)
		at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:145)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424)
		at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92)
		at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145)
		at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143)
		at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.handler.ssl.SslHandler.exceptionCaught(SslHandler.java:1204)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:317)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.exceptionCaught(DefaultChannelPipeline.java:1377)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:346)
		at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:325)
		at io.netty.channel.DefaultChannelPipeline.fireExceptionCaught(DefaultChannelPipeline.java:907)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.handleReadException(AbstractNioByteChannel.java:125)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:177)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBitget.lambda$getOrderBook$25(ApiBitget.java:219)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBitget.getOrderBook(ApiBitget.java:218)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:71)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:255)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 19:31:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:32:43 [ERROR] - Ошибка получения order book от Bitmart. Причина: error code: 504
2024-07-07 19:32:43 [ERROR] - Unexpected error occurred in scheduled task
java.util.concurrent.CompletionException: org.springframework.web.reactive.function.client.WebClientResponseException$GatewayTimeout: 504 Gateway Timeout from GET https://api-cloud.bitmart.com/spot/quotation/v3/books
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1807)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.web.reactive.function.client.WebClientResponseException$GatewayTimeout: 504 Gateway Timeout from GET https://api-cloud.bitmart.com/spot/quotation/v3/books
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:322)
	at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214)
	at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106)
	at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onComplete(FluxDefaultIfEmpty.java:134)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onComplete(FluxMapFuseable.java:350)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onComplete(FluxFilterFuseable.java:391)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2098)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.Operators.complete(Operators.java:137)
	at reactor.netty.channel.FluxReceive.startReceiver(FluxReceive.java:181)
	at reactor.netty.channel.FluxReceive.subscribe(FluxReceive.java:147)
	at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)
	at reactor.netty.ByteBufFlux.subscribe(ByteBufFlux.java:340)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onError(FluxConcatArray.java:208)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.FluxError.subscribe(FluxError.java:43)
	at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
	at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:260)
	at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:79)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4568)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onComplete(FluxOnAssembly.java:549)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2231)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:189)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:155)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)
	at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)
	at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)
	at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)
	at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)
	at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)
	at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:446)
	at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:500)
	at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:793)
	at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 common frames omitted
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)
		at reactor.core.publisher.Mono.block(Mono.java:1779)
		at com.exchange.scanner.services.impl.api.ApiBitmart.lambda$getOrderBook$23(ApiBitmart.java:232)
		at java.base/java.lang.Iterable.forEach(Iterable.java:75)
		at com.exchange.scanner.services.impl.api.ApiBitmart.getOrderBook(ApiBitmart.java:231)
		at com.exchange.scanner.services.impl.ApiExchangeAdapterImpl.getOrderBook(ApiExchangeAdapterImpl.java:75)
		at com.exchange.scanner.services.utils.AppServiceUtils.lambda$getOrderBooksAsync$11(AppServiceUtils.java:166)
		at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		... 1 common frames omitted
Caused by: org.springframework.web.reactive.function.UnsupportedMediaTypeException: Content type 'text/plain;charset=UTF-8' not supported for bodyType=com.exchange.scanner.dto.response.exchangedata.bitmart.depth.BitmartCoinDepth
	at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Body from GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=20 [DefaultClientResponse]
Original Stack Trace:
		at org.springframework.web.reactive.function.BodyExtractors.readWithMessageReaders(BodyExtractors.java:205)
		at org.springframework.web.reactive.function.BodyExtractors.lambda$toMono$2(BodyExtractors.java:84)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.body(DefaultClientResponse.java:135)
		at org.springframework.web.reactive.function.client.DefaultClientResponse.bodyToMono(DefaultClientResponse.java:150)
		at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.lambda$bodyToMono$2(DefaultWebClient.java:573)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
		at reactor.core.publisher.FluxHide$SuppressFuseableSubscriber.onNext(FluxHide.java:137)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:251)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onSubscribeInner(MonoFlatMapMany.java:150)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onSubscribe(MonoFlatMapMany.java:246)
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)
		at reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)
		at reactor.core.publisher.Flux.subscribe(Flux.java:8840)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onNext(MonoFlatMapMany.java:196)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onNext(FluxRetryWhen.java:178)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at reactor.netty.http.client.HttpClientConnect$HttpIOHandlerObserver.onStateChange(HttpClientConnect.java:435)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:710)
		at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onStateChange(DefaultPooledConnectionProvider.java:205)
		at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onStateChange(DefaultPooledConnectionProvider.java:466)
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:726)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:289)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:455)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475)
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338)
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387)
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2024-07-07 19:32:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:48 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:32:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:32:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:32:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:33:03 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:33:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:33:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:33:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:33:50 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:54 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:33:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:33:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:33:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:34:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:35 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:34:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:34:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:34:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:34:53 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:34:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:34:58 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:03 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:19 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:24 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:35:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:35:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:50 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:35:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:35:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:36:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:06 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:36:06 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:11 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:36:11 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:16 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:36:16 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:21 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:36:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:36:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:32 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:36:32 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:36:37 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:36:37 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:42 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:36:42 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:36:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:36:57 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 10s
2024-07-07 19:36:57 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:02 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:02 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:07 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:37:07 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:12 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:37:12 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:17 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:17 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:28 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:33 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:35 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:37:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:38 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:37:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:37:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 6s
2024-07-07 19:37:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:38:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:38:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:38:20 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:25 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:25 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:30 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:38:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:50 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:38:50 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:38:55 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:38:55 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:39:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:10 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:10 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:15 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:39:15 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:20 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:21 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:26 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:26 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:30 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:39:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:39:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:39:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:46 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:39:46 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:39:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:39:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:01 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:01 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:05 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:05 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:09 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:18 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:22 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:40:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:40:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:40:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:39 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:40:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:40:43 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:47 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:47 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:51 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:51 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:40:56 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:40:56 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:00 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:41:00 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:04 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:41:08 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:13 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:41:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:23 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:27 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:41:27 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:31 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:31 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:41:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:40 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:40 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:45 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:45 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:49 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:41:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:41:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:42:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:42:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:42:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:42:58 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:42:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:13 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:43:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:43:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:43:44 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:48 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:43:49 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:53 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:43:54 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:43:59 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:43:59 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:03 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:44:04 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:08 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:44:09 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:14 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:44:14 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:18 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:44:19 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:23 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:44:24 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:28 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:44:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:33 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:44:34 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:34 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppServiceUtils.getChainData(AppServiceUtils.java:293)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$16(AppServiceUtils.java:222)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$17(AppServiceUtils.java:219)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppServiceUtils.lambda$checkExchangesForArbitrageOpportunities$18(AppServiceUtils.java:219)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppServiceUtils.checkExchangesForArbitrageOpportunities(AppServiceUtils.java:211)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:206)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:44:38 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 3s
2024-07-07 19:44:39 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:44:43 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 4s
2024-07-07 19:44:45 [INFO] - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 19:44:45 [INFO] - HikariPool-1 - Shutdown initiated...
2024-07-07 19:44:45 [INFO] - HikariPool-1 - Shutdown completed.
2024-07-07 19:45:13 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 37060 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 19:45:13 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 19:45:15 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:45:15 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 19:45:15 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 19:45:15 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:45:15 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 19:45:15 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 19:45:15 [INFO] - Finished Spring Data repository scanning in 187 ms. Found 6 JPA repository interfaces.
2024-07-07 19:45:15 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:45:15 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 19:45:15 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:45:15 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:45:15 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:45:15 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:45:15 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:45:15 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:45:15 [INFO] - Finished Spring Data repository scanning in 45 ms. Found 1 Redis repository interface.
2024-07-07 19:45:16 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 19:45:16 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 19:45:16 [INFO] - Starting service [Tomcat]
2024-07-07 19:45:16 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 19:45:16 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 19:45:16 [INFO] - Root WebApplicationContext: initialization completed in 2913 ms
2024-07-07 19:45:16 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 19:45:16 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 19:45:16 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 19:45:17 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 19:45:17 [INFO] - HikariPool-1 - Starting...
2024-07-07 19:45:17 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6282f1eb
2024-07-07 19:45:17 [INFO] - HikariPool-1 - Start completed.
2024-07-07 19:45:18 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 19:45:18 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 19:45:20 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4c752425, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f1e946f, org.springframework.security.web.context.SecurityContextHolderFilter@eaa901a, org.springframework.security.web.header.HeaderWriterFilter@1a034bbc, org.springframework.security.web.authentication.logout.LogoutFilter@4b6abf4e, com.exchange.scanner.security.service.utils.JwtTokenFilter@3e5febe9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@199549a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69173bb7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d0ea2af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@542adcfa, org.springframework.security.web.session.SessionManagementFilter@530e500c, org.springframework.security.web.access.ExceptionTranslationFilter@7abc838a, org.springframework.security.web.access.intercept.AuthorizationFilter@272d0dd3]
2024-07-07 19:45:20 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 19:45:20 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 19:45:20 [INFO] - Started ScannerApplication in 7.579 seconds (process running for 8.825)
2024-07-07 19:45:20 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 19:45:35 [INFO] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-07 19:45:35 [INFO] - Initializing Servlet 'dispatcherServlet'
2024-07-07 19:45:35 [INFO] - Completed initialization in 1 ms
2024-07-07 19:45:35 [ERROR] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.util.concurrent.ExecutionException: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session] with root cause
org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.exchange.scanner.model.Coin.chains: could not initialize proxy - no Session
	at org.hibernate.collection.spi.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:634)
	at org.hibernate.collection.spi.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:217)
	at org.hibernate.collection.spi.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:613)
	at org.hibernate.collection.spi.AbstractPersistentCollection.read(AbstractPersistentCollection.java:136)
	at org.hibernate.collection.spi.PersistentSet.iterator(PersistentSet.java:169)
	at com.exchange.scanner.services.utils.AppUtils.ArbitrageOpportunitiesUtils.getChainData(ArbitrageOpportunitiesUtils.java:107)
	at com.exchange.scanner.services.utils.AppUtils.ArbitrageOpportunitiesUtils.lambda$checkExchangesForArbitrageOpportunities$0(ArbitrageOpportunitiesUtils.java:35)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppUtils.ArbitrageOpportunitiesUtils.lambda$checkExchangesForArbitrageOpportunities$1(ArbitrageOpportunitiesUtils.java:32)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at com.exchange.scanner.services.utils.AppUtils.ArbitrageOpportunitiesUtils.lambda$checkExchangesForArbitrageOpportunities$2(ArbitrageOpportunitiesUtils.java:32)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at com.exchange.scanner.services.utils.AppUtils.ArbitrageOpportunitiesUtils.checkExchangesForArbitrageOpportunities(ArbitrageOpportunitiesUtils.java:24)
	at com.exchange.scanner.services.impl.AppServiceImpl.lambda$getArbitrageOpportunities$9(AppServiceImpl.java:211)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)
2024-07-07 19:46:28 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 22696 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 19:46:28 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 19:46:29 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:46:29 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 19:46:29 [INFO] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-07 19:46:29 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:46:29 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 19:46:30 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 19:46:30 [INFO] - Finished Spring Data repository scanning in 223 ms. Found 6 JPA repository interfaces.
2024-07-07 19:46:30 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:46:30 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 19:46:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:46:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:46:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:46:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:46:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:46:30 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:46:30 [INFO] - Finished Spring Data repository scanning in 41 ms. Found 1 Redis repository interface.
2024-07-07 19:46:30 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 19:46:30 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 19:46:30 [INFO] - Starting service [Tomcat]
2024-07-07 19:46:30 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 19:46:31 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 19:46:31 [INFO] - Root WebApplicationContext: initialization completed in 2290 ms
2024-07-07 19:46:31 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 19:46:31 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 19:46:31 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 19:46:31 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 19:46:31 [INFO] - HikariPool-1 - Starting...
2024-07-07 19:46:31 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70169464
2024-07-07 19:46:31 [INFO] - HikariPool-1 - Start completed.
2024-07-07 19:46:33 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 19:46:33 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 19:46:34 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f6e6902, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d8236c, org.springframework.security.web.context.SecurityContextHolderFilter@7fec354, org.springframework.security.web.header.HeaderWriterFilter@2c62f56f, org.springframework.security.web.authentication.logout.LogoutFilter@676c3745, com.exchange.scanner.security.service.utils.JwtTokenFilter@1e9e4468, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7f1e946f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5118c7fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@792b0cad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5697f801, org.springframework.security.web.session.SessionManagementFilter@2f053ff3, org.springframework.security.web.access.ExceptionTranslationFilter@4a6dd88e, org.springframework.security.web.access.intercept.AuthorizationFilter@1077a7]
2024-07-07 19:46:34 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 19:46:34 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 19:46:34 [INFO] - Started ScannerApplication in 6.747 seconds (process running for 7.523)
2024-07-07 19:46:34 [INFO] - scheduling-1 приступил к выполнению задачи getTradingFee
2024-07-07 19:47:06 [INFO] - Обновление торговых комиссий успешно завершено. Время выполнения 31s
2024-07-07 19:47:06 [INFO] - scheduling-1 приступил к выполнению задачи getVolume24h
2024-07-07 19:47:34 [INFO] - Обновление суточного торгового объёма успешно завершено. Время выполнения 28s
2024-07-07 19:47:34 [INFO] - scheduling-1 приступил к выполнению задачи getCoinsChains
2024-07-07 19:48:01 [INFO] - Обновление списка сетей успешно завершено. Время выполнения 26s
2024-07-07 19:48:01 [INFO] - scheduling-1 приступил к выполнению задачи refreshCoins
2024-07-07 19:48:33 [INFO] - Обновление списка валют успешно завершено. Время выполения: 32s
2024-07-07 19:50:16 [INFO] - Starting ScannerApplication using Java 21.0.3 with PID 12004 (C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner\target\classes started by dmitriydubov in C:\Users\schli\OneDrive\Desktop\Биржевой сканер\exchangeScanner\scanner)
2024-07-07 19:50:16 [INFO] - No active profile set, falling back to 1 default profile: "default"
2024-07-07 19:50:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:50:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 19:50:17 [INFO] - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-07 19:50:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:50:17 [INFO] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-07 19:50:17 [INFO] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.RefreshTokenRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2024-07-07 19:50:17 [INFO] - Finished Spring Data repository scanning in 192 ms. Found 6 JPA repository interfaces.
2024-07-07 19:50:17 [INFO] - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-07 19:50:17 [INFO] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-07 19:50:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ChainRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:50:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.CoinRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:50:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.ExchangeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:50:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.OrdersBookRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:50:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.repositories.UserMarketSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:50:17 [INFO] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.exchange.scanner.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-07 19:50:17 [INFO] - Finished Spring Data repository scanning in 50 ms. Found 1 Redis repository interface.
2024-07-07 19:50:18 [INFO] - Tomcat initialized with port 8080 (http)
2024-07-07 19:50:18 [INFO] - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-07 19:50:18 [INFO] - Starting service [Tomcat]
2024-07-07 19:50:18 [INFO] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-07-07 19:50:18 [INFO] - Initializing Spring embedded WebApplicationContext
2024-07-07 19:50:18 [INFO] - Root WebApplicationContext: initialization completed in 2122 ms
2024-07-07 19:50:18 [INFO] - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-07 19:50:18 [INFO] - HHH000412: Hibernate ORM core version 6.4.4.Final
2024-07-07 19:50:18 [INFO] - HHH000026: Second-level cache disabled
2024-07-07 19:50:19 [INFO] - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-07 19:50:19 [INFO] - HikariPool-1 - Starting...
2024-07-07 19:50:19 [INFO] - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7c206b14
2024-07-07 19:50:19 [INFO] - HikariPool-1 - Start completed.
2024-07-07 19:50:20 [INFO] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-07 19:50:20 [INFO] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-07 19:50:21 [INFO] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30b91493, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2771e501, org.springframework.security.web.context.SecurityContextHolderFilter@3a649f9a, org.springframework.security.web.header.HeaderWriterFilter@1c3b4de1, org.springframework.security.web.authentication.logout.LogoutFilter@1077a7, com.exchange.scanner.security.service.utils.JwtTokenFilter@7bb888b7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@45da40ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@628fa8ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ab4c4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a7abd4, org.springframework.security.web.session.SessionManagementFilter@aee3d6e, org.springframework.security.web.access.ExceptionTranslationFilter@730c9287, org.springframework.security.web.access.intercept.AuthorizationFilter@4c29138a]
2024-07-07 19:50:22 [INFO] - Starting ProtocolHandler ["http-nio-8080"]
2024-07-07 19:50:22 [INFO] - Tomcat started on port 8080 (http) with context path ''
2024-07-07 19:50:22 [INFO] - Started ScannerApplication in 6.513 seconds (process running for 7.219)
2024-07-07 19:50:22 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:50:29 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 7s
2024-07-07 19:50:29 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:50:35 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:50:35 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
2024-07-07 19:50:41 [INFO] - Операция обновления стакана цен выполнена. Время выполнения: 5s
2024-07-07 19:50:41 [INFO] - scheduling-1 приступил к выполнению задачи getOrderBooks
